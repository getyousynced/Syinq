{
    "version": 3,
    "checkpoint": {
        "stack": "organization/sync-website/production",
        "latest": {
            "manifest": {
                "time": "2024-10-06T21:57:18.509308+05:30",
                "magic": "903b0fc199aa93536ce5f75e472bc9aed798eaf192e1d7b983c92c33a044182d",
                "version": "v3.115.2"
            },
            "secrets_providers": {
                "type": "passphrase",
                "state": {
                    "salt": "v1:9emudV78IIo=:v1:xZXP08yef3YNes84:nGJJrz1DgX9YHgLhRQ0M2snk7JWMug=="
                }
            },
            "resources": [
                {
                    "urn": "urn:pulumi:production::sync-website::pulumi:pulumi:Stack::sync-website-production",
                    "custom": false,
                    "type": "pulumi:pulumi:Stack",
                    "created": "2024-10-03T08:01:07.215725Z",
                    "modified": "2024-10-03T08:01:07.215725Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/runtime/stack.ts#38,23"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:sst:LinkRef::SyncWebsiteLinkRef",
                    "custom": false,
                    "type": "sst:sst:LinkRef",
                    "outputs": {
                        "properties": {
                            "type": "sst.aws.Nextjs",
                            "url": "https://sync.getsync.tech"
                        },
                        "target": "SyncWebsite"
                    },
                    "parent": "urn:pulumi:production::sync-website::pulumi:pulumi:Stack::sync-website-production",
                    "created": "2024-10-06T16:17:09.264214Z",
                    "modified": "2024-10-06T16:17:09.264214Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/link.ts#25,7"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "custom": false,
                    "type": "sst:aws:Nextjs",
                    "outputs": {
                        "_hint": "https://sync.getsync.tech",
                        "_metadata": {
                            "edge": false,
                            "mode": "deployed",
                            "path": ".",
                            "server": "arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteDefaultFunction",
                            "url": "https://sync.getsync.tech"
                        }
                    },
                    "parent": "urn:pulumi:production::sync-website::pulumi:pulumi:Stack::sync-website-production",
                    "created": "2024-10-06T16:17:09.26095Z",
                    "modified": "2024-10-06T16:17:09.26095Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/nextjs.ts#493,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket::SyncWebsiteAssets",
                    "custom": false,
                    "type": "sst:aws:Bucket",
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "created": "2024-10-06T16:17:13.567878Z",
                    "modified": "2024-10-06T16:17:13.567878Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/bucket.ts#351,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2",
                    "custom": true,
                    "id": "20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "type": "pulumi:providers:aws",
                    "inputs": {
                        "defaultTags": "{\"tags\":{\"sst:app\":\"sync-website\",\"sst:stage\":\"production\"}}",
                        "region": "us-east-1",
                        "skipCredentialsValidation": "false",
                        "skipRegionValidation": "true",
                        "version": "6.54.2"
                    },
                    "outputs": {
                        "defaultTags": "{\"tags\":{\"sst:app\":\"sync-website\",\"sst:stage\":\"production\"}}",
                        "region": "us-east-1",
                        "skipCredentialsValidation": "false",
                        "skipRegionValidation": "true",
                        "version": "6.54.2"
                    },
                    "created": "2024-10-06T16:11:30.663029Z",
                    "modified": "2024-10-06T16:11:30.663029Z"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::pulumi:providers:pulumi-nodejs::default",
                    "custom": true,
                    "id": "031e252e-e32c-444a-a2e0-219cfd2e9d69",
                    "type": "pulumi:providers:pulumi-nodejs",
                    "created": "2024-10-06T16:11:30.825615Z",
                    "modified": "2024-10-06T16:11:30.825615Z"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$pulumi-nodejs:dynamic:Resource::SyncWebsiteS3AccessControl.sst.aws.OriginAccessControl",
                    "custom": true,
                    "id": "E3OKGWTGO2XAR9",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.OriginAccessControl\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "name": "sync-website-production-SyncWebsite"
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.OriginAccessControl\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:pulumi-nodejs::default::031e252e-e32c-444a-a2e0-219cfd2e9d69",
                    "propertyDependencies": {
                        "__provider": [],
                        "name": []
                    },
                    "created": "2024-10-06T16:17:15.105734Z",
                    "modified": "2024-10-06T16:17:15.105734Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/providers/origin-access-control.ts#14,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::pulumi:providers:random::default_4_15_0",
                    "custom": true,
                    "id": "db88f1f7-ddaf-4b4b-a1a0-f777192c10e5",
                    "type": "pulumi:providers:random",
                    "inputs": {
                        "version": "4.15.0"
                    },
                    "outputs": {
                        "version": "4.15.0"
                    },
                    "created": "2024-10-06T16:11:30.939167Z",
                    "modified": "2024-10-06T16:11:30.939167Z"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$random:index/randomId:RandomId::SyncWebsiteAssetsId",
                    "custom": true,
                    "id": "XmusXPex",
                    "type": "random:index/randomId:RandomId",
                    "inputs": {
                        "byteLength": 6
                    },
                    "outputs": {
                        "b64Std": "XmusXPex",
                        "b64Url": "XmusXPex",
                        "byteLength": 6,
                        "dec": "103816546285489",
                        "hex": "5e6bac5cf7b1",
                        "id": "XmusXPex"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket::SyncWebsiteAssets",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:random::default_4_15_0::db88f1f7-ddaf-4b4b-a1a0-f777192c10e5",
                    "propertyDependencies": {
                        "byteLength": []
                    },
                    "created": "2024-10-06T16:17:13.915356Z",
                    "modified": "2024-10-06T16:17:13.915356Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/bucket.ts#393,26"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket",
                    "custom": true,
                    "id": "sync-website-production-syncwebsiteassets-wxtuonvr",
                    "type": "aws:s3/bucketV2:BucketV2",
                    "inputs": {
                        "__defaults": [],
                        "bucket": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "forceDestroy": true,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":1200000000000,\"delete\":3600000000000,\"read\":1200000000000,\"update\":1200000000000}}",
                        "accelerationStatus": "",
                        "acl": null,
                        "arn": "arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr",
                        "bucket": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "bucketDomainName": "sync-website-production-syncwebsiteassets-wxtuonvr.s3.amazonaws.com",
                        "bucketPrefix": "",
                        "bucketRegionalDomainName": "sync-website-production-syncwebsiteassets-wxtuonvr.s3.us-east-1.amazonaws.com",
                        "corsRules": [],
                        "forceDestroy": true,
                        "grants": [
                            {
                                "id": "824607c14f2e4f15562e9d1858266ca8495a83a64a2c0cb07a526ad37d1678e4",
                                "permissions": [
                                    "FULL_CONTROL"
                                ],
                                "type": "CanonicalUser",
                                "uri": ""
                            }
                        ],
                        "hostedZoneId": "Z3AQBSTGFYJSTF",
                        "id": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "lifecycleRules": [],
                        "loggings": [],
                        "objectLockConfiguration": null,
                        "objectLockEnabled": false,
                        "policy": "",
                        "region": "us-east-1",
                        "replicationConfigurations": [],
                        "requestPayer": "BucketOwner",
                        "serverSideEncryptionConfigurations": [
                            {
                                "rules": [
                                    {
                                        "applyServerSideEncryptionByDefaults": [
                                            {
                                                "kmsMasterKeyId": "",
                                                "sseAlgorithm": "AES256"
                                            }
                                        ],
                                        "bucketKeyEnabled": false
                                    }
                                ]
                            }
                        ],
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "versionings": [
                            {
                                "enabled": false,
                                "mfaDelete": false
                            }
                        ],
                        "websiteDomain": null,
                        "websiteEndpoint": null,
                        "websites": []
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket::SyncWebsiteAssets",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$random:index/randomId:RandomId::SyncWebsiteAssetsId"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "bucket": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$random:index/randomId:RandomId::SyncWebsiteAssetsId"
                        ],
                        "forceDestroy": []
                    },
                    "retainOnDelete": true,
                    "created": "2024-10-06T16:17:21.934511Z",
                    "modified": "2024-10-06T16:17:21.934511Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/bucket.ts#407,14"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock::SyncWebsiteAssetsPublicAccessBlock",
                    "custom": true,
                    "id": "sync-website-production-syncwebsiteassets-wxtuonvr",
                    "type": "aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock",
                    "inputs": {
                        "__defaults": [],
                        "blockPublicAcls": true,
                        "blockPublicPolicy": true,
                        "bucket": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "ignorePublicAcls": true,
                        "restrictPublicBuckets": true
                    },
                    "outputs": {
                        "blockPublicAcls": true,
                        "blockPublicPolicy": true,
                        "bucket": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "id": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "ignorePublicAcls": true,
                        "restrictPublicBuckets": true
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket::SyncWebsiteAssets",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "blockPublicAcls": [],
                        "blockPublicPolicy": [],
                        "bucket": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket"
                        ],
                        "ignorePublicAcls": [],
                        "restrictPublicBuckets": []
                    },
                    "created": "2024-10-06T16:17:23.036029Z",
                    "modified": "2024-10-06T16:17:23.036029Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/bucket.ts#431,14"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketCorsConfigurationV2:BucketCorsConfigurationV2::SyncWebsiteAssetsCors",
                    "custom": true,
                    "id": "sync-website-production-syncwebsiteassets-wxtuonvr",
                    "type": "aws:s3/bucketCorsConfigurationV2:BucketCorsConfigurationV2",
                    "inputs": {
                        "__defaults": [],
                        "bucket": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "corsRules": [
                            {
                                "__defaults": [],
                                "allowedHeaders": [
                                    "*"
                                ],
                                "allowedMethods": [
                                    "DELETE",
                                    "GET",
                                    "HEAD",
                                    "POST",
                                    "PUT"
                                ],
                                "allowedOrigins": [
                                    "*"
                                ],
                                "maxAgeSeconds": 0
                            }
                        ]
                    },
                    "outputs": {
                        "bucket": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "corsRules": [
                            {
                                "allowedHeaders": [
                                    "*"
                                ],
                                "allowedMethods": [
                                    "DELETE",
                                    "GET",
                                    "HEAD",
                                    "POST",
                                    "PUT"
                                ],
                                "allowedOrigins": [
                                    "*"
                                ],
                                "exposeHeaders": [],
                                "id": "",
                                "maxAgeSeconds": 0
                            }
                        ],
                        "expectedBucketOwner": "",
                        "id": "sync-website-production-syncwebsiteassets-wxtuonvr"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket::SyncWebsiteAssets",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "bucket": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket"
                        ],
                        "corsRules": []
                    },
                    "created": "2024-10-06T16:17:23.251923Z",
                    "modified": "2024-10-06T16:17:23.251923Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketCorsConfigurationV2.ts#132,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketPolicy:BucketPolicy::SyncWebsiteAssetsPolicy",
                    "custom": true,
                    "id": "sync-website-production-syncwebsiteassets-wxtuonvr",
                    "type": "aws:s3/bucketPolicy:BucketPolicy",
                    "inputs": {
                        "__defaults": [],
                        "bucket": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr/*\",\n      \"Principal\": {\n        \"Service\": \"cloudfront.amazonaws.com\"\n      }\n    },\n    {\n      \"Effect\": \"Deny\",\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr/*\",\n        \"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr\"\n      ],\n      \"Principal\": \"*\",\n      \"Condition\": {\n        \"Bool\": {\n          \"aws:SecureTransport\": \"false\"\n        }\n      }\n    }\n  ]\n}"
                    },
                    "outputs": {
                        "bucket": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "id": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "policy": "{\"Statement\":[{\"Action\":\"s3:GetObject\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"cloudfront.amazonaws.com\"},\"Resource\":\"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr/*\"},{\"Action\":\"s3:*\",\"Condition\":{\"Bool\":{\"aws:SecureTransport\":\"false\"}},\"Effect\":\"Deny\",\"Principal\":\"*\",\"Resource\":[\"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr/*\",\"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr\"]}],\"Version\":\"2012-10-17\"}"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket::SyncWebsiteAssets",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketPublicAccessBlock:BucketPublicAccessBlock::SyncWebsiteAssetsPublicAccessBlock"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "bucket": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket"
                        ],
                        "policy": []
                    },
                    "created": "2024-10-06T16:17:24.556325Z",
                    "modified": "2024-10-06T16:17:24.556325Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketPolicy.ts#117,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$pulumi-nodejs:dynamic:Resource::SyncWebsiteBuild.sst.Run",
                    "custom": true,
                    "id": "run",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Run\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "command": "npx --yes open-next@3.0.8 build",
                        "cwd": ".",
                        "env": {
                            "ANDROID_HOME": "/Users/rupeshshandilya/Library/Android/sdk",
                            "AWS_PROFILE": "sync-dev",
                            "COLORTERM": "truecolor",
                            "COMMAND_MODE": "unix2003",
                            "GIT_ASKPASS": "/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass.sh",
                            "HOME": "/Users/rupeshshandilya",
                            "HOMEBREW_CELLAR": "/opt/homebrew/Cellar",
                            "HOMEBREW_PREFIX": "/opt/homebrew",
                            "HOMEBREW_REPOSITORY": "/opt/homebrew",
                            "INFOPATH": "/opt/homebrew/share/info:/opt/homebrew/share/info:",
                            "INIT_CWD": "/Users/rupeshshandilya/Desktop/test/Sync-Website",
                            "JAVA_HOME": "/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home",
                            "LANG": "en_US.UTF-8",
                            "LOGNAME": "rupeshshandilya",
                            "MallocNanoZone": "0",
                            "NODE": "/Users/rupeshshandilya/.nvm/versions/node/v22.3.0/bin/node",
                            "NODE_OPTIONS": "--enable-source-maps --no-deprecation",
                            "NVM_BIN": "/Users/rupeshshandilya/.nvm/versions/node/v22.3.0/bin",
                            "NVM_CD_FLAGS": "-q",
                            "NVM_DIR": "/Users/rupeshshandilya/.nvm",
                            "NVM_INC": "/Users/rupeshshandilya/.nvm/versions/node/v22.3.0/include/node",
                            "ORIGINAL_XDG_CURRENT_DESKTOP": "undefined",
                            "PATH": "/Users/rupeshshandilya/Library/Application Support/sst/bin:/var/folders/xz/gr8vlkv50c31rbk__9hz_3c00000gn/T/yarn--1728231986399-0.4126174947474146:/Users/rupeshshandilya/Desktop/test/Sync-Website/node_modules/.bin:/Users/rupeshshandilya/.config/yarn/link/node_modules/.bin:/Users/rupeshshandilya/.yarn/bin:/Users/rupeshshandilya/.nvm/versions/node/v22.3.0/libexec/lib/node_modules/npm/bin/node-gyp-bin:/Users/rupeshshandilya/.nvm/versions/node/v22.3.0/lib/node_modules/npm/bin/node-gyp-bin:/Users/rupeshshandilya/.nvm/versions/node/v22.3.0/bin/node_modules/npm/bin/node-gyp-bin:/Users/rupeshshandilya/.console-ninja/.bin:/Users/rupeshshandilya/.nvm/versions/node/v22.3.0/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/Users/rupeshshandilya/.console-ninja/.bin:/Users/rupeshshandilya/.nvm/versions/node/v22.3.0/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/Users/rupeshshandilya/Library/Android/sdk/emulator:/Users/rupeshshandilya/Library/Android/sdk/platform-tools:/Users/rupeshshandilya/Library/Android/sdk/emulator:/Users/rupeshshandilya/Library/Android/sdk/platform-tools:/Users/rupeshshandilya/Library/Android/sdk/emulator:/Users/rupeshshandilya/Library/Android/sdk/platform-tools",
                            "PULUMI_CONFIG": "{\"aws:config:defaultTags\":\"{\\\"tags\\\":{\\\"sst:app\\\":\\\"sync-website\\\",\\\"sst:stage\\\":\\\"production\\\"}}\",\"aws:config:region\":\"us-east-1\"}",
                            "PULUMI_CONFIG_PASSPHRASE": "rm7H0rSckOIvPe1/qhnyyDYOuls8I+es7kWrPgZZSB4=",
                            "PULUMI_CONFIG_SECRET_KEYS": "[]",
                            "PULUMI_DEBUG_COMMANDS": "true",
                            "PULUMI_HOME": "/Users/rupeshshandilya/Library/Application Support/sst",
                            "PULUMI_NODEJS_ENGINE": "127.0.0.1:55088",
                            "PULUMI_NODEJS_MONITOR": "127.0.0.1:55098",
                            "PULUMI_NODEJS_ORGANIZATION": "organization",
                            "PULUMI_NODEJS_PARALLEL": "32",
                            "PULUMI_NODEJS_PROJECT": "sync-website",
                            "PULUMI_NODEJS_STACK": "production",
                            "PULUMI_NODEJS_SYNC": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/log/pulumi-node-pipes492558386",
                            "PULUMI_NODEJS_TYPESCRIPT": "true",
                            "PULUMI_SKIP_UPDATE_CHECK": "true",
                            "PWD": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform",
                            "SHELL": "/bin/zsh",
                            "SHLVL": "2",
                            "SSH_AUTH_SOCK": "/private/tmp/com.apple.launchd.xrvqtSRfCE/Listeners",
                            "SST": "1",
                            "SST_AWS_ACCESS_KEY_ID": "ASIA4DMVQZ77G5TRMYF7",
                            "SST_AWS_REGION": "us-east-1",
                            "SST_AWS_SECRET_ACCESS_KEY": "8J9UG7bPs0Y4tPwV0pEmiRl1JJwRGVmOA6gXRyOH",
                            "SST_AWS_SESSION_TOKEN": "IQoJb3JpZ2luX2VjEMH//////////wEaCXVzLWVhc3QtMSJGMEQCIHFUaqTOt23bI04W3qUVhzl/CBuT6mXzOowN4kQ+MeDfAiBUhgy79MT9s1INDifRJVhoir16s9QQccrLfl96xfOeWyrqAggaEAAaDDgzMTkyNjYyMDE1OCIMs/X4sipjhuel2dcgKscCpdZO3r7sJiWylEu8OysLClozqa0/8yOH7Bc122+am0G+JMPVg0g5bIE25yvcn5pJ5wqUT+7J4r/hfpZt73SpIcepAjLk75YmvIhTiHai4chCavoOE061KvqtmQhKzlHjAyuVSBFGVOgldkwAe4D0awcbvKZDLozl51bdwZv/J6Ap5Hk4NL7UW5bMjv8kndSHTZSmsFu8YxzwMcGoMzIQNXAWdgQFf6CLy4uqyLmBN7unf0j3xQU3C/soe2h+ymyiK7FLqDlWWP3Dg0ycIpmSHeZT9z0i3uqd4PNJhFLXPgB5IKwkgKx7j1RZVTu1fqJo/V7U8VwdVEwk+RhAu/ENyZlOLNxfa+RI6X9ZcxBXnD9YHa3A2gaamYoVPfX7oc/9Vv9VtuUkOt1LuWqSy38aAdOqmQSINnnIMZlqMVrEfDXk1g+RW8J/MLT0irgGOqgB9lCT72SI8Vr2ZidYsadGks+9+0ECvjSYPZGw90q6JXV08MvC++BOPMaQV181nuSH1FjgnjcAW7KoyIVTXSgucf5rDgeOrNniO+Ob0aXThFF5OMjFGAlPl190IbaQFuEx778G3MIG8uAg6QfbnZ26V4tl6ywtkTrGCrdKpmFpuYv1zUSMm3yxWB0eDVJJnfxJzTl4dfXHYXehDmrluf1lU5CVG77XwS70",
                            "SST_RESOURCE_App": "{\"name\":\"sync-website\",\"stage\":\"production\"}",
                            "SST_SERVER": "http://localhost:13557",
                            "TERM": "xterm-256color",
                            "TERM_PROGRAM": "vscode",
                            "TERM_PROGRAM_VERSION": "1.92.0",
                            "TMPDIR": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/log",
                            "USER": "rupeshshandilya",
                            "USER_ZDOTDIR": "/Users/rupeshshandilya",
                            "VSCODE_GIT_ASKPASS_EXTRA_ARGS": "",
                            "VSCODE_GIT_ASKPASS_MAIN": "/Applications/Visual Studio Code.app/Contents/Resources/app/extensions/git/dist/askpass-main.js",
                            "VSCODE_GIT_ASKPASS_NODE": "/Applications/Visual Studio Code.app/Contents/Frameworks/Code Helper (Plugin).app/Contents/MacOS/Code Helper (Plugin)",
                            "VSCODE_GIT_IPC_HANDLE": "/var/folders/xz/gr8vlkv50c31rbk__9hz_3c00000gn/T/vscode-git-c27359f7f3.sock",
                            "VSCODE_INJECTION": "1",
                            "XPC_FLAGS": "0x0",
                            "XPC_SERVICE_NAME": "0",
                            "YARN_WRAP_OUTPUT": "false",
                            "ZDOTDIR": "/Users/rupeshshandilya",
                            "_": "/Users/rupeshshandilya/Desktop/test/Sync-Website/node_modules/.bin/sst",
                            "__CFBundleIdentifier": "com.microsoft.VSCode",
                            "__CF_USER_TEXT_ENCODING": "0x1F5:0x0:0x0",
                            "npm_config_argv": "{\"remain\":[],\"cooked\":[\"run\",\"sst\"],\"original\":[\"sst\",\"deploy\",\"--stage\",\"production\"]}",
                            "npm_config_bin_links": "true",
                            "npm_config_ignore_optional": "",
                            "npm_config_ignore_scripts": "",
                            "npm_config_init_license": "MIT",
                            "npm_config_init_version": "1.0.0",
                            "npm_config_nmHoistingLimits": "workspaces",
                            "npm_config_registry": "https://registry.yarnpkg.com",
                            "npm_config_save_prefix": "^",
                            "npm_config_strict_ssl": "true",
                            "npm_config_user_agent": "yarn/1.22.22 npm/? node/v22.3.0 darwin arm64",
                            "npm_config_version_commit_hooks": "true",
                            "npm_config_version_git_message": "v%s",
                            "npm_config_version_git_sign": "",
                            "npm_config_version_git_tag": "true",
                            "npm_config_version_tag_prefix": "v",
                            "npm_execpath": "/Users/rupeshshandilya/.nvm/versions/node/v22.3.0/lib/node_modules/yarn/bin/yarn.js",
                            "npm_lifecycle_event": "sst",
                            "npm_node_execpath": "/Users/rupeshshandilya/.nvm/versions/node/v22.3.0/bin/node",
                            "npm_package_dependencies_emailjs_com": "^3.2.0",
                            "npm_package_dependencies_lucide_react": "^0.446.0",
                            "npm_package_dependencies_next": "14.2.13",
                            "npm_package_dependencies_react": "^18",
                            "npm_package_dependencies_react_dom": "^18",
                            "npm_package_dependencies_react_icons": "^5.3.0",
                            "npm_package_dependencies_sst": "^3.1.54",
                            "npm_package_dependencies_typewriter_effect": "^2.21.0",
                            "npm_package_description": "First, run the development server:",
                            "npm_package_devDependencies__types_node": "^20",
                            "npm_package_devDependencies__types_react": "^18",
                            "npm_package_devDependencies__types_react_dom": "^18",
                            "npm_package_devDependencies_eslint": "^8",
                            "npm_package_devDependencies_eslint_config_next": "14.2.13",
                            "npm_package_devDependencies_postcss": "^8",
                            "npm_package_devDependencies_tailwindcss": "^3.4.1",
                            "npm_package_devDependencies_typescript": "^5",
                            "npm_package_name": "sync-website",
                            "npm_package_private": "true",
                            "npm_package_readmeFilename": "README.md",
                            "npm_package_scripts_build": "next build",
                            "npm_package_scripts_dev": "next dev",
                            "npm_package_scripts_lint": "next lint",
                            "npm_package_scripts_sso": "aws sso login --sso-session=sync",
                            "npm_package_scripts_start": "next start",
                            "npm_package_version": "0.1.0"
                        },
                        "version": "1728232000966"
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Run\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:pulumi-nodejs::default::031e252e-e32c-444a-a2e0-219cfd2e9d69",
                    "propertyDependencies": {
                        "__provider": [],
                        "command": [],
                        "cwd": [],
                        "env": [],
                        "version": []
                    },
                    "created": "2024-10-06T16:17:32.109239Z",
                    "modified": "2024-10-06T16:26:59.905081Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/providers/run.ts#13,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Queue::SyncWebsiteRevalidationEvents",
                    "custom": false,
                    "type": "sst:aws:Queue",
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "created": "2024-10-06T16:17:32.185035Z",
                    "modified": "2024-10-06T16:17:32.185035Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/queue.ts#342,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteRevalidationSeeder",
                    "custom": false,
                    "type": "sst:aws:Function",
                    "outputs": {
                        "_metadata": {
                            "handler": "index.handler",
                            "internal": true
                        }
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "created": "2024-10-06T16:17:32.190193Z",
                    "modified": "2024-10-06T16:17:32.190193Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/function.ts#1145,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:dynamodb/table:Table::SyncWebsiteRevalidationTable",
                    "custom": true,
                    "id": "sync-website-production-SyncWebsiteRevalidationTable",
                    "type": "aws:dynamodb/table:Table",
                    "inputs": {
                        "__defaults": [
                            "tableClass"
                        ],
                        "attributes": [
                            {
                                "__defaults": [],
                                "name": "tag",
                                "type": "S"
                            },
                            {
                                "__defaults": [],
                                "name": "path",
                                "type": "S"
                            },
                            {
                                "__defaults": [],
                                "name": "revalidatedAt",
                                "type": "N"
                            }
                        ],
                        "billingMode": "PAY_PER_REQUEST",
                        "globalSecondaryIndexes": [
                            {
                                "__defaults": [],
                                "hashKey": "path",
                                "name": "revalidate",
                                "projectionType": "ALL",
                                "rangeKey": "revalidatedAt"
                            }
                        ],
                        "hashKey": "tag",
                        "name": "sync-website-production-SyncWebsiteRevalidationTable",
                        "pointInTimeRecovery": {
                            "__defaults": [],
                            "enabled": true
                        },
                        "rangeKey": "path",
                        "tableClass": "STANDARD",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":1800000000000,\"delete\":600000000000,\"update\":3600000000000},\"schema_version\":\"1\"}",
                        "arn": "arn:aws:dynamodb:us-east-1:831926620158:table/sync-website-production-SyncWebsiteRevalidationTable",
                        "attributes": [
                            {
                                "name": "path",
                                "type": "S"
                            },
                            {
                                "name": "revalidatedAt",
                                "type": "N"
                            },
                            {
                                "name": "tag",
                                "type": "S"
                            }
                        ],
                        "billingMode": "PAY_PER_REQUEST",
                        "deletionProtectionEnabled": false,
                        "globalSecondaryIndexes": [
                            {
                                "hashKey": "path",
                                "name": "revalidate",
                                "nonKeyAttributes": [],
                                "projectionType": "ALL",
                                "rangeKey": "revalidatedAt",
                                "readCapacity": null,
                                "writeCapacity": null
                            }
                        ],
                        "hashKey": "tag",
                        "id": "sync-website-production-SyncWebsiteRevalidationTable",
                        "importTable": null,
                        "localSecondaryIndexes": [],
                        "name": "sync-website-production-SyncWebsiteRevalidationTable",
                        "pointInTimeRecovery": {
                            "enabled": true
                        },
                        "rangeKey": "path",
                        "readCapacity": 0,
                        "replicas": [],
                        "restoreDateTime": null,
                        "restoreSourceName": null,
                        "restoreSourceTableArn": null,
                        "restoreToLatestTime": null,
                        "serverSideEncryption": null,
                        "streamArn": "",
                        "streamEnabled": false,
                        "streamLabel": "",
                        "streamViewType": "",
                        "tableClass": "STANDARD",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "ttl": {
                            "attributeName": "",
                            "enabled": false
                        },
                        "writeCapacity": 0
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "attributes": [],
                        "billingMode": [],
                        "globalSecondaryIndexes": [],
                        "hashKey": [],
                        "name": [],
                        "pointInTimeRecovery": [],
                        "rangeKey": []
                    },
                    "retainOnDelete": true,
                    "created": "2024-10-06T16:17:59.676617Z",
                    "modified": "2024-10-06T16:17:59.676617Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/dynamodb/table.ts#377,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Queue$aws:sqs/queue:Queue::SyncWebsiteRevalidationEventsQueue",
                    "custom": true,
                    "id": "https://sqs.us-east-1.amazonaws.com/831926620158/sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo",
                    "type": "aws:sqs/queue:Queue",
                    "inputs": {
                        "__defaults": [
                            "delaySeconds",
                            "maxMessageSize",
                            "messageRetentionSeconds"
                        ],
                        "contentBasedDeduplication": false,
                        "delaySeconds": 0,
                        "fifoQueue": true,
                        "maxMessageSize": 262144,
                        "messageRetentionSeconds": 345600,
                        "name": "sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo",
                        "receiveWaitTimeSeconds": 20,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "visibilityTimeoutSeconds": 30
                    },
                    "outputs": {
                        "arn": "arn:aws:sqs:us-east-1:831926620158:sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo",
                        "contentBasedDeduplication": false,
                        "deduplicationScope": "queue",
                        "delaySeconds": 0,
                        "fifoQueue": true,
                        "fifoThroughputLimit": "perQueue",
                        "id": "https://sqs.us-east-1.amazonaws.com/831926620158/sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo",
                        "kmsDataKeyReusePeriodSeconds": 300,
                        "kmsMasterKeyId": "",
                        "maxMessageSize": 262144,
                        "messageRetentionSeconds": 345600,
                        "name": "sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo",
                        "namePrefix": "",
                        "policy": "",
                        "receiveWaitTimeSeconds": 20,
                        "redriveAllowPolicy": "",
                        "redrivePolicy": "",
                        "sqsManagedSseEnabled": true,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "url": "https://sqs.us-east-1.amazonaws.com/831926620158/sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo",
                        "visibilityTimeoutSeconds": 30
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Queue::SyncWebsiteRevalidationEvents",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "contentBasedDeduplication": [],
                        "fifoQueue": [],
                        "name": [],
                        "receiveWaitTimeSeconds": [],
                        "visibilityTimeoutSeconds": []
                    },
                    "created": "2024-10-06T16:18:00.397366Z",
                    "modified": "2024-10-06T16:18:00.397366Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/queue.ts#382,14"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteRevalidationSeederLogGroup",
                    "custom": true,
                    "id": "/aws/lambda/sync-website-production-SyncWebsiteRevalidationSeederFunction",
                    "type": "aws:cloudwatch/logGroup:LogGroup",
                    "inputs": {
                        "__defaults": [
                            "skipDestroy"
                        ],
                        "name": "/aws/lambda/sync-website-production-SyncWebsiteRevalidationSeederFunction",
                        "retentionInDays": 0,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:logs:us-east-1:831926620158:log-group:/aws/lambda/sync-website-production-SyncWebsiteRevalidationSeederFunction",
                        "id": "/aws/lambda/sync-website-production-SyncWebsiteRevalidationSeederFunction",
                        "kmsKeyId": "",
                        "logGroupClass": "STANDARD",
                        "name": "/aws/lambda/sync-website-production-SyncWebsiteRevalidationSeederFunction",
                        "namePrefix": "",
                        "retentionInDays": 0,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteRevalidationSeeder",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "name": [],
                        "retentionInDays": []
                    },
                    "created": "2024-10-06T16:17:34.008603Z",
                    "modified": "2024-10-06T16:17:34.008603Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/cloudwatch/logGroup.ts#139,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteDefault",
                    "custom": false,
                    "type": "sst:aws:Function",
                    "outputs": {
                        "_metadata": {
                            "handler": "index.handler"
                        }
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "created": "2024-10-06T16:18:00.688671Z",
                    "modified": "2024-10-06T16:18:00.688671Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/function.ts#1145,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber::SyncWebsiteRevalidationEventsSubscriberUffhrs",
                    "custom": false,
                    "type": "sst:aws:QueueLambdaSubscriber",
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "created": "2024-10-06T16:18:00.68124Z",
                    "modified": "2024-10-06T16:18:00.68124Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/queue-lambda-subscriber.ts#46,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:cloudfront/function:Function::SyncWebsiteCloudfrontFunctionServerCfFunction",
                    "custom": true,
                    "id": "sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction",
                    "type": "aws:cloudfront/function:Function",
                    "inputs": {
                        "__defaults": [
                            "publish"
                        ],
                        "code": "\nasync function handler(event) {\n  event.request.headers[\"x-forwarded-host\"] = event.request.headers.host;\n\nfunction getHeader(key) {\n  var header = event.request.headers[key];\n  if (header) {\n    if (header.multiValue) {\n      return header.multiValue.map((header) => header.value).join(\",\");\n    }\n    if (header.value) {\n      return header.value;\n    }\n  }\n  return \"\";\n}\nvar cacheKey = \"\";\nif (event.request.uri.startsWith(\"/_next/image\")) {\n  cacheKey = getHeader(\"accept\");\n} else {\n  cacheKey =\n    getHeader(\"rsc\") +\n    getHeader(\"next-router-prefetch\") +\n    getHeader(\"next-router-state-tree\") +\n    getHeader(\"next-url\") +\n    getHeader(\"x-prerender-revalidate\");\n}\nif (event.request.cookies[\"__prerender_bypass\"]) {\n  cacheKey += event.request.cookies[\"__prerender_bypass\"]\n    ? event.request.cookies[\"__prerender_bypass\"].value\n    : \"\";\n}\nvar crypto = require(\"crypto\");\n\nvar hashedKey = crypto.createHash(\"md5\").update(cacheKey).digest(\"hex\");\nevent.request.headers[\"x-open-next-cache-key\"] = { value: hashedKey };\n\n\nif(event.request.headers[\"cloudfront-viewer-city\"]) {\n  event.request.headers[\"x-open-next-city\"] = event.request.headers[\"cloudfront-viewer-city\"];\n}\nif(event.request.headers[\"cloudfront-viewer-country\"]) {\n  event.request.headers[\"x-open-next-country\"] = event.request.headers[\"cloudfront-viewer-country\"];\n}\nif(event.request.headers[\"cloudfront-viewer-region\"]) {\n  event.request.headers[\"x-open-next-region\"] = event.request.headers[\"cloudfront-viewer-region\"];\n}\nif(event.request.headers[\"cloudfront-viewer-latitude\"]) {\n  event.request.headers[\"x-open-next-latitude\"] = event.request.headers[\"cloudfront-viewer-latitude\"];\n}\nif(event.request.headers[\"cloudfront-viewer-longitude\"]) {\n  event.request.headers[\"x-open-next-longitude\"] = event.request.headers[\"cloudfront-viewer-longitude\"];\n}\n    \n  \n  return event.request;\n}",
                        "keyValueStoreAssociations": [],
                        "name": "sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction",
                        "publish": true,
                        "runtime": "cloudfront-js-2.0"
                    },
                    "outputs": {
                        "arn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction",
                        "code": "\nasync function handler(event) {\n  event.request.headers[\"x-forwarded-host\"] = event.request.headers.host;\n\nfunction getHeader(key) {\n  var header = event.request.headers[key];\n  if (header) {\n    if (header.multiValue) {\n      return header.multiValue.map((header) => header.value).join(\",\");\n    }\n    if (header.value) {\n      return header.value;\n    }\n  }\n  return \"\";\n}\nvar cacheKey = \"\";\nif (event.request.uri.startsWith(\"/_next/image\")) {\n  cacheKey = getHeader(\"accept\");\n} else {\n  cacheKey =\n    getHeader(\"rsc\") +\n    getHeader(\"next-router-prefetch\") +\n    getHeader(\"next-router-state-tree\") +\n    getHeader(\"next-url\") +\n    getHeader(\"x-prerender-revalidate\");\n}\nif (event.request.cookies[\"__prerender_bypass\"]) {\n  cacheKey += event.request.cookies[\"__prerender_bypass\"]\n    ? event.request.cookies[\"__prerender_bypass\"].value\n    : \"\";\n}\nvar crypto = require(\"crypto\");\n\nvar hashedKey = crypto.createHash(\"md5\").update(cacheKey).digest(\"hex\");\nevent.request.headers[\"x-open-next-cache-key\"] = { value: hashedKey };\n\n\nif(event.request.headers[\"cloudfront-viewer-city\"]) {\n  event.request.headers[\"x-open-next-city\"] = event.request.headers[\"cloudfront-viewer-city\"];\n}\nif(event.request.headers[\"cloudfront-viewer-country\"]) {\n  event.request.headers[\"x-open-next-country\"] = event.request.headers[\"cloudfront-viewer-country\"];\n}\nif(event.request.headers[\"cloudfront-viewer-region\"]) {\n  event.request.headers[\"x-open-next-region\"] = event.request.headers[\"cloudfront-viewer-region\"];\n}\nif(event.request.headers[\"cloudfront-viewer-latitude\"]) {\n  event.request.headers[\"x-open-next-latitude\"] = event.request.headers[\"cloudfront-viewer-latitude\"];\n}\nif(event.request.headers[\"cloudfront-viewer-longitude\"]) {\n  event.request.headers[\"x-open-next-longitude\"] = event.request.headers[\"cloudfront-viewer-longitude\"];\n}\n    \n  \n  return event.request;\n}",
                        "comment": "",
                        "etag": "ETVPDKIKX0DER",
                        "id": "sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction",
                        "keyValueStoreAssociations": null,
                        "liveStageEtag": "ETVPDKIKX0DER",
                        "name": "sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction",
                        "publish": true,
                        "runtime": "cloudfront-js-2.0",
                        "status": "UNASSOCIATED"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "code": [],
                        "keyValueStoreAssociations": [],
                        "name": [],
                        "runtime": []
                    },
                    "created": "2024-10-06T16:18:05.499654Z",
                    "modified": "2024-10-06T16:18:05.499654Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/ssr-site.ts#912,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteImageOptimizer",
                    "custom": false,
                    "type": "sst:aws:Function",
                    "outputs": {
                        "_metadata": {
                            "handler": "index.handler",
                            "internal": true
                        }
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "created": "2024-10-06T16:18:00.698235Z",
                    "modified": "2024-10-06T16:18:00.698235Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/function.ts#1145,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:cloudfront/cachePolicy:CachePolicy::SyncWebsiteServerCachePolicy",
                    "custom": true,
                    "id": "14df8992-f74d-4c7c-9a7f-eb21cec26da4",
                    "type": "aws:cloudfront/cachePolicy:CachePolicy",
                    "inputs": {
                        "__defaults": [
                            "name"
                        ],
                        "comment": "SST server response cache policy",
                        "defaultTtl": 0,
                        "maxTtl": 31536000,
                        "minTtl": 0,
                        "name": "SyncWebsiteServerCachePolicy-94a3852",
                        "parametersInCacheKeyAndForwardedToOrigin": {
                            "__defaults": [],
                            "cookiesConfig": {
                                "__defaults": [],
                                "cookieBehavior": "none"
                            },
                            "enableAcceptEncodingBrotli": true,
                            "enableAcceptEncodingGzip": true,
                            "headersConfig": {
                                "__defaults": [],
                                "headerBehavior": "whitelist",
                                "headers": {
                                    "__defaults": [],
                                    "items": [
                                        "x-open-next-cache-key"
                                    ]
                                }
                            },
                            "queryStringsConfig": {
                                "__defaults": [],
                                "queryStringBehavior": "all"
                            }
                        }
                    },
                    "outputs": {
                        "comment": "SST server response cache policy",
                        "defaultTtl": 0,
                        "etag": "E23ZP02F085DFQ",
                        "id": "14df8992-f74d-4c7c-9a7f-eb21cec26da4",
                        "maxTtl": 31536000,
                        "minTtl": 0,
                        "name": "SyncWebsiteServerCachePolicy-94a3852",
                        "parametersInCacheKeyAndForwardedToOrigin": {
                            "cookiesConfig": {
                                "cookieBehavior": "none",
                                "cookies": null
                            },
                            "enableAcceptEncodingBrotli": true,
                            "enableAcceptEncodingGzip": true,
                            "headersConfig": {
                                "headerBehavior": "whitelist",
                                "headers": {
                                    "items": [
                                        "x-open-next-cache-key"
                                    ]
                                }
                            },
                            "queryStringsConfig": {
                                "queryStringBehavior": "all",
                                "queryStrings": null
                            }
                        }
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "comment": [],
                        "defaultTtl": [],
                        "maxTtl": [],
                        "minTtl": [],
                        "parametersInCacheKeyAndForwardedToOrigin": []
                    },
                    "created": "2024-10-06T16:18:01.922307Z",
                    "modified": "2024-10-06T16:18:01.922307Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/ssr-site.ts#932,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:iam/role:Role::SyncWebsiteRevalidationSeederRole",
                    "custom": true,
                    "id": "sync-websit-production-SyncWebsiteRevalidationSeederRole-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"dynamodb:PutItem\",\n        \"dynamodb:DescribeTable\",\n        \"dynamodb:BatchWriteItem\"\n      ],\n      \"Resource\": \"arn:aws:dynamodb:us-east-1:831926620158:table/sync-website-production-SyncWebsiteRevalidationTable\"\n    }\n  ]\n}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "sync-websit-production-SyncWebsiteRevalidationSeederRole-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::831926620158:role/sync-websit-production-SyncWebsiteRevalidationSeederRole-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-10-06T16:18:00Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "sync-websit-production-SyncWebsiteRevalidationSeederRole-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"dynamodb:PutItem\",\"dynamodb:DescribeTable\",\"dynamodb:BatchWriteItem\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:dynamodb:us-east-1:831926620158:table/sync-website-production-SyncWebsiteRevalidationTable\"}]}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "sync-websit-production-SyncWebsiteRevalidationSeederRole-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "uniqueId": "AROA4DMVQZ77IP6VMDFPG"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteRevalidationSeeder",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:dynamodb/table:Table::SyncWebsiteRevalidationTable"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "assumeRolePolicy": [],
                        "inlinePolicies": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:dynamodb/table:Table::SyncWebsiteRevalidationTable"
                        ],
                        "managedPolicyArns": [],
                        "name": []
                    },
                    "created": "2024-10-06T16:18:02.482494Z",
                    "modified": "2024-10-06T16:18:02.482494Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/function.ts#1619,14"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteDefaultLogGroup",
                    "custom": true,
                    "id": "/aws/lambda/sync-website-production-SyncWebsiteDefaultFunction",
                    "type": "aws:cloudwatch/logGroup:LogGroup",
                    "inputs": {
                        "__defaults": [
                            "skipDestroy"
                        ],
                        "name": "/aws/lambda/sync-website-production-SyncWebsiteDefaultFunction",
                        "retentionInDays": 0,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:logs:us-east-1:831926620158:log-group:/aws/lambda/sync-website-production-SyncWebsiteDefaultFunction",
                        "id": "/aws/lambda/sync-website-production-SyncWebsiteDefaultFunction",
                        "kmsKeyId": "",
                        "logGroupClass": "STANDARD",
                        "name": "/aws/lambda/sync-website-production-SyncWebsiteDefaultFunction",
                        "namePrefix": "",
                        "retentionInDays": 0,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteDefault",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "name": [],
                        "retentionInDays": []
                    },
                    "created": "2024-10-06T16:18:06.563058Z",
                    "modified": "2024-10-06T16:18:06.563058Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/cloudwatch/logGroup.ts#139,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:iam/role:Role::SyncWebsiteImageOptimizerRole",
                    "custom": true,
                    "id": "sync-website-production-SyncWebsiteImageOptimizerRole-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:GetObject\",\n      \"Resource\": \"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr/*\"\n    }\n  ]\n}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "sync-website-production-SyncWebsiteImageOptimizerRole-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::831926620158:role/sync-website-production-SyncWebsiteImageOptimizerRole-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-10-06T16:18:05Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "sync-website-production-SyncWebsiteImageOptimizerRole-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"s3:GetObject\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr/*\"}]}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "sync-website-production-SyncWebsiteImageOptimizerRole-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "uniqueId": "AROA4DMVQZ77H67272BQD"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteImageOptimizer",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "assumeRolePolicy": [],
                        "inlinePolicies": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket"
                        ],
                        "managedPolicyArns": [],
                        "name": []
                    },
                    "created": "2024-10-06T16:18:07.617724Z",
                    "modified": "2024-10-06T16:18:07.617724Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/function.ts#1619,14"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function::SyncWebsiteRevalidationEventsSubscriberUffhrsFunction",
                    "custom": false,
                    "type": "sst:aws:Function",
                    "outputs": {
                        "_metadata": {
                            "handler": "index.handler",
                            "internal": true
                        }
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber::SyncWebsiteRevalidationEventsSubscriberUffhrs",
                    "created": "2024-10-06T16:18:04.939023Z",
                    "modified": "2024-10-06T16:18:04.939023Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/function.ts#1145,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteImageOptimizerLogGroup",
                    "custom": true,
                    "id": "/aws/lambda/sync-website-production-SyncWebsiteImageOptimizerFunction",
                    "type": "aws:cloudwatch/logGroup:LogGroup",
                    "inputs": {
                        "__defaults": [
                            "skipDestroy"
                        ],
                        "name": "/aws/lambda/sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "retentionInDays": 3,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:logs:us-east-1:831926620158:log-group:/aws/lambda/sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "id": "/aws/lambda/sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "kmsKeyId": "",
                        "logGroupClass": "STANDARD",
                        "name": "/aws/lambda/sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "namePrefix": "",
                        "retentionInDays": 3,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteImageOptimizer",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "name": [],
                        "retentionInDays": []
                    },
                    "created": "2024-10-06T16:18:06.822602Z",
                    "modified": "2024-10-06T16:18:06.822602Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/cloudwatch/logGroup.ts#139,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:iam/role:Role::SyncWebsiteDefaultRole",
                    "custom": true,
                    "id": "sync-website-production-SyncWebsiteDefaultRole-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"cloudfront:CreateInvalidation\",\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"s3:PutObject\",\n        \"s3:GetObject\",\n        \"s3:DeleteObject\"\n      ],\n      \"Resource\": \"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"s3:ListBucket\",\n      \"Resource\": \"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sqs:SendMessage\",\n        \"sqs:GetQueueUrl\",\n        \"sqs:GetQueueAttributes\"\n      ],\n      \"Resource\": \"arn:aws:sqs:us-east-1:831926620158:sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"dynamodb:UpdateItem\",\n        \"dynamodb:Scan\",\n        \"dynamodb:Query\",\n        \"dynamodb:PutItem\",\n        \"dynamodb:GetShardIterator\",\n        \"dynamodb:GetRecords\",\n        \"dynamodb:GetItem\",\n        \"dynamodb:DescribeTable\",\n        \"dynamodb:DeleteItem\",\n        \"dynamodb:ConditionCheckItem\",\n        \"dynamodb:BatchWriteItem\",\n        \"dynamodb:BatchGetItem\"\n      ],\n      \"Resource\": [\n        \"arn:aws:dynamodb:us-east-1:831926620158:table/sync-website-production-SyncWebsiteRevalidationTable/*\",\n        \"arn:aws:dynamodb:us-east-1:831926620158:table/sync-website-production-SyncWebsiteRevalidationTable\"\n      ]\n    }\n  ]\n}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "sync-website-production-SyncWebsiteDefaultRole-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::831926620158:role/sync-website-production-SyncWebsiteDefaultRole-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-10-06T16:18:05Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "sync-website-production-SyncWebsiteDefaultRole-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":\"cloudfront:CreateInvalidation\",\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"s3:PutObject\",\"s3:GetObject\",\"s3:DeleteObject\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr/*\"},{\"Action\":\"s3:ListBucket\",\"Effect\":\"Allow\",\"Resource\":\"arn:aws:s3:::sync-website-production-syncwebsiteassets-wxtuonvr\"},{\"Action\":[\"sqs:SendMessage\",\"sqs:GetQueueUrl\",\"sqs:GetQueueAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sqs:us-east-1:831926620158:sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo\"},{\"Action\":[\"dynamodb:UpdateItem\",\"dynamodb:Scan\",\"dynamodb:Query\",\"dynamodb:PutItem\",\"dynamodb:GetShardIterator\",\"dynamodb:GetRecords\",\"dynamodb:GetItem\",\"dynamodb:DescribeTable\",\"dynamodb:DeleteItem\",\"dynamodb:ConditionCheckItem\",\"dynamodb:BatchWriteItem\",\"dynamodb:BatchGetItem\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-east-1:831926620158:table/sync-website-production-SyncWebsiteRevalidationTable/*\",\"arn:aws:dynamodb:us-east-1:831926620158:table/sync-website-production-SyncWebsiteRevalidationTable\"]}]}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "sync-website-production-SyncWebsiteDefaultRole-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "uniqueId": "AROA4DMVQZ77E3TQQ7A7K"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteDefault",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "assumeRolePolicy": [],
                        "inlinePolicies": [],
                        "managedPolicyArns": [],
                        "name": []
                    },
                    "created": "2024-10-06T16:18:07.474788Z",
                    "modified": "2024-10-06T16:18:07.474788Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/function.ts#1619,14"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::pulumi:providers:aws::AwsProvider.sst.us-east-1",
                    "custom": true,
                    "id": "44740f8a-e11d-44fb-b91d-6b31880a0989",
                    "type": "pulumi:providers:aws",
                    "inputs": {
                        "defaultTags": "{\"tags\":{\"sst:app\":\"sync-website\",\"sst:stage\":\"production\"}}",
                        "region": "us-east-1",
                        "skipCredentialsValidation": "false",
                        "skipRegionValidation": "true",
                        "version": "6.54.2"
                    },
                    "outputs": {
                        "defaultTags": "{\"tags\":{\"sst:app\":\"sync-website\",\"sst:stage\":\"production\"}}",
                        "region": "us-east-1",
                        "skipCredentialsValidation": "false",
                        "skipRegionValidation": "true",
                        "version": "6.54.2"
                    },
                    "parent": "urn:pulumi:production::sync-website::pulumi:pulumi:Stack::sync-website-production",
                    "propertyDependencies": {
                        "defaultTags": [],
                        "region": [],
                        "skipCredentialsValidation": [],
                        "skipRegionValidation": []
                    },
                    "additionalSecretOutputs": [
                        "accessKey",
                        "secretKey",
                        "token"
                    ],
                    "created": "2024-10-06T16:18:04.891064Z",
                    "modified": "2024-10-06T16:18:04.891064Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/provider.ts#147,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionLogGroup",
                    "custom": true,
                    "id": "/aws/lambda/producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                    "type": "aws:cloudwatch/logGroup:LogGroup",
                    "inputs": {
                        "__defaults": [
                            "skipDestroy"
                        ],
                        "name": "/aws/lambda/producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                        "retentionInDays": 0,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:logs:us-east-1:831926620158:log-group:/aws/lambda/producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                        "id": "/aws/lambda/producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                        "kmsKeyId": "",
                        "logGroupClass": "STANDARD",
                        "name": "/aws/lambda/producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                        "namePrefix": "",
                        "retentionInDays": 0,
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function::SyncWebsiteRevalidationEventsSubscriberUffhrsFunction",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "name": [],
                        "retentionInDays": []
                    },
                    "created": "2024-10-06T16:18:06.639507Z",
                    "modified": "2024-10-06T16:18:06.639507Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/cloudwatch/logGroup.ts#139,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:iam/role:Role::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionRole",
                    "custom": true,
                    "id": "producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFu-useast1",
                    "type": "aws:iam/role:Role",
                    "inputs": {
                        "__defaults": [
                            "forceDetachPolicies",
                            "maxSessionDuration",
                            "path"
                        ],
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "forceDetachPolicies": false,
                        "inlinePolicies": [
                            {
                                "__defaults": [],
                                "name": "inline",
                                "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sqs:ReceiveMessage\",\n        \"sqs:GetQueueUrl\",\n        \"sqs:GetQueueAttributes\",\n        \"sqs:DeleteMessage\",\n        \"sqs:ChangeMessageVisibility\"\n      ],\n      \"Resource\": \"arn:aws:sqs:us-east-1:831926620158:sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sqs:ReceiveMessage\",\n        \"sqs:GetQueueUrl\",\n        \"sqs:GetQueueAttributes\",\n        \"sqs:DeleteMessage\",\n        \"sqs:ChangeMessageVisibility\"\n      ],\n      \"Resource\": \"arn:aws:sqs:us-east-1:831926620158:sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo\"\n    }\n  ]\n}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFu-useast1",
                        "path": "/",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "arn": "arn:aws:iam::831926620158:role/producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFu-useast1",
                        "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Sid\":\"AllowAssumeRole\"}],\"Version\":\"2012-10-17\"}",
                        "createDate": "2024-10-06T16:18:05Z",
                        "description": "",
                        "forceDetachPolicies": false,
                        "id": "producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFu-useast1",
                        "inlinePolicies": [
                            {
                                "name": "inline",
                                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sqs:ReceiveMessage\",\"sqs:GetQueueUrl\",\"sqs:GetQueueAttributes\",\"sqs:DeleteMessage\",\"sqs:ChangeMessageVisibility\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sqs:us-east-1:831926620158:sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo\"},{\"Action\":[\"sqs:ReceiveMessage\",\"sqs:GetQueueUrl\",\"sqs:GetQueueAttributes\",\"sqs:DeleteMessage\",\"sqs:ChangeMessageVisibility\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:sqs:us-east-1:831926620158:sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo\"}]}"
                            }
                        ],
                        "managedPolicyArns": [
                            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                        ],
                        "maxSessionDuration": 3600,
                        "name": "producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFu-useast1",
                        "namePrefix": "",
                        "path": "/",
                        "permissionsBoundary": "",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "uniqueId": "AROA4DMVQZ77EHDMF64HS"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function::SyncWebsiteRevalidationEventsSubscriberUffhrsFunction",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "assumeRolePolicy": [],
                        "inlinePolicies": [],
                        "managedPolicyArns": [],
                        "name": []
                    },
                    "created": "2024-10-06T16:18:07.758719Z",
                    "modified": "2024-10-06T16:18:07.758719Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/function.ts#1619,14"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionCode",
                    "custom": true,
                    "id": "assets/SyncWebsiteRevalidationEventsSubscriberUffhrsFunction-code-bb66462d55a6e8416878a73e00a74c42ac8c5228835929bb5304d501c7dd9ae7.zip",
                    "type": "aws:s3/bucketObjectv2:BucketObjectv2",
                    "inputs": {
                        "__defaults": [
                            "forceDestroy"
                        ],
                        "bucket": "sst-asset-vaavddthmxfo",
                        "forceDestroy": false,
                        "key": "assets/SyncWebsiteRevalidationEventsSubscriberUffhrsFunction-code-bb66462d55a6e8416878a73e00a74c42ac8c5228835929bb5304d501c7dd9ae7.zip",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "bb66462d55a6e8416878a73e00a74c42ac8c5228835929bb5304d501c7dd9ae7",
                            "path": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/artifacts/SyncWebsiteRevalidationEventsSubscriberUffhrsFunction/code.zip"
                        },
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "acl": null,
                        "arn": "arn:aws:s3:::sst-asset-vaavddthmxfo/assets/SyncWebsiteRevalidationEventsSubscriberUffhrsFunction-code-bb66462d55a6e8416878a73e00a74c42ac8c5228835929bb5304d501c7dd9ae7.zip",
                        "bucket": "sst-asset-vaavddthmxfo",
                        "bucketKeyEnabled": false,
                        "cacheControl": "",
                        "checksumAlgorithm": null,
                        "checksumCrc32": "",
                        "checksumCrc32c": "",
                        "checksumSha1": "",
                        "checksumSha256": "",
                        "content": null,
                        "contentBase64": null,
                        "contentDisposition": "",
                        "contentEncoding": "",
                        "contentLanguage": "",
                        "contentType": "application/octet-stream",
                        "etag": "201aade590dbd83337881d18ed67b659",
                        "forceDestroy": false,
                        "id": "assets/SyncWebsiteRevalidationEventsSubscriberUffhrsFunction-code-bb66462d55a6e8416878a73e00a74c42ac8c5228835929bb5304d501c7dd9ae7.zip",
                        "key": "assets/SyncWebsiteRevalidationEventsSubscriberUffhrsFunction-code-bb66462d55a6e8416878a73e00a74c42ac8c5228835929bb5304d501c7dd9ae7.zip",
                        "kmsKeyId": null,
                        "metadata": null,
                        "objectLockLegalHoldStatus": "",
                        "objectLockMode": "",
                        "objectLockRetainUntilDate": "",
                        "overrideProvider": null,
                        "serverSideEncryption": "AES256",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "bb66462d55a6e8416878a73e00a74c42ac8c5228835929bb5304d501c7dd9ae7",
                            "path": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/artifacts/SyncWebsiteRevalidationEventsSubscriberUffhrsFunction/code.zip"
                        },
                        "sourceHash": null,
                        "storageClass": "STANDARD",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "versionId": "",
                        "websiteRedirect": ""
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function::SyncWebsiteRevalidationEventsSubscriberUffhrsFunction",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "bucket": [],
                        "key": [],
                        "source": []
                    },
                    "created": "2024-10-06T16:27:05.172925Z",
                    "modified": "2024-10-06T16:27:05.172925Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketObjectv2.ts#429,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteRevalidationSeederCode",
                    "custom": true,
                    "id": "assets/SyncWebsiteRevalidationSeeder-code-848b6f9afe58621c51d271d0b5e8a1c2e7e4f7e4178f0b2d70c4c60f7a0df333.zip",
                    "type": "aws:s3/bucketObjectv2:BucketObjectv2",
                    "inputs": {
                        "__defaults": [
                            "forceDestroy"
                        ],
                        "bucket": "sst-asset-vaavddthmxfo",
                        "forceDestroy": false,
                        "key": "assets/SyncWebsiteRevalidationSeeder-code-848b6f9afe58621c51d271d0b5e8a1c2e7e4f7e4178f0b2d70c4c60f7a0df333.zip",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "848b6f9afe58621c51d271d0b5e8a1c2e7e4f7e4178f0b2d70c4c60f7a0df333",
                            "path": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/artifacts/SyncWebsiteRevalidationSeeder/code.zip"
                        },
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "acl": null,
                        "arn": "arn:aws:s3:::sst-asset-vaavddthmxfo/assets/SyncWebsiteRevalidationSeeder-code-848b6f9afe58621c51d271d0b5e8a1c2e7e4f7e4178f0b2d70c4c60f7a0df333.zip",
                        "bucket": "sst-asset-vaavddthmxfo",
                        "bucketKeyEnabled": false,
                        "cacheControl": "",
                        "checksumAlgorithm": null,
                        "checksumCrc32": "",
                        "checksumCrc32c": "",
                        "checksumSha1": "",
                        "checksumSha256": "",
                        "content": null,
                        "contentBase64": null,
                        "contentDisposition": "",
                        "contentEncoding": "",
                        "contentLanguage": "",
                        "contentType": "application/octet-stream",
                        "etag": "1fe41f7493cb046dbfb4318360506e24",
                        "forceDestroy": false,
                        "id": "assets/SyncWebsiteRevalidationSeeder-code-848b6f9afe58621c51d271d0b5e8a1c2e7e4f7e4178f0b2d70c4c60f7a0df333.zip",
                        "key": "assets/SyncWebsiteRevalidationSeeder-code-848b6f9afe58621c51d271d0b5e8a1c2e7e4f7e4178f0b2d70c4c60f7a0df333.zip",
                        "kmsKeyId": null,
                        "metadata": null,
                        "objectLockLegalHoldStatus": "",
                        "objectLockMode": "",
                        "objectLockRetainUntilDate": "",
                        "overrideProvider": null,
                        "serverSideEncryption": "AES256",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "848b6f9afe58621c51d271d0b5e8a1c2e7e4f7e4178f0b2d70c4c60f7a0df333",
                            "path": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/artifacts/SyncWebsiteRevalidationSeeder/code.zip"
                        },
                        "sourceHash": null,
                        "storageClass": "STANDARD",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "versionId": "",
                        "websiteRedirect": ""
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteRevalidationSeeder",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "bucket": [],
                        "key": [],
                        "source": []
                    },
                    "created": "2024-10-06T16:27:05.442597Z",
                    "modified": "2024-10-06T16:27:05.442597Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketObjectv2.ts#429,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteDefaultCode",
                    "custom": true,
                    "id": "assets/SyncWebsiteDefault-code-7f1b4424c12b71277b072fce450e162fcc6c6b1f3571b8d6c3061b7bf789569b.zip",
                    "type": "aws:s3/bucketObjectv2:BucketObjectv2",
                    "inputs": {
                        "__defaults": [
                            "forceDestroy"
                        ],
                        "bucket": "sst-asset-vaavddthmxfo",
                        "forceDestroy": false,
                        "key": "assets/SyncWebsiteDefault-code-7f1b4424c12b71277b072fce450e162fcc6c6b1f3571b8d6c3061b7bf789569b.zip",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "7f1b4424c12b71277b072fce450e162fcc6c6b1f3571b8d6c3061b7bf789569b",
                            "path": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/artifacts/SyncWebsiteDefault/code.zip"
                        },
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "acl": null,
                        "arn": "arn:aws:s3:::sst-asset-vaavddthmxfo/assets/SyncWebsiteDefault-code-7f1b4424c12b71277b072fce450e162fcc6c6b1f3571b8d6c3061b7bf789569b.zip",
                        "bucket": "sst-asset-vaavddthmxfo",
                        "bucketKeyEnabled": false,
                        "cacheControl": "",
                        "checksumAlgorithm": null,
                        "checksumCrc32": "",
                        "checksumCrc32c": "",
                        "checksumSha1": "",
                        "checksumSha256": "",
                        "content": null,
                        "contentBase64": null,
                        "contentDisposition": "",
                        "contentEncoding": "",
                        "contentLanguage": "",
                        "contentType": "binary/octet-stream",
                        "etag": "5bd3e582b6ce3493b7da43dce4b82419-2",
                        "forceDestroy": false,
                        "id": "assets/SyncWebsiteDefault-code-7f1b4424c12b71277b072fce450e162fcc6c6b1f3571b8d6c3061b7bf789569b.zip",
                        "key": "assets/SyncWebsiteDefault-code-7f1b4424c12b71277b072fce450e162fcc6c6b1f3571b8d6c3061b7bf789569b.zip",
                        "kmsKeyId": null,
                        "metadata": null,
                        "objectLockLegalHoldStatus": "",
                        "objectLockMode": "",
                        "objectLockRetainUntilDate": "",
                        "overrideProvider": null,
                        "serverSideEncryption": "AES256",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "7f1b4424c12b71277b072fce450e162fcc6c6b1f3571b8d6c3061b7bf789569b",
                            "path": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/artifacts/SyncWebsiteDefault/code.zip"
                        },
                        "sourceHash": null,
                        "storageClass": "STANDARD",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "versionId": "",
                        "websiteRedirect": ""
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteDefault",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "bucket": [],
                        "key": [],
                        "source": []
                    },
                    "created": "2024-10-06T16:27:07.375762Z",
                    "modified": "2024-10-06T16:27:07.375762Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketObjectv2.ts#429,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteImageOptimizerCode",
                    "custom": true,
                    "id": "assets/SyncWebsiteImageOptimizer-code-09bf7c49cdc9eb04484f85bf7ee8311440ce12018ecf7e982fd022c7c276bfdc.zip",
                    "type": "aws:s3/bucketObjectv2:BucketObjectv2",
                    "inputs": {
                        "__defaults": [
                            "forceDestroy"
                        ],
                        "bucket": "sst-asset-vaavddthmxfo",
                        "forceDestroy": false,
                        "key": "assets/SyncWebsiteImageOptimizer-code-09bf7c49cdc9eb04484f85bf7ee8311440ce12018ecf7e982fd022c7c276bfdc.zip",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "09bf7c49cdc9eb04484f85bf7ee8311440ce12018ecf7e982fd022c7c276bfdc",
                            "path": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/artifacts/SyncWebsiteImageOptimizer/code.zip"
                        },
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        }
                    },
                    "outputs": {
                        "acl": null,
                        "arn": "arn:aws:s3:::sst-asset-vaavddthmxfo/assets/SyncWebsiteImageOptimizer-code-09bf7c49cdc9eb04484f85bf7ee8311440ce12018ecf7e982fd022c7c276bfdc.zip",
                        "bucket": "sst-asset-vaavddthmxfo",
                        "bucketKeyEnabled": false,
                        "cacheControl": "",
                        "checksumAlgorithm": null,
                        "checksumCrc32": "",
                        "checksumCrc32c": "",
                        "checksumSha1": "",
                        "checksumSha256": "",
                        "content": null,
                        "contentBase64": null,
                        "contentDisposition": "",
                        "contentEncoding": "",
                        "contentLanguage": "",
                        "contentType": "binary/octet-stream",
                        "etag": "72e3df4572396f6b90b5c83fa18a3ebc-3",
                        "forceDestroy": false,
                        "id": "assets/SyncWebsiteImageOptimizer-code-09bf7c49cdc9eb04484f85bf7ee8311440ce12018ecf7e982fd022c7c276bfdc.zip",
                        "key": "assets/SyncWebsiteImageOptimizer-code-09bf7c49cdc9eb04484f85bf7ee8311440ce12018ecf7e982fd022c7c276bfdc.zip",
                        "kmsKeyId": null,
                        "metadata": null,
                        "objectLockLegalHoldStatus": "",
                        "objectLockMode": "",
                        "objectLockRetainUntilDate": "",
                        "overrideProvider": null,
                        "serverSideEncryption": "AES256",
                        "source": {
                            "4dabf18193072939515e22adb298388d": "0def7320c3a5731c473e5ecbe6d01bc7",
                            "hash": "09bf7c49cdc9eb04484f85bf7ee8311440ce12018ecf7e982fd022c7c276bfdc",
                            "path": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/artifacts/SyncWebsiteImageOptimizer/code.zip"
                        },
                        "sourceHash": null,
                        "storageClass": "STANDARD",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "versionId": "",
                        "websiteRedirect": ""
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteImageOptimizer",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "bucket": [],
                        "key": [],
                        "source": []
                    },
                    "created": "2024-10-06T16:27:07.74063Z",
                    "modified": "2024-10-06T16:27:07.74063Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/s3/bucketObjectv2.ts#429,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFunction",
                    "custom": true,
                    "id": "producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                    "type": "aws:lambda/function:Function",
                    "inputs": {
                        "__defaults": [
                            "reservedConcurrentExecutions",
                            "skipDestroy"
                        ],
                        "architectures": [
                            "x86_64"
                        ],
                        "description": "Subscribed to SyncWebsiteRevalidationEventsSubscriberUffhrs",
                        "environment": {
                            "__defaults": [],
                            "variables": {
                                "SST_RESOURCE_App": "{\"name\":\"sync-website\",\"stage\":\"production\"}"
                            }
                        },
                        "handler": "index.handler",
                        "loggingConfig": {
                            "__defaults": [
                                "applicationLogLevel",
                                "systemLogLevel"
                            ],
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                        "packageType": "Zip",
                        "publish": false,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::831926620158:role/producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFu-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-vaavddthmxfo",
                        "s3Key": "assets/SyncWebsiteRevalidationEventsSubscriberUffhrsFunction-code-bb66462d55a6e8416878a73e00a74c42ac8c5228835929bb5304d501c7dd9ae7.zip",
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "timeout": 30
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                        "architectures": [
                            "x86_64"
                        ],
                        "arn": "arn:aws:lambda:us-east-1:831926620158:function:producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                        "code": null,
                        "codeSha256": "u2ZGLVWm6EFoeKc+AKdMQqyMUiiDWSm7UwTVAcfdmuc=",
                        "codeSigningConfigArn": "",
                        "deadLetterConfig": null,
                        "description": "Subscribed to SyncWebsiteRevalidationEventsSubscriberUffhrs",
                        "environment": {
                            "variables": {
                                "SST_RESOURCE_App": "{\"name\":\"sync-website\",\"stage\":\"production\"}"
                            }
                        },
                        "ephemeralStorage": {
                            "size": 512
                        },
                        "fileSystemConfig": null,
                        "handler": "index.handler",
                        "id": "producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                        "imageConfig": null,
                        "imageUri": "",
                        "invokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:831926620158:function:producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu/invocations",
                        "kmsKeyArn": "",
                        "lastModified": "2024-10-06T16:27:06.000+0000",
                        "layers": null,
                        "loggingConfig": {
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                        "packageType": "Zip",
                        "publish": false,
                        "qualifiedArn": "arn:aws:lambda:us-east-1:831926620158:function:producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu:$LATEST",
                        "qualifiedInvokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:831926620158:function:producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu:$LATEST/invocations",
                        "replaceSecurityGroupsOnDestroy": null,
                        "replacementSecurityGroupIds": null,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::831926620158:role/producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFu-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-vaavddthmxfo",
                        "s3Key": "assets/SyncWebsiteRevalidationEventsSubscriberUffhrsFunction-code-bb66462d55a6e8416878a73e00a74c42ac8c5228835929bb5304d501c7dd9ae7.zip",
                        "s3ObjectVersion": null,
                        "signingJobArn": "",
                        "signingProfileVersionArn": "",
                        "skipDestroy": false,
                        "snapStart": null,
                        "sourceCodeHash": "",
                        "sourceCodeSize": 2328,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "timeout": 30,
                        "tracingConfig": {
                            "mode": "PassThrough"
                        },
                        "version": "$LATEST",
                        "vpcConfig": null
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function::SyncWebsiteRevalidationEventsSubscriberUffhrsFunction",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionLogGroup",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:iam/role:Role::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionRole",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionCode"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "architectures": [],
                        "description": [],
                        "environment": [],
                        "handler": [],
                        "loggingConfig": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionLogGroup"
                        ],
                        "memorySize": [],
                        "name": [],
                        "packageType": [],
                        "publish": [],
                        "role": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:iam/role:Role::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionRole"
                        ],
                        "runtime": [],
                        "s3Bucket": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionCode"
                        ],
                        "s3Key": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionCode"
                        ],
                        "timeout": []
                    },
                    "created": "2024-10-06T16:18:20.064946Z",
                    "modified": "2024-10-06T16:27:12.474923Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/function.ts#551,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteRevalidationSeederFunction",
                    "custom": true,
                    "id": "sync-website-production-SyncWebsiteRevalidationSeederFunction",
                    "type": "aws:lambda/function:Function",
                    "inputs": {
                        "__defaults": [
                            "reservedConcurrentExecutions",
                            "skipDestroy"
                        ],
                        "architectures": [
                            "x86_64"
                        ],
                        "description": "SyncWebsite ISR revalidation data seeder",
                        "environment": {
                            "__defaults": [],
                            "variables": {
                                "CACHE_DYNAMO_TABLE": "sync-website-production-SyncWebsiteRevalidationTable",
                                "SST_RESOURCE_App": "{\"name\":\"sync-website\",\"stage\":\"production\"}"
                            }
                        },
                        "handler": "index.handler",
                        "loggingConfig": {
                            "__defaults": [
                                "applicationLogLevel",
                                "systemLogLevel"
                            ],
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/sync-website-production-SyncWebsiteRevalidationSeederFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 128,
                        "name": "sync-website-production-SyncWebsiteRevalidationSeederFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::831926620158:role/sync-websit-production-SyncWebsiteRevalidationSeederRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-vaavddthmxfo",
                        "s3Key": "assets/SyncWebsiteRevalidationSeeder-code-848b6f9afe58621c51d271d0b5e8a1c2e7e4f7e4178f0b2d70c4c60f7a0df333.zip",
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "timeout": 900
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                        "architectures": [
                            "x86_64"
                        ],
                        "arn": "arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteRevalidationSeederFunction",
                        "code": null,
                        "codeSha256": "hItvmv5YYhxR0nHQteihwufk9+QXjwstcMTGD3oN8zM=",
                        "codeSigningConfigArn": "",
                        "deadLetterConfig": null,
                        "description": "SyncWebsite ISR revalidation data seeder",
                        "environment": {
                            "variables": {
                                "CACHE_DYNAMO_TABLE": "sync-website-production-SyncWebsiteRevalidationTable",
                                "SST_RESOURCE_App": "{\"name\":\"sync-website\",\"stage\":\"production\"}"
                            }
                        },
                        "ephemeralStorage": {
                            "size": 512
                        },
                        "fileSystemConfig": null,
                        "handler": "index.handler",
                        "id": "sync-website-production-SyncWebsiteRevalidationSeederFunction",
                        "imageConfig": null,
                        "imageUri": "",
                        "invokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteRevalidationSeederFunction/invocations",
                        "kmsKeyArn": "",
                        "lastModified": "2024-10-06T16:27:06.000+0000",
                        "layers": null,
                        "loggingConfig": {
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/sync-website-production-SyncWebsiteRevalidationSeederFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 128,
                        "name": "sync-website-production-SyncWebsiteRevalidationSeederFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "qualifiedArn": "arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteRevalidationSeederFunction:$LATEST",
                        "qualifiedInvokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteRevalidationSeederFunction:$LATEST/invocations",
                        "replaceSecurityGroupsOnDestroy": null,
                        "replacementSecurityGroupIds": null,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::831926620158:role/sync-websit-production-SyncWebsiteRevalidationSeederRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-vaavddthmxfo",
                        "s3Key": "assets/SyncWebsiteRevalidationSeeder-code-848b6f9afe58621c51d271d0b5e8a1c2e7e4f7e4178f0b2d70c4c60f7a0df333.zip",
                        "s3ObjectVersion": null,
                        "signingJobArn": "",
                        "signingProfileVersionArn": "",
                        "skipDestroy": false,
                        "snapStart": null,
                        "sourceCodeHash": "",
                        "sourceCodeSize": 2849,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "timeout": 900,
                        "tracingConfig": {
                            "mode": "PassThrough"
                        },
                        "version": "$LATEST",
                        "vpcConfig": null
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteRevalidationSeeder",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:dynamodb/table:Table::SyncWebsiteRevalidationTable",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteRevalidationSeederLogGroup",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:iam/role:Role::SyncWebsiteRevalidationSeederRole",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteRevalidationSeederCode"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "architectures": [],
                        "description": [],
                        "environment": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:dynamodb/table:Table::SyncWebsiteRevalidationTable"
                        ],
                        "handler": [],
                        "loggingConfig": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteRevalidationSeederLogGroup"
                        ],
                        "memorySize": [],
                        "name": [],
                        "packageType": [],
                        "publish": [],
                        "role": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:iam/role:Role::SyncWebsiteRevalidationSeederRole"
                        ],
                        "runtime": [],
                        "s3Bucket": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteRevalidationSeederCode"
                        ],
                        "s3Key": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteRevalidationSeederCode"
                        ],
                        "timeout": []
                    },
                    "created": "2024-10-06T16:18:15.419374Z",
                    "modified": "2024-10-06T16:27:12.474923Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/function.ts#551,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$aws:lambda/eventSourceMapping:EventSourceMapping::SyncWebsiteRevalidationEventsSubscriberUffhrsEventSourceMapping",
                    "custom": true,
                    "id": "d92c011f-dc7b-423d-a29c-03d0148a3c80",
                    "type": "aws:lambda/eventSourceMapping:EventSourceMapping",
                    "inputs": {
                        "__defaults": [
                            "enabled"
                        ],
                        "batchSize": 5,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:831926620158:sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo",
                        "functionName": "producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                        "functionResponseTypes": [],
                        "maximumBatchingWindowInSeconds": 0
                    },
                    "outputs": {
                        "amazonManagedKafkaEventSourceConfig": null,
                        "batchSize": 5,
                        "bisectBatchOnFunctionError": false,
                        "destinationConfig": null,
                        "documentDbEventSourceConfig": null,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:831926620158:sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo",
                        "filterCriteria": null,
                        "functionArn": "arn:aws:lambda:us-east-1:831926620158:function:producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                        "functionName": "arn:aws:lambda:us-east-1:831926620158:function:producti-SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFu",
                        "functionResponseTypes": null,
                        "id": "d92c011f-dc7b-423d-a29c-03d0148a3c80",
                        "kmsKeyArn": "",
                        "lastModified": "2024-10-06T16:18:20Z",
                        "lastProcessingResult": "",
                        "maximumBatchingWindowInSeconds": 0,
                        "maximumRecordAgeInSeconds": 0,
                        "maximumRetryAttempts": 0,
                        "parallelizationFactor": 0,
                        "queues": null,
                        "scalingConfig": null,
                        "selfManagedEventSource": null,
                        "selfManagedKafkaEventSourceConfig": null,
                        "sourceAccessConfigurations": [],
                        "startingPosition": "",
                        "startingPositionTimestamp": "",
                        "state": "Enabled",
                        "stateTransitionReason": "USER_INITIATED",
                        "topics": null,
                        "tumblingWindowInSeconds": 0,
                        "uuid": "d92c011f-dc7b-423d-a29c-03d0148a3c80"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber::SyncWebsiteRevalidationEventsSubscriberUffhrs",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Queue$aws:sqs/queue:Queue::SyncWebsiteRevalidationEventsQueue",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFunction"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "batchSize": [],
                        "eventSourceArn": [],
                        "functionName": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Queue$aws:sqs/queue:Queue::SyncWebsiteRevalidationEventsQueue",
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:QueueLambdaSubscriber$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteRevalidationEventsSubscriberUffhrsFunctionFunction"
                        ],
                        "functionResponseTypes": [],
                        "maximumBatchingWindowInSeconds": []
                    },
                    "created": "2024-10-06T16:18:35.976483Z",
                    "modified": "2024-10-06T16:18:35.976483Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/queue-lambda-subscriber.ts#81,14"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:lambda/invocation:Invocation::SyncWebsiteRevalidationSeed",
                    "custom": true,
                    "id": "sync-website-production-SyncWebsiteRevalidationSeederFunction_$LATEST_a4dc148fe8537f1e39264f6aac10b5b8",
                    "type": "aws:lambda/invocation:Invocation",
                    "inputs": {
                        "__defaults": [
                            "lifecycleScope",
                            "qualifier",
                            "terraformKey"
                        ],
                        "functionName": "sync-website-production-SyncWebsiteRevalidationSeederFunction",
                        "input": "{\"RequestType\":\"Create\"}",
                        "lifecycleScope": "CREATE_ONLY",
                        "qualifier": "$LATEST",
                        "terraformKey": "tf",
                        "triggers": {
                            "version": "1728232019961"
                        }
                    },
                    "outputs": {
                        "functionName": "sync-website-production-SyncWebsiteRevalidationSeederFunction",
                        "id": "sync-website-production-SyncWebsiteRevalidationSeederFunction_$LATEST_a4dc148fe8537f1e39264f6aac10b5b8",
                        "input": "{\"RequestType\":\"Create\"}",
                        "lifecycleScope": "CREATE_ONLY",
                        "qualifier": "$LATEST",
                        "result": "{\"type\":\"dummy\",\"original\":{\"type\":\"initializationFunction\",\"resourceId\":\"dynamodb-cache\"}}",
                        "terraformKey": "tf",
                        "triggers": {
                            "version": "1728232019961"
                        }
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteRevalidationSeederFunction"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "functionName": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteRevalidationSeederFunction"
                        ],
                        "input": [],
                        "triggers": []
                    },
                    "created": "2024-10-06T16:27:14.294044Z",
                    "modified": "2024-10-06T16:27:14.294044Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/invocation.ts#159,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteDefaultFunction",
                    "custom": true,
                    "id": "sync-website-production-SyncWebsiteDefaultFunction",
                    "type": "aws:lambda/function:Function",
                    "inputs": {
                        "__defaults": [
                            "reservedConcurrentExecutions",
                            "skipDestroy"
                        ],
                        "architectures": [
                            "x86_64"
                        ],
                        "description": "SyncWebsite server",
                        "environment": {
                            "__defaults": [],
                            "variables": {
                                "CACHE_BUCKET_KEY_PREFIX": "_cache",
                                "CACHE_BUCKET_NAME": "sync-website-production-syncwebsiteassets-wxtuonvr",
                                "CACHE_BUCKET_REGION": "us-east-1",
                                "CACHE_DYNAMO_TABLE": "sync-website-production-SyncWebsiteRevalidationTable",
                                "REVALIDATION_QUEUE_REGION": "us-east-1",
                                "REVALIDATION_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/831926620158/sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo",
                                "SST_RESOURCE_App": "{\"name\":\"sync-website\",\"stage\":\"production\"}"
                            }
                        },
                        "handler": "index.handler",
                        "layers": [],
                        "loggingConfig": {
                            "__defaults": [
                                "applicationLogLevel",
                                "systemLogLevel"
                            ],
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/sync-website-production-SyncWebsiteDefaultFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "sync-website-production-SyncWebsiteDefaultFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::831926620158:role/sync-website-production-SyncWebsiteDefaultRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-vaavddthmxfo",
                        "s3Key": "assets/SyncWebsiteDefault-code-7f1b4424c12b71277b072fce450e162fcc6c6b1f3571b8d6c3061b7bf789569b.zip",
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "timeout": 20
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                        "architectures": [
                            "x86_64"
                        ],
                        "arn": "arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteDefaultFunction",
                        "code": null,
                        "codeSha256": "fxtEJMErcSd7By/ORQ4WL8xsax81cbjWwwYbe/eJVps=",
                        "codeSigningConfigArn": "",
                        "deadLetterConfig": null,
                        "description": "SyncWebsite server",
                        "environment": {
                            "variables": {
                                "CACHE_BUCKET_KEY_PREFIX": "_cache",
                                "CACHE_BUCKET_NAME": "sync-website-production-syncwebsiteassets-wxtuonvr",
                                "CACHE_BUCKET_REGION": "us-east-1",
                                "CACHE_DYNAMO_TABLE": "sync-website-production-SyncWebsiteRevalidationTable",
                                "REVALIDATION_QUEUE_REGION": "us-east-1",
                                "REVALIDATION_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/831926620158/sync-website-production-SyncWebsiteRevalidationEventsQueue.fifo",
                                "SST_RESOURCE_App": "{\"name\":\"sync-website\",\"stage\":\"production\"}"
                            }
                        },
                        "ephemeralStorage": {
                            "size": 512
                        },
                        "fileSystemConfig": null,
                        "handler": "index.handler",
                        "id": "sync-website-production-SyncWebsiteDefaultFunction",
                        "imageConfig": null,
                        "imageUri": "",
                        "invokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteDefaultFunction/invocations",
                        "kmsKeyArn": "",
                        "lastModified": "2024-10-06T16:27:08.000+0000",
                        "layers": [],
                        "loggingConfig": {
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/sync-website-production-SyncWebsiteDefaultFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1024,
                        "name": "sync-website-production-SyncWebsiteDefaultFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "qualifiedArn": "arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteDefaultFunction:$LATEST",
                        "qualifiedInvokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteDefaultFunction:$LATEST/invocations",
                        "replaceSecurityGroupsOnDestroy": null,
                        "replacementSecurityGroupIds": null,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::831926620158:role/sync-website-production-SyncWebsiteDefaultRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-vaavddthmxfo",
                        "s3Key": "assets/SyncWebsiteDefault-code-7f1b4424c12b71277b072fce450e162fcc6c6b1f3571b8d6c3061b7bf789569b.zip",
                        "s3ObjectVersion": null,
                        "signingJobArn": "",
                        "signingProfileVersionArn": "",
                        "skipDestroy": false,
                        "snapStart": null,
                        "sourceCodeHash": "",
                        "sourceCodeSize": 5586434,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "timeout": 20,
                        "tracingConfig": {
                            "mode": "PassThrough"
                        },
                        "version": "$LATEST",
                        "vpcConfig": null
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteDefault",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteDefaultLogGroup",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:iam/role:Role::SyncWebsiteDefaultRole",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteDefaultCode"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "architectures": [],
                        "description": [],
                        "environment": [],
                        "handler": [],
                        "layers": [],
                        "loggingConfig": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteDefaultLogGroup"
                        ],
                        "memorySize": [],
                        "name": [],
                        "packageType": [],
                        "publish": [],
                        "role": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:iam/role:Role::SyncWebsiteDefaultRole"
                        ],
                        "runtime": [],
                        "s3Bucket": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteDefaultCode"
                        ],
                        "s3Key": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteDefaultCode"
                        ],
                        "timeout": []
                    },
                    "created": "2024-10-06T16:18:20.065001Z",
                    "modified": "2024-10-06T16:27:15.51751Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/function.ts#551,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/functionUrl:FunctionUrl::SyncWebsiteDefaultUrl",
                    "custom": true,
                    "id": "sync-website-production-SyncWebsiteDefaultFunction",
                    "type": "aws:lambda/functionUrl:FunctionUrl",
                    "inputs": {
                        "__defaults": [],
                        "authorizationType": "NONE",
                        "cors": {
                            "__defaults": [],
                            "allowHeaders": [
                                "*"
                            ],
                            "allowMethods": [
                                "*"
                            ],
                            "allowOrigins": [
                                "*"
                            ]
                        },
                        "functionName": "sync-website-production-SyncWebsiteDefaultFunction",
                        "invokeMode": "BUFFERED"
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000}}",
                        "authorizationType": "NONE",
                        "cors": {
                            "allowCredentials": false,
                            "allowHeaders": [
                                "*"
                            ],
                            "allowMethods": [
                                "*"
                            ],
                            "allowOrigins": [
                                "*"
                            ],
                            "exposeHeaders": null,
                            "maxAge": 0
                        },
                        "functionArn": "arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteDefaultFunction",
                        "functionName": "sync-website-production-SyncWebsiteDefaultFunction",
                        "functionUrl": "https://3yrlbriscgxzrelw4226upj3ra0gzadn.lambda-url.us-east-1.on.aws/",
                        "id": "sync-website-production-SyncWebsiteDefaultFunction",
                        "invokeMode": "BUFFERED",
                        "qualifier": "",
                        "urlId": "3yrlbriscgxzrelw4226upj3ra0gzadn"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteDefault",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteDefaultFunction"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "authorizationType": [],
                        "cors": [],
                        "functionName": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteDefaultFunction"
                        ],
                        "invokeMode": []
                    },
                    "created": "2024-10-06T16:18:21.253234Z",
                    "modified": "2024-10-06T16:18:21.253234Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/functionUrl.ts#154,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteImageOptimizerFunction",
                    "custom": true,
                    "id": "sync-website-production-SyncWebsiteImageOptimizerFunction",
                    "type": "aws:lambda/function:Function",
                    "inputs": {
                        "__defaults": [
                            "reservedConcurrentExecutions",
                            "skipDestroy"
                        ],
                        "architectures": [
                            "arm64"
                        ],
                        "description": "SyncWebsite image optimizer",
                        "environment": {
                            "__defaults": [],
                            "variables": {
                                "BUCKET_KEY_PREFIX": "_assets",
                                "BUCKET_NAME": "sync-website-production-syncwebsiteassets-wxtuonvr",
                                "SST_RESOURCE_App": "{\"name\":\"sync-website\",\"stage\":\"production\"}"
                            }
                        },
                        "handler": "index.handler",
                        "loggingConfig": {
                            "__defaults": [
                                "applicationLogLevel",
                                "systemLogLevel"
                            ],
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/sync-website-production-SyncWebsiteImageOptimizerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1536,
                        "name": "sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::831926620158:role/sync-website-production-SyncWebsiteImageOptimizerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-vaavddthmxfo",
                        "s3Key": "assets/SyncWebsiteImageOptimizer-code-09bf7c49cdc9eb04484f85bf7ee8311440ce12018ecf7e982fd022c7c276bfdc.zip",
                        "skipDestroy": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "timeout": 25
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                        "architectures": [
                            "arm64"
                        ],
                        "arn": "arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "code": null,
                        "codeSha256": "Cb98Sc3J6wRIT4W/fugxFEDOEgGOz36YL9Aix8J2v9w=",
                        "codeSigningConfigArn": "",
                        "deadLetterConfig": null,
                        "description": "SyncWebsite image optimizer",
                        "environment": {
                            "variables": {
                                "BUCKET_KEY_PREFIX": "_assets",
                                "BUCKET_NAME": "sync-website-production-syncwebsiteassets-wxtuonvr",
                                "SST_RESOURCE_App": "{\"name\":\"sync-website\",\"stage\":\"production\"}"
                            }
                        },
                        "ephemeralStorage": {
                            "size": 512
                        },
                        "fileSystemConfig": null,
                        "handler": "index.handler",
                        "id": "sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "imageConfig": null,
                        "imageUri": "",
                        "invokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteImageOptimizerFunction/invocations",
                        "kmsKeyArn": "",
                        "lastModified": "2024-10-06T16:27:08.000+0000",
                        "layers": null,
                        "loggingConfig": {
                            "applicationLogLevel": "",
                            "logFormat": "Text",
                            "logGroup": "/aws/lambda/sync-website-production-SyncWebsiteImageOptimizerFunction",
                            "systemLogLevel": ""
                        },
                        "memorySize": 1536,
                        "name": "sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "packageType": "Zip",
                        "publish": false,
                        "qualifiedArn": "arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteImageOptimizerFunction:$LATEST",
                        "qualifiedInvokeArn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteImageOptimizerFunction:$LATEST/invocations",
                        "replaceSecurityGroupsOnDestroy": null,
                        "replacementSecurityGroupIds": null,
                        "reservedConcurrentExecutions": -1,
                        "role": "arn:aws:iam::831926620158:role/sync-website-production-SyncWebsiteImageOptimizerRole-useast1",
                        "runtime": "nodejs20.x",
                        "s3Bucket": "sst-asset-vaavddthmxfo",
                        "s3Key": "assets/SyncWebsiteImageOptimizer-code-09bf7c49cdc9eb04484f85bf7ee8311440ce12018ecf7e982fd022c7c276bfdc.zip",
                        "s3ObjectVersion": null,
                        "signingJobArn": "",
                        "signingProfileVersionArn": "",
                        "skipDestroy": false,
                        "snapStart": null,
                        "sourceCodeHash": "",
                        "sourceCodeSize": 11549894,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "timeout": 25,
                        "tracingConfig": {
                            "mode": "PassThrough"
                        },
                        "version": "$LATEST",
                        "vpcConfig": null
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteImageOptimizer",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteImageOptimizerLogGroup",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:iam/role:Role::SyncWebsiteImageOptimizerRole",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteImageOptimizerCode"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "architectures": [],
                        "description": [],
                        "environment": [],
                        "handler": [],
                        "loggingConfig": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:cloudwatch/logGroup:LogGroup::SyncWebsiteImageOptimizerLogGroup"
                        ],
                        "memorySize": [],
                        "name": [],
                        "packageType": [],
                        "publish": [],
                        "role": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:iam/role:Role::SyncWebsiteImageOptimizerRole"
                        ],
                        "runtime": [],
                        "s3Bucket": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteImageOptimizerCode"
                        ],
                        "s3Key": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:s3/bucketObjectv2:BucketObjectv2::SyncWebsiteImageOptimizerCode"
                        ],
                        "timeout": []
                    },
                    "created": "2024-10-06T16:18:20.813544Z",
                    "modified": "2024-10-06T16:27:16.070693Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/function.ts#551,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/functionUrl:FunctionUrl::SyncWebsiteImageOptimizerUrl",
                    "custom": true,
                    "id": "sync-website-production-SyncWebsiteImageOptimizerFunction",
                    "type": "aws:lambda/functionUrl:FunctionUrl",
                    "inputs": {
                        "__defaults": [],
                        "authorizationType": "NONE",
                        "cors": {
                            "__defaults": [],
                            "allowHeaders": [
                                "*"
                            ],
                            "allowMethods": [
                                "*"
                            ],
                            "allowOrigins": [
                                "*"
                            ]
                        },
                        "functionName": "sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "invokeMode": "BUFFERED"
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000}}",
                        "authorizationType": "NONE",
                        "cors": {
                            "allowCredentials": false,
                            "allowHeaders": [
                                "*"
                            ],
                            "allowMethods": [
                                "*"
                            ],
                            "allowOrigins": [
                                "*"
                            ],
                            "exposeHeaders": null,
                            "maxAge": 0
                        },
                        "functionArn": "arn:aws:lambda:us-east-1:831926620158:function:sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "functionName": "sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "functionUrl": "https://cfmzvcmudlkiahccm5dhgu2ke40hdhfz.lambda-url.us-east-1.on.aws/",
                        "id": "sync-website-production-SyncWebsiteImageOptimizerFunction",
                        "invokeMode": "BUFFERED",
                        "qualifier": "",
                        "urlId": "cfmzvcmudlkiahccm5dhgu2ke40hdhfz"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function::SyncWebsiteImageOptimizer",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteImageOptimizerFunction"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "authorizationType": [],
                        "cors": [],
                        "functionName": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/function:Function::SyncWebsiteImageOptimizerFunction"
                        ],
                        "invokeMode": []
                    },
                    "created": "2024-10-06T16:18:21.860853Z",
                    "modified": "2024-10-06T16:18:21.860853Z",
                    "sourcePosition": "project:///platform/node_modules/@pulumi/lambda/functionUrl.ts#154,9"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$pulumi-nodejs:dynamic:Resource::SyncWebsiteAssetFiles.sst.aws.BucketFiles",
                    "custom": true,
                    "id": "files",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.BucketFiles\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "bucketName": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "files": [
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "font/woff",
                                "hash": "e8b65928f551b17e3d67c3f709721b952c39842d14b00701f9232057fde73608",
                                "key": "_assets/_next/static/media/463dafcda517f24f-s.p.woff",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/media/463dafcda517f24f-s.p.woff"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "font/woff",
                                "hash": "296fafafd41304f7c992079054b8af914dbbd865f32de97c66d0f613b55755d6",
                                "key": "_assets/_next/static/media/4473ecc91f70f139-s.p.woff",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/media/4473ecc91f70f139-s.p.woff"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "678f6ce2cb80b1fe72fc67e7412be6e2ab6ada083111b64f7c40d35e3cba5e00",
                                "key": "_assets/_next/static/jStOSCIuig8hwaL8hzL8U/_ssgManifest.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/jStOSCIuig8hwaL8hzL8U/_ssgManifest.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "e1d1a41267d78cc06a5b5357a9cfb4c73d5b5bc71b5130ffa20ce9ec351849e0",
                                "key": "_assets/_next/static/jStOSCIuig8hwaL8hzL8U/_buildManifest.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/jStOSCIuig8hwaL8hzL8U/_buildManifest.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/css;charset=UTF-8",
                                "hash": "2bddca62bc24e7e7c056cf6836353a57ef4774b6ef84446d24348941a345bfff",
                                "key": "_assets/_next/static/css/8bc981040f61bc26.css",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/css/8bc981040f61bc26.css"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "40aaecea4eb9e103679cdd3c9522d685777586a6abbff7ab71f0a6ea175a656e",
                                "key": "_assets/_next/static/chunks/webpack-ca5508a5ffdda934.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/webpack-ca5508a5ffdda934.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "0973c1d64c88adc8e3c950410cb58b288f72118d5965b78049438deb8f2f9683",
                                "key": "_assets/_next/static/chunks/polyfills-42372ed130431b0a.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/polyfills-42372ed130431b0a.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "76d1fd876f483f7b162b0c09273dd9ff049f4ad734ba63b1b073e4bf0899d016",
                                "key": "_assets/_next/static/chunks/main-app-3a1ed74427df97e4.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/main-app-3a1ed74427df97e4.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "75638ffb4f0d0800d3e604938a1b5f8048e5b988d1fe790d5e0c0d70c67ca681",
                                "key": "_assets/_next/static/chunks/main-9b163cd436dc034a.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/main-9b163cd436dc034a.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "4250d53f0bc756ece2ddd690a008add1d7fdc887528c671f4dfe8d916d7787b7",
                                "key": "_assets/_next/static/chunks/framework-f66176bb897dc684.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/framework-f66176bb897dc684.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "71ed963804cbd4b773b16a2e290fb534288140999cca4833a8ff300a9d72a9b1",
                                "key": "_assets/_next/static/chunks/fd9d1056-3d5fd5de155f94df.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/fd9d1056-3d5fd5de155f94df.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "6c5517571814454208684a401bcb9d6eea43d4997eabe1de6e4d83070db2499d",
                                "key": "_assets/_next/static/chunks/85-1bf7c3d3f2d204a1.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/85-1bf7c3d3f2d204a1.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "81bad78002320a58642777b72ebc36fc56324adaa2930bca35ba729b5390a583",
                                "key": "_assets/_next/static/chunks/648-d76e0cd48278dcc0.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/648-d76e0cd48278dcc0.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "e6026c7e9ce107b55d62d52d295a39e06ae66ab1b15c4d3b31037864d4094a08",
                                "key": "_assets/_next/static/chunks/619edb50-a1e570e2792ef083.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/619edb50-a1e570e2792ef083.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "3b30eb46e7b29bb086349a4c4660c58b46f34f0a4465ab2adb345f82d60909da",
                                "key": "_assets/_next/static/chunks/53c13509-c58f80d1aa2e1aa0.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/53c13509-c58f80d1aa2e1aa0.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "15891d483cae1e4659f62aed1c38d9bdafdb2e8cb256f5e906eeb90bd70d3438",
                                "key": "_assets/_next/static/chunks/23-0545788ed5d9f123.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/23-0545788ed5d9f123.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "4d9aabbacd3a28a3f1f8230004330f285ef0f8d439b3683024033c1eeca5eea5",
                                "key": "_assets/_next/static/chunks/pages/_error-1be831200e60c5c0.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/pages/_error-1be831200e60c5c0.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "5240d96aa50fe25e210a030a543aa5251100809d7805ebb3090e773a24ef6c29",
                                "key": "_assets/_next/static/chunks/pages/_app-6a626577ffa902a4.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/pages/_app-6a626577ffa902a4.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "e9603dbd3d0f24e0c72c8aa558ce24e0cf0ab9d65f2e6fbc64b3d824adc7a5b1",
                                "key": "_assets/_next/static/chunks/app/page-6142099bc32a6916.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/app/page-6142099bc32a6916.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "948fe22421dd0069c8efb4b6508a891ebebcc868a79cd3f11a768b521c843fb9",
                                "key": "_assets/_next/static/chunks/app/layout-d59c75eec981e19e.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/app/layout-d59c75eec981e19e.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "cd28bf39de17970988b8eaefa1b61b1e3b74aa9c51615443538c9a2dab9bbb60",
                                "key": "_assets/_next/static/chunks/app/_not-found/page-5b78e0f153430713.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/app/_not-found/page-5b78e0f153430713.js"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "60db2391294a0b77eba3ad88b750e9b27894f3f977b831fa3ff06c0c228d37fd",
                                "key": "_assets/sync-logo.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/sync-logo.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "009960f26e5623c2c0287ac2eaaaadeab84e1723821d31b65b7d2fa9de55631a",
                                "key": "_assets/redCar.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/redCar.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/vnd.microsoft.icon",
                                "hash": "2b8ad2d33455a8f736fc3a8ebf8f0bdea8848ad4c0db48a2833bd0f9cd775932",
                                "key": "_assets/favicon.ico",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/favicon.ico"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "dc5b9c009fbebf1844594df5aa9084184eb43ae2f657d49a96028d4adfa6e88d",
                                "key": "_assets/carpooling.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/carpooling.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "31c98d6032fbd4fef20e38318941124e06293f72629d991c3731b83e2ce2efd1",
                                "key": "_assets/blue-car.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/blue-car.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "af2b0f0c2783b6d495b31bb2f6e9e9682027acebe1329e616019300292f6248b",
                                "key": "_assets/Shape.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/Shape.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "application/octet-stream",
                                "hash": "c523934d2d6ac06ab00227539d8456082ee3bb205ff0498286cbcd892dc5d77e",
                                "key": "_assets/BUILD_ID",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/BUILD_ID"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "2d3d51fb797f93d36a4d91394292927167debe72034347e6d3a0850c4c21a5b9",
                                "key": "_assets/cards_images/people.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/people.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "75f460d5f1c6f1387638eb2bca891cd8834c559f40eb7239e66a79e9ec3ea7f6",
                                "key": "_assets/cards_images/leaf.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/leaf.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "c07e16d48f34a13f55ca9a11d0055f51b32382c97ca9c0adef0eb343cd90cdd1",
                                "key": "_assets/cards_images/idea.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/idea.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "58b435018ed0d42d8619b5efc3066fa09599caf395279a0a3d10a4c178ccc6db",
                                "key": "_assets/cards_images/hand.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/hand.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "9caf5c0968d62c8b6a0b080c7648ee2f6565339a6b0dff8ee9c327c6dd224c6a",
                                "key": "_assets/cards_images/cash.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/cash.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "11a6340bf3b1b0ca2fedb8a1a2c78de7e9d294531da518afd0713bd0c7118f88",
                                "key": "_assets/cards_images/carLocation.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/carLocation.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "application/octet-stream",
                                "hash": "545ad5a7293efcb183459fec992d194f5097458240065800042a45ce989cc496",
                                "key": "_cache/jStOSCIuig8hwaL8hzL8U/index.cache",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/cache/jStOSCIuig8hwaL8hzL8U/index.cache"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "application/octet-stream",
                                "hash": "bbda825975fc61b560c1146612be1b6374046d90e7a217af0e1e6cfb3ba2d699",
                                "key": "_cache/jStOSCIuig8hwaL8hzL8U/favicon.ico.cache",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/cache/jStOSCIuig8hwaL8hzL8U/favicon.ico.cache"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "application/octet-stream",
                                "hash": "bc0d00c43c54635c8918f9a0618dc59597f32e2b1f892c053d0eeb73b26eee05",
                                "key": "_cache/jStOSCIuig8hwaL8hzL8U/_not-found.cache",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/cache/jStOSCIuig8hwaL8hzL8U/_not-found.cache"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "application/octet-stream",
                                "hash": "1d6d9c287b37ab67aa3ec680873e9a2914dd80c7abf6ac78a7c8489fa7a4be12",
                                "key": "_cache/jStOSCIuig8hwaL8hzL8U/500.cache",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/cache/jStOSCIuig8hwaL8hzL8U/500.cache"
                            }
                        ],
                        "purge": false
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.BucketFiles\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "bucketName": "sync-website-production-syncwebsiteassets-wxtuonvr",
                        "files": [
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "font/woff",
                                "hash": "e8b65928f551b17e3d67c3f709721b952c39842d14b00701f9232057fde73608",
                                "key": "_assets/_next/static/media/463dafcda517f24f-s.p.woff",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/media/463dafcda517f24f-s.p.woff"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "font/woff",
                                "hash": "296fafafd41304f7c992079054b8af914dbbd865f32de97c66d0f613b55755d6",
                                "key": "_assets/_next/static/media/4473ecc91f70f139-s.p.woff",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/media/4473ecc91f70f139-s.p.woff"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "678f6ce2cb80b1fe72fc67e7412be6e2ab6ada083111b64f7c40d35e3cba5e00",
                                "key": "_assets/_next/static/jStOSCIuig8hwaL8hzL8U/_ssgManifest.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/jStOSCIuig8hwaL8hzL8U/_ssgManifest.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "e1d1a41267d78cc06a5b5357a9cfb4c73d5b5bc71b5130ffa20ce9ec351849e0",
                                "key": "_assets/_next/static/jStOSCIuig8hwaL8hzL8U/_buildManifest.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/jStOSCIuig8hwaL8hzL8U/_buildManifest.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/css;charset=UTF-8",
                                "hash": "2bddca62bc24e7e7c056cf6836353a57ef4774b6ef84446d24348941a345bfff",
                                "key": "_assets/_next/static/css/8bc981040f61bc26.css",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/css/8bc981040f61bc26.css"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "40aaecea4eb9e103679cdd3c9522d685777586a6abbff7ab71f0a6ea175a656e",
                                "key": "_assets/_next/static/chunks/webpack-ca5508a5ffdda934.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/webpack-ca5508a5ffdda934.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "0973c1d64c88adc8e3c950410cb58b288f72118d5965b78049438deb8f2f9683",
                                "key": "_assets/_next/static/chunks/polyfills-42372ed130431b0a.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/polyfills-42372ed130431b0a.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "76d1fd876f483f7b162b0c09273dd9ff049f4ad734ba63b1b073e4bf0899d016",
                                "key": "_assets/_next/static/chunks/main-app-3a1ed74427df97e4.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/main-app-3a1ed74427df97e4.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "75638ffb4f0d0800d3e604938a1b5f8048e5b988d1fe790d5e0c0d70c67ca681",
                                "key": "_assets/_next/static/chunks/main-9b163cd436dc034a.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/main-9b163cd436dc034a.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "4250d53f0bc756ece2ddd690a008add1d7fdc887528c671f4dfe8d916d7787b7",
                                "key": "_assets/_next/static/chunks/framework-f66176bb897dc684.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/framework-f66176bb897dc684.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "71ed963804cbd4b773b16a2e290fb534288140999cca4833a8ff300a9d72a9b1",
                                "key": "_assets/_next/static/chunks/fd9d1056-3d5fd5de155f94df.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/fd9d1056-3d5fd5de155f94df.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "6c5517571814454208684a401bcb9d6eea43d4997eabe1de6e4d83070db2499d",
                                "key": "_assets/_next/static/chunks/85-1bf7c3d3f2d204a1.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/85-1bf7c3d3f2d204a1.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "81bad78002320a58642777b72ebc36fc56324adaa2930bca35ba729b5390a583",
                                "key": "_assets/_next/static/chunks/648-d76e0cd48278dcc0.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/648-d76e0cd48278dcc0.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "e6026c7e9ce107b55d62d52d295a39e06ae66ab1b15c4d3b31037864d4094a08",
                                "key": "_assets/_next/static/chunks/619edb50-a1e570e2792ef083.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/619edb50-a1e570e2792ef083.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "3b30eb46e7b29bb086349a4c4660c58b46f34f0a4465ab2adb345f82d60909da",
                                "key": "_assets/_next/static/chunks/53c13509-c58f80d1aa2e1aa0.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/53c13509-c58f80d1aa2e1aa0.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "15891d483cae1e4659f62aed1c38d9bdafdb2e8cb256f5e906eeb90bd70d3438",
                                "key": "_assets/_next/static/chunks/23-0545788ed5d9f123.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/23-0545788ed5d9f123.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "4d9aabbacd3a28a3f1f8230004330f285ef0f8d439b3683024033c1eeca5eea5",
                                "key": "_assets/_next/static/chunks/pages/_error-1be831200e60c5c0.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/pages/_error-1be831200e60c5c0.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "5240d96aa50fe25e210a030a543aa5251100809d7805ebb3090e773a24ef6c29",
                                "key": "_assets/_next/static/chunks/pages/_app-6a626577ffa902a4.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/pages/_app-6a626577ffa902a4.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "e9603dbd3d0f24e0c72c8aa558ce24e0cf0ab9d65f2e6fbc64b3d824adc7a5b1",
                                "key": "_assets/_next/static/chunks/app/page-6142099bc32a6916.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/app/page-6142099bc32a6916.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "948fe22421dd0069c8efb4b6508a891ebebcc868a79cd3f11a768b521c843fb9",
                                "key": "_assets/_next/static/chunks/app/layout-d59c75eec981e19e.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/app/layout-d59c75eec981e19e.js"
                            },
                            {
                                "cacheControl": "public,max-age=31536000,immutable",
                                "contentType": "text/javascript;charset=UTF-8",
                                "hash": "cd28bf39de17970988b8eaefa1b61b1e3b74aa9c51615443538c9a2dab9bbb60",
                                "key": "_assets/_next/static/chunks/app/_not-found/page-5b78e0f153430713.js",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/_next/static/chunks/app/_not-found/page-5b78e0f153430713.js"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "60db2391294a0b77eba3ad88b750e9b27894f3f977b831fa3ff06c0c228d37fd",
                                "key": "_assets/sync-logo.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/sync-logo.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "009960f26e5623c2c0287ac2eaaaadeab84e1723821d31b65b7d2fa9de55631a",
                                "key": "_assets/redCar.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/redCar.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/vnd.microsoft.icon",
                                "hash": "2b8ad2d33455a8f736fc3a8ebf8f0bdea8848ad4c0db48a2833bd0f9cd775932",
                                "key": "_assets/favicon.ico",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/favicon.ico"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "dc5b9c009fbebf1844594df5aa9084184eb43ae2f657d49a96028d4adfa6e88d",
                                "key": "_assets/carpooling.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/carpooling.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "31c98d6032fbd4fef20e38318941124e06293f72629d991c3731b83e2ce2efd1",
                                "key": "_assets/blue-car.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/blue-car.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "af2b0f0c2783b6d495b31bb2f6e9e9682027acebe1329e616019300292f6248b",
                                "key": "_assets/Shape.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/Shape.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "application/octet-stream",
                                "hash": "c523934d2d6ac06ab00227539d8456082ee3bb205ff0498286cbcd892dc5d77e",
                                "key": "_assets/BUILD_ID",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/BUILD_ID"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "2d3d51fb797f93d36a4d91394292927167debe72034347e6d3a0850c4c21a5b9",
                                "key": "_assets/cards_images/people.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/people.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "75f460d5f1c6f1387638eb2bca891cd8834c559f40eb7239e66a79e9ec3ea7f6",
                                "key": "_assets/cards_images/leaf.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/leaf.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "c07e16d48f34a13f55ca9a11d0055f51b32382c97ca9c0adef0eb343cd90cdd1",
                                "key": "_assets/cards_images/idea.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/idea.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "58b435018ed0d42d8619b5efc3066fa09599caf395279a0a3d10a4c178ccc6db",
                                "key": "_assets/cards_images/hand.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/hand.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "9caf5c0968d62c8b6a0b080c7648ee2f6565339a6b0dff8ee9c327c6dd224c6a",
                                "key": "_assets/cards_images/cash.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/cash.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "image/svg+xml;charset=UTF-8",
                                "hash": "11a6340bf3b1b0ca2fedb8a1a2c78de7e9d294531da518afd0713bd0c7118f88",
                                "key": "_assets/cards_images/carLocation.svg",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/assets/cards_images/carLocation.svg"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "application/octet-stream",
                                "hash": "545ad5a7293efcb183459fec992d194f5097458240065800042a45ce989cc496",
                                "key": "_cache/jStOSCIuig8hwaL8hzL8U/index.cache",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/cache/jStOSCIuig8hwaL8hzL8U/index.cache"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "application/octet-stream",
                                "hash": "bbda825975fc61b560c1146612be1b6374046d90e7a217af0e1e6cfb3ba2d699",
                                "key": "_cache/jStOSCIuig8hwaL8hzL8U/favicon.ico.cache",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/cache/jStOSCIuig8hwaL8hzL8U/favicon.ico.cache"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "application/octet-stream",
                                "hash": "bc0d00c43c54635c8918f9a0618dc59597f32e2b1f892c053d0eeb73b26eee05",
                                "key": "_cache/jStOSCIuig8hwaL8hzL8U/_not-found.cache",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/cache/jStOSCIuig8hwaL8hzL8U/_not-found.cache"
                            },
                            {
                                "cacheControl": "public,max-age=0,s-maxage=86400,stale-while-revalidate=86400",
                                "contentType": "application/octet-stream",
                                "hash": "1d6d9c287b37ab67aa3ec680873e9a2914dd80c7abf6ac78a7c8489fa7a4be12",
                                "key": "_cache/jStOSCIuig8hwaL8hzL8U/500.cache",
                                "source": "/Users/rupeshshandilya/Desktop/test/Sync-Website/.open-next/cache/jStOSCIuig8hwaL8hzL8U/500.cache"
                            }
                        ]
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:pulumi-nodejs::default::031e252e-e32c-444a-a2e0-219cfd2e9d69",
                    "propertyDependencies": {
                        "__provider": [],
                        "bucketName": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket"
                        ],
                        "files": [],
                        "purge": []
                    },
                    "created": "2024-10-06T16:18:18.55856Z",
                    "modified": "2024-10-06T16:27:16.734281Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/providers/bucket-files.ts#24,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN::SyncWebsiteCdn",
                    "custom": false,
                    "type": "sst:aws:CDN",
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs::SyncWebsite",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$pulumi-nodejs:dynamic:Resource::SyncWebsiteAssetFiles.sst.aws.BucketFiles"
                    ],
                    "created": "2024-10-06T16:18:18.597534Z",
                    "modified": "2024-10-06T16:18:18.597534Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/cdn.ts#352,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate::SyncWebsiteCdnSsl",
                    "custom": false,
                    "type": "sst:aws:Certificate",
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN::SyncWebsiteCdn",
                    "created": "2024-10-06T16:18:18.61743Z",
                    "modified": "2024-10-06T16:18:18.61743Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/dns-validated-certificate.ts#35,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificate:Certificate::SyncWebsiteCdnSslCertificate",
                    "custom": true,
                    "id": "arn:aws:acm:us-east-1:831926620158:certificate/ae834c06-9506-4f93-9a7c-4f58786655c3",
                    "type": "aws:acm/certificate:Certificate",
                    "inputs": {
                        "__defaults": [],
                        "domainName": "sync.getsync.tech",
                        "subjectAlternativeNames": [],
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "validationMethod": "DNS"
                    },
                    "outputs": {
                        "arn": "arn:aws:acm:us-east-1:831926620158:certificate/ae834c06-9506-4f93-9a7c-4f58786655c3",
                        "certificateAuthorityArn": "",
                        "certificateBody": null,
                        "certificateChain": null,
                        "domainName": "sync.getsync.tech",
                        "domainValidationOptions": [
                            {
                                "domainName": "sync.getsync.tech",
                                "resourceRecordName": "_a0304c7881b136a8af6e652e502b5df1.sync.getsync.tech.",
                                "resourceRecordType": "CNAME",
                                "resourceRecordValue": "_77db1dfca5ba1f3c7841c4a988122e4b.djqtsrsxkq.acm-validations.aws."
                            }
                        ],
                        "earlyRenewalDuration": "",
                        "id": "arn:aws:acm:us-east-1:831926620158:certificate/ae834c06-9506-4f93-9a7c-4f58786655c3",
                        "keyAlgorithm": "RSA_2048",
                        "notAfter": "",
                        "notBefore": "",
                        "options": {
                            "certificateTransparencyLoggingPreference": "ENABLED"
                        },
                        "pendingRenewal": false,
                        "privateKey": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "v1:i7bDi+W6n4TPtB85:1BeWGPbp6Lp417LrOBYLU6P2N+U="
                        },
                        "renewalEligibility": "INELIGIBLE",
                        "renewalSummaries": [],
                        "status": "PENDING_VALIDATION",
                        "subjectAlternativeNames": [
                            "sync.getsync.tech"
                        ],
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "type": "AMAZON_ISSUED",
                        "validationEmails": [],
                        "validationMethod": "DNS",
                        "validationOptions": []
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate::SyncWebsiteCdnSsl",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::AwsProvider.sst.us-east-1::44740f8a-e11d-44fb-b91d-6b31880a0989",
                    "propertyDependencies": {
                        "domainName": [],
                        "subjectAlternativeNames": [],
                        "validationMethod": []
                    },
                    "additionalSecretOutputs": [
                        "privateKey"
                    ],
                    "created": "2024-10-06T16:18:26.15077Z",
                    "modified": "2024-10-06T16:18:26.15077Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/dns-validated-certificate.ts#45,14"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$pulumi-nodejs:dynamic:Resource::SyncWebsiteCdnSslCNAMEZoneLookupA0304c7881b136a8af6e652e502b5df1syncgetsynctech.sst.aws.HostedZoneLookup",
                    "custom": true,
                    "id": "Z00536101FTAQ0OC4U48I",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.HostedZoneLookup\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "domain": "_a0304c7881b136a8af6e652e502b5df1.sync.getsync.tech"
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.HostedZoneLookup\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "zoneId": "Z00536101FTAQ0OC4U48I"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate::SyncWebsiteCdnSsl",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:pulumi-nodejs::default::031e252e-e32c-444a-a2e0-219cfd2e9d69",
                    "propertyDependencies": {
                        "__provider": [],
                        "domain": []
                    },
                    "created": "2024-10-06T16:18:27.502093Z",
                    "modified": "2024-10-06T16:18:27.502093Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/providers/hosted-zone-lookup.ts#18,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:route53/record:Record::SyncWebsiteCdnSslCNAMERecordA0304c7881b136a8af6e652e502b5df1syncgetsynctech",
                    "custom": true,
                    "id": "Z00536101FTAQ0OC4U48I__a0304c7881b136a8af6e652e502b5df1.sync.getsync.tech._CNAME",
                    "type": "aws:route53/record:Record",
                    "inputs": {
                        "__defaults": [],
                        "name": "_a0304c7881b136a8af6e652e502b5df1.sync.getsync.tech.",
                        "records": [
                            "_77db1dfca5ba1f3c7841c4a988122e4b.djqtsrsxkq.acm-validations.aws."
                        ],
                        "ttl": 60,
                        "type": "CNAME",
                        "zoneId": "Z00536101FTAQ0OC4U48I"
                    },
                    "outputs": {
                        "__meta": "{\"schema_version\":\"2\"}",
                        "aliases": [],
                        "allowOverwrite": null,
                        "cidrRoutingPolicy": null,
                        "failoverRoutingPolicies": [],
                        "fqdn": "_a0304c7881b136a8af6e652e502b5df1.sync.getsync.tech",
                        "geolocationRoutingPolicies": [],
                        "geoproximityRoutingPolicy": null,
                        "healthCheckId": "",
                        "id": "Z00536101FTAQ0OC4U48I__a0304c7881b136a8af6e652e502b5df1.sync.getsync.tech._CNAME",
                        "latencyRoutingPolicies": [],
                        "multivalueAnswerRoutingPolicy": false,
                        "name": "_a0304c7881b136a8af6e652e502b5df1.sync.getsync.tech",
                        "records": [
                            "_77db1dfca5ba1f3c7841c4a988122e4b.djqtsrsxkq.acm-validations.aws."
                        ],
                        "setIdentifier": "",
                        "ttl": 60,
                        "type": "CNAME",
                        "weightedRoutingPolicies": [],
                        "zoneId": "Z00536101FTAQ0OC4U48I"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate::SyncWebsiteCdnSsl",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$pulumi-nodejs:dynamic:Resource::SyncWebsiteCdnSslCNAMEZoneLookupA0304c7881b136a8af6e652e502b5df1syncgetsynctech.sst.aws.HostedZoneLookup"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::AwsProvider.sst.us-east-1::44740f8a-e11d-44fb-b91d-6b31880a0989",
                    "propertyDependencies": {
                        "name": [],
                        "records": [],
                        "ttl": [],
                        "type": [],
                        "zoneId": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$pulumi-nodejs:dynamic:Resource::SyncWebsiteCdnSslCNAMEZoneLookupA0304c7881b136a8af6e652e502b5df1syncgetsynctech.sst.aws.HostedZoneLookup"
                        ]
                    },
                    "created": "2024-10-06T16:19:09.723833Z",
                    "modified": "2024-10-06T16:19:09.723833Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/dns.ts#192,16"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificateValidation:CertificateValidation::SyncWebsiteCdnSslValidation",
                    "custom": true,
                    "id": "2024-10-06 16:18:35.471 +0000 UTC",
                    "type": "aws:acm/certificateValidation:CertificateValidation",
                    "inputs": {
                        "__defaults": [],
                        "certificateArn": "arn:aws:acm:us-east-1:831926620158:certificate/ae834c06-9506-4f93-9a7c-4f58786655c3"
                    },
                    "outputs": {
                        "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":4500000000000}}",
                        "certificateArn": "arn:aws:acm:us-east-1:831926620158:certificate/ae834c06-9506-4f93-9a7c-4f58786655c3",
                        "id": "2024-10-06 16:18:35.471 +0000 UTC",
                        "validationRecordFqdns": null
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate::SyncWebsiteCdnSsl",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:route53/record:Record::SyncWebsiteCdnSslCNAMERecordA0304c7881b136a8af6e652e502b5df1syncgetsynctech",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificate:Certificate::SyncWebsiteCdnSslCertificate"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::AwsProvider.sst.us-east-1::44740f8a-e11d-44fb-b91d-6b31880a0989",
                    "propertyDependencies": {
                        "certificateArn": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificate:Certificate::SyncWebsiteCdnSslCertificate"
                        ]
                    },
                    "created": "2024-10-06T16:19:11.391496Z",
                    "modified": "2024-10-06T16:19:11.391496Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/dns-validated-certificate.ts#85,14"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$aws:cloudfront/distribution:Distribution::SyncWebsiteCdnDistribution",
                    "custom": true,
                    "id": "E3D56K9WH6VSJL",
                    "type": "aws:cloudfront/distribution:Distribution",
                    "inputs": {
                        "__defaults": [
                            "httpVersion",
                            "isIpv6Enabled",
                            "priceClass",
                            "retainOnDelete",
                            "staging"
                        ],
                        "aliases": [
                            "sync.getsync.tech"
                        ],
                        "comment": "SyncWebsite app",
                        "defaultCacheBehavior": {
                            "__defaults": [
                                "minTtl"
                            ],
                            "allowedMethods": [
                                "DELETE",
                                "GET",
                                "HEAD",
                                "OPTIONS",
                                "PATCH",
                                "POST",
                                "PUT"
                            ],
                            "cachePolicyId": "14df8992-f74d-4c7c-9a7f-eb21cec26da4",
                            "cachedMethods": [
                                "GET",
                                "HEAD"
                            ],
                            "compress": true,
                            "functionAssociations": [
                                {
                                    "__defaults": [],
                                    "eventType": "viewer-request",
                                    "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                }
                            ],
                            "lambdaFunctionAssociations": [],
                            "minTtl": 0,
                            "originRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
                            "targetOriginId": "default",
                            "viewerProtocolPolicy": "redirect-to-https"
                        },
                        "defaultRootObject": "",
                        "enabled": true,
                        "httpVersion": "http2",
                        "isIpv6Enabled": false,
                        "orderedCacheBehaviors": [
                            {
                                "__defaults": [
                                    "minTtl"
                                ],
                                "allowedMethods": [
                                    "DELETE",
                                    "GET",
                                    "HEAD",
                                    "OPTIONS",
                                    "PATCH",
                                    "POST",
                                    "PUT"
                                ],
                                "cachePolicyId": "14df8992-f74d-4c7c-9a7f-eb21cec26da4",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "functionAssociations": [
                                    {
                                        "__defaults": [],
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "minTtl": 0,
                                "originRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
                                "pathPattern": "_next/image*",
                                "targetOriginId": "imageOptimizer",
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "__defaults": [
                                    "minTtl"
                                ],
                                "allowedMethods": [
                                    "DELETE",
                                    "GET",
                                    "HEAD",
                                    "OPTIONS",
                                    "PATCH",
                                    "POST",
                                    "PUT"
                                ],
                                "cachePolicyId": "14df8992-f74d-4c7c-9a7f-eb21cec26da4",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "functionAssociations": [
                                    {
                                        "__defaults": [],
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "minTtl": 0,
                                "originRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
                                "pathPattern": "_next/data/*",
                                "targetOriginId": "default",
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "__defaults": [
                                    "minTtl"
                                ],
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "functionAssociations": [
                                    {
                                        "__defaults": [],
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "minTtl": 0,
                                "pathPattern": "BUILD_ID",
                                "targetOriginId": "s3",
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "__defaults": [
                                    "minTtl"
                                ],
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "functionAssociations": [
                                    {
                                        "__defaults": [],
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "minTtl": 0,
                                "pathPattern": "Shape.svg",
                                "targetOriginId": "s3",
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "__defaults": [
                                    "minTtl"
                                ],
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "functionAssociations": [
                                    {
                                        "__defaults": [],
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "minTtl": 0,
                                "pathPattern": "_next/*",
                                "targetOriginId": "s3",
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "__defaults": [
                                    "minTtl"
                                ],
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "functionAssociations": [
                                    {
                                        "__defaults": [],
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "minTtl": 0,
                                "pathPattern": "blue-car.svg",
                                "targetOriginId": "s3",
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "__defaults": [
                                    "minTtl"
                                ],
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "functionAssociations": [
                                    {
                                        "__defaults": [],
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "minTtl": 0,
                                "pathPattern": "cards_images/*",
                                "targetOriginId": "s3",
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "__defaults": [
                                    "minTtl"
                                ],
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "functionAssociations": [
                                    {
                                        "__defaults": [],
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "minTtl": 0,
                                "pathPattern": "carpooling.svg",
                                "targetOriginId": "s3",
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "__defaults": [
                                    "minTtl"
                                ],
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "functionAssociations": [
                                    {
                                        "__defaults": [],
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "minTtl": 0,
                                "pathPattern": "favicon.ico",
                                "targetOriginId": "s3",
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "__defaults": [
                                    "minTtl"
                                ],
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "functionAssociations": [
                                    {
                                        "__defaults": [],
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "minTtl": 0,
                                "pathPattern": "redCar.svg",
                                "targetOriginId": "s3",
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "__defaults": [
                                    "minTtl"
                                ],
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "functionAssociations": [
                                    {
                                        "__defaults": [],
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "minTtl": 0,
                                "pathPattern": "sync-logo.svg",
                                "targetOriginId": "s3",
                                "viewerProtocolPolicy": "redirect-to-https"
                            }
                        ],
                        "originGroups": [],
                        "origins": [
                            {
                                "__defaults": [
                                    "connectionAttempts",
                                    "connectionTimeout"
                                ],
                                "connectionAttempts": 3,
                                "connectionTimeout": 10,
                                "domainName": "sync-website-production-syncwebsiteassets-wxtuonvr.s3.us-east-1.amazonaws.com",
                                "originAccessControlId": "E3OKGWTGO2XAR9",
                                "originId": "s3",
                                "originPath": "/_assets"
                            },
                            {
                                "__defaults": [
                                    "connectionAttempts",
                                    "connectionTimeout",
                                    "originPath"
                                ],
                                "connectionAttempts": 3,
                                "connectionTimeout": 10,
                                "customOriginConfig": {
                                    "__defaults": [
                                        "originKeepaliveTimeout"
                                    ],
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "originKeepaliveTimeout": 5,
                                    "originProtocolPolicy": "https-only",
                                    "originReadTimeout": 20,
                                    "originSslProtocols": [
                                        "TLSv1.2"
                                    ]
                                },
                                "domainName": "cfmzvcmudlkiahccm5dhgu2ke40hdhfz.lambda-url.us-east-1.on.aws",
                                "originId": "imageOptimizer",
                                "originPath": ""
                            },
                            {
                                "__defaults": [
                                    "connectionAttempts",
                                    "connectionTimeout",
                                    "originPath"
                                ],
                                "connectionAttempts": 3,
                                "connectionTimeout": 10,
                                "customOriginConfig": {
                                    "__defaults": [
                                        "originKeepaliveTimeout"
                                    ],
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "originKeepaliveTimeout": 5,
                                    "originProtocolPolicy": "https-only",
                                    "originReadTimeout": 20,
                                    "originSslProtocols": [
                                        "TLSv1.2"
                                    ]
                                },
                                "domainName": "3yrlbriscgxzrelw4226upj3ra0gzadn.lambda-url.us-east-1.on.aws",
                                "originId": "default",
                                "originPath": ""
                            }
                        ],
                        "priceClass": "PriceClass_All",
                        "restrictions": {
                            "__defaults": [],
                            "geoRestriction": {
                                "__defaults": [],
                                "restrictionType": "none"
                            }
                        },
                        "retainOnDelete": false,
                        "staging": false,
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "viewerCertificate": {
                            "__defaults": [],
                            "acmCertificateArn": "arn:aws:acm:us-east-1:831926620158:certificate/ae834c06-9506-4f93-9a7c-4f58786655c3",
                            "minimumProtocolVersion": "TLSv1.2_2021",
                            "sslSupportMethod": "sni-only"
                        },
                        "waitForDeployment": false
                    },
                    "outputs": {
                        "__meta": "{\"schema_version\":\"1\"}",
                        "aliases": [
                            "sync.getsync.tech"
                        ],
                        "arn": "arn:aws:cloudfront::831926620158:distribution/E3D56K9WH6VSJL",
                        "callerReference": "terraform-20241006161911496900000001",
                        "comment": "SyncWebsite app",
                        "continuousDeploymentPolicyId": "",
                        "customErrorResponses": [],
                        "defaultCacheBehavior": {
                            "allowedMethods": [
                                "DELETE",
                                "GET",
                                "HEAD",
                                "OPTIONS",
                                "PATCH",
                                "POST",
                                "PUT"
                            ],
                            "cachePolicyId": "14df8992-f74d-4c7c-9a7f-eb21cec26da4",
                            "cachedMethods": [
                                "GET",
                                "HEAD"
                            ],
                            "compress": true,
                            "defaultTtl": 0,
                            "fieldLevelEncryptionId": "",
                            "forwardedValues": null,
                            "functionAssociations": [
                                {
                                    "eventType": "viewer-request",
                                    "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                }
                            ],
                            "lambdaFunctionAssociations": [],
                            "maxTtl": 0,
                            "minTtl": 0,
                            "originRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
                            "realtimeLogConfigArn": "",
                            "responseHeadersPolicyId": "",
                            "smoothStreaming": false,
                            "targetOriginId": "default",
                            "trustedKeyGroups": [],
                            "trustedSigners": [],
                            "viewerProtocolPolicy": "redirect-to-https"
                        },
                        "defaultRootObject": "",
                        "domainName": "d31dufqmbkxugn.cloudfront.net",
                        "enabled": true,
                        "etag": "E2QN1Q82HMEVD1",
                        "hostedZoneId": "Z2FDTNDATAQYW2",
                        "httpVersion": "http2",
                        "id": "E3D56K9WH6VSJL",
                        "inProgressValidationBatches": 0,
                        "isIpv6Enabled": false,
                        "lastModifiedTime": "2024-10-06 16:19:12.886 +0000 UTC",
                        "loggingConfig": null,
                        "orderedCacheBehaviors": [
                            {
                                "allowedMethods": [
                                    "DELETE",
                                    "GET",
                                    "HEAD",
                                    "OPTIONS",
                                    "PATCH",
                                    "POST",
                                    "PUT"
                                ],
                                "cachePolicyId": "14df8992-f74d-4c7c-9a7f-eb21cec26da4",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "defaultTtl": 0,
                                "fieldLevelEncryptionId": "",
                                "forwardedValues": null,
                                "functionAssociations": [
                                    {
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "maxTtl": 0,
                                "minTtl": 0,
                                "originRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
                                "pathPattern": "_next/image*",
                                "realtimeLogConfigArn": "",
                                "responseHeadersPolicyId": "",
                                "smoothStreaming": false,
                                "targetOriginId": "imageOptimizer",
                                "trustedKeyGroups": null,
                                "trustedSigners": null,
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "allowedMethods": [
                                    "DELETE",
                                    "GET",
                                    "HEAD",
                                    "OPTIONS",
                                    "PATCH",
                                    "POST",
                                    "PUT"
                                ],
                                "cachePolicyId": "14df8992-f74d-4c7c-9a7f-eb21cec26da4",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "defaultTtl": 0,
                                "fieldLevelEncryptionId": "",
                                "forwardedValues": null,
                                "functionAssociations": [
                                    {
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "maxTtl": 0,
                                "minTtl": 0,
                                "originRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
                                "pathPattern": "_next/data/*",
                                "realtimeLogConfigArn": "",
                                "responseHeadersPolicyId": "",
                                "smoothStreaming": false,
                                "targetOriginId": "default",
                                "trustedKeyGroups": null,
                                "trustedSigners": null,
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "defaultTtl": 0,
                                "fieldLevelEncryptionId": "",
                                "forwardedValues": null,
                                "functionAssociations": [
                                    {
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "maxTtl": 0,
                                "minTtl": 0,
                                "originRequestPolicyId": "",
                                "pathPattern": "BUILD_ID",
                                "realtimeLogConfigArn": "",
                                "responseHeadersPolicyId": "",
                                "smoothStreaming": false,
                                "targetOriginId": "s3",
                                "trustedKeyGroups": null,
                                "trustedSigners": null,
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "defaultTtl": 0,
                                "fieldLevelEncryptionId": "",
                                "forwardedValues": null,
                                "functionAssociations": [
                                    {
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "maxTtl": 0,
                                "minTtl": 0,
                                "originRequestPolicyId": "",
                                "pathPattern": "Shape.svg",
                                "realtimeLogConfigArn": "",
                                "responseHeadersPolicyId": "",
                                "smoothStreaming": false,
                                "targetOriginId": "s3",
                                "trustedKeyGroups": null,
                                "trustedSigners": null,
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "defaultTtl": 0,
                                "fieldLevelEncryptionId": "",
                                "forwardedValues": null,
                                "functionAssociations": [
                                    {
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "maxTtl": 0,
                                "minTtl": 0,
                                "originRequestPolicyId": "",
                                "pathPattern": "_next/*",
                                "realtimeLogConfigArn": "",
                                "responseHeadersPolicyId": "",
                                "smoothStreaming": false,
                                "targetOriginId": "s3",
                                "trustedKeyGroups": null,
                                "trustedSigners": null,
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "defaultTtl": 0,
                                "fieldLevelEncryptionId": "",
                                "forwardedValues": null,
                                "functionAssociations": [
                                    {
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "maxTtl": 0,
                                "minTtl": 0,
                                "originRequestPolicyId": "",
                                "pathPattern": "blue-car.svg",
                                "realtimeLogConfigArn": "",
                                "responseHeadersPolicyId": "",
                                "smoothStreaming": false,
                                "targetOriginId": "s3",
                                "trustedKeyGroups": null,
                                "trustedSigners": null,
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "defaultTtl": 0,
                                "fieldLevelEncryptionId": "",
                                "forwardedValues": null,
                                "functionAssociations": [
                                    {
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "maxTtl": 0,
                                "minTtl": 0,
                                "originRequestPolicyId": "",
                                "pathPattern": "cards_images/*",
                                "realtimeLogConfigArn": "",
                                "responseHeadersPolicyId": "",
                                "smoothStreaming": false,
                                "targetOriginId": "s3",
                                "trustedKeyGroups": null,
                                "trustedSigners": null,
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "defaultTtl": 0,
                                "fieldLevelEncryptionId": "",
                                "forwardedValues": null,
                                "functionAssociations": [
                                    {
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "maxTtl": 0,
                                "minTtl": 0,
                                "originRequestPolicyId": "",
                                "pathPattern": "carpooling.svg",
                                "realtimeLogConfigArn": "",
                                "responseHeadersPolicyId": "",
                                "smoothStreaming": false,
                                "targetOriginId": "s3",
                                "trustedKeyGroups": null,
                                "trustedSigners": null,
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "defaultTtl": 0,
                                "fieldLevelEncryptionId": "",
                                "forwardedValues": null,
                                "functionAssociations": [
                                    {
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "maxTtl": 0,
                                "minTtl": 0,
                                "originRequestPolicyId": "",
                                "pathPattern": "favicon.ico",
                                "realtimeLogConfigArn": "",
                                "responseHeadersPolicyId": "",
                                "smoothStreaming": false,
                                "targetOriginId": "s3",
                                "trustedKeyGroups": null,
                                "trustedSigners": null,
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "defaultTtl": 0,
                                "fieldLevelEncryptionId": "",
                                "forwardedValues": null,
                                "functionAssociations": [
                                    {
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "maxTtl": 0,
                                "minTtl": 0,
                                "originRequestPolicyId": "",
                                "pathPattern": "redCar.svg",
                                "realtimeLogConfigArn": "",
                                "responseHeadersPolicyId": "",
                                "smoothStreaming": false,
                                "targetOriginId": "s3",
                                "trustedKeyGroups": null,
                                "trustedSigners": null,
                                "viewerProtocolPolicy": "redirect-to-https"
                            },
                            {
                                "allowedMethods": [
                                    "GET",
                                    "HEAD",
                                    "OPTIONS"
                                ],
                                "cachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                                "cachedMethods": [
                                    "GET",
                                    "HEAD"
                                ],
                                "compress": true,
                                "defaultTtl": 0,
                                "fieldLevelEncryptionId": "",
                                "forwardedValues": null,
                                "functionAssociations": [
                                    {
                                        "eventType": "viewer-request",
                                        "functionArn": "arn:aws:cloudfront::831926620158:function/sync-we-production-SyncWebsiteCloudfrontFunctionServerCfFunction"
                                    }
                                ],
                                "lambdaFunctionAssociations": [],
                                "maxTtl": 0,
                                "minTtl": 0,
                                "originRequestPolicyId": "",
                                "pathPattern": "sync-logo.svg",
                                "realtimeLogConfigArn": "",
                                "responseHeadersPolicyId": "",
                                "smoothStreaming": false,
                                "targetOriginId": "s3",
                                "trustedKeyGroups": null,
                                "trustedSigners": null,
                                "viewerProtocolPolicy": "redirect-to-https"
                            }
                        ],
                        "originGroups": [],
                        "origins": [
                            {
                                "connectionAttempts": 3,
                                "connectionTimeout": 10,
                                "customHeaders": [],
                                "customOriginConfig": {
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "originKeepaliveTimeout": 5,
                                    "originProtocolPolicy": "https-only",
                                    "originReadTimeout": 20,
                                    "originSslProtocols": [
                                        "TLSv1.2"
                                    ]
                                },
                                "domainName": "3yrlbriscgxzrelw4226upj3ra0gzadn.lambda-url.us-east-1.on.aws",
                                "originAccessControlId": "",
                                "originId": "default",
                                "originPath": "",
                                "originShield": null,
                                "s3OriginConfig": null
                            },
                            {
                                "connectionAttempts": 3,
                                "connectionTimeout": 10,
                                "customHeaders": [],
                                "customOriginConfig": {
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "originKeepaliveTimeout": 5,
                                    "originProtocolPolicy": "https-only",
                                    "originReadTimeout": 20,
                                    "originSslProtocols": [
                                        "TLSv1.2"
                                    ]
                                },
                                "domainName": "cfmzvcmudlkiahccm5dhgu2ke40hdhfz.lambda-url.us-east-1.on.aws",
                                "originAccessControlId": "",
                                "originId": "imageOptimizer",
                                "originPath": "",
                                "originShield": null,
                                "s3OriginConfig": null
                            },
                            {
                                "connectionAttempts": 3,
                                "connectionTimeout": 10,
                                "customHeaders": [],
                                "customOriginConfig": null,
                                "domainName": "sync-website-production-syncwebsiteassets-wxtuonvr.s3.us-east-1.amazonaws.com",
                                "originAccessControlId": "E3OKGWTGO2XAR9",
                                "originId": "s3",
                                "originPath": "/_assets",
                                "originShield": null,
                                "s3OriginConfig": null
                            }
                        ],
                        "priceClass": "PriceClass_All",
                        "restrictions": {
                            "geoRestriction": {
                                "locations": [],
                                "restrictionType": "none"
                            }
                        },
                        "retainOnDelete": false,
                        "staging": false,
                        "status": "InProgress",
                        "tags": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "tagsAll": {
                            "sst:app": "sync-website",
                            "sst:stage": "production"
                        },
                        "trustedKeyGroups": [
                            {
                                "enabled": false,
                                "items": []
                            }
                        ],
                        "trustedSigners": [
                            {
                                "enabled": false,
                                "items": []
                            }
                        ],
                        "viewerCertificate": {
                            "acmCertificateArn": "arn:aws:acm:us-east-1:831926620158:certificate/ae834c06-9506-4f93-9a7c-4f58786655c3",
                            "cloudfrontDefaultCertificate": false,
                            "iamCertificateId": "",
                            "minimumProtocolVersion": "TLSv1.2_2021",
                            "sslSupportMethod": "sni-only"
                        },
                        "waitForDeployment": false,
                        "webAclId": ""
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN::SyncWebsiteCdn",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$pulumi-nodejs:dynamic:Resource::SyncWebsiteS3AccessControl.sst.aws.OriginAccessControl",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/functionUrl:FunctionUrl::SyncWebsiteImageOptimizerUrl",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/functionUrl:FunctionUrl::SyncWebsiteDefaultUrl",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificateValidation:CertificateValidation::SyncWebsiteCdnSslValidation",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:cloudfront/cachePolicy:CachePolicy::SyncWebsiteServerCachePolicy",
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:cloudfront/function:Function::SyncWebsiteCloudfrontFunctionServerCfFunction"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "aliases": [],
                        "comment": [],
                        "defaultCacheBehavior": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:cloudfront/cachePolicy:CachePolicy::SyncWebsiteServerCachePolicy",
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:cloudfront/function:Function::SyncWebsiteCloudfrontFunctionServerCfFunction"
                        ],
                        "defaultRootObject": [],
                        "enabled": [],
                        "orderedCacheBehaviors": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:cloudfront/cachePolicy:CachePolicy::SyncWebsiteServerCachePolicy",
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$aws:cloudfront/function:Function::SyncWebsiteCloudfrontFunctionServerCfFunction"
                        ],
                        "originGroups": [],
                        "origins": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$pulumi-nodejs:dynamic:Resource::SyncWebsiteS3AccessControl.sst.aws.OriginAccessControl",
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/functionUrl:FunctionUrl::SyncWebsiteImageOptimizerUrl",
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Function$aws:lambda/functionUrl:FunctionUrl::SyncWebsiteDefaultUrl",
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:Bucket$aws:s3/bucketV2:BucketV2::SyncWebsiteAssetsBucket"
                        ],
                        "restrictions": [],
                        "viewerCertificate": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificateValidation:CertificateValidation::SyncWebsiteCdnSslValidation"
                        ],
                        "waitForDeployment": []
                    },
                    "created": "2024-10-06T16:19:15.034376Z",
                    "modified": "2024-10-06T16:19:15.034376Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/cdn.ts#432,14"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$pulumi-nodejs:dynamic:Resource::SyncWebsiteCdnAAAAZoneLookupSyncgetsynctech.sst.aws.HostedZoneLookup",
                    "custom": true,
                    "id": "Z00536101FTAQ0OC4U48I",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.HostedZoneLookup\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "domain": "sync.getsync.tech"
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.HostedZoneLookup\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "zoneId": "Z00536101FTAQ0OC4U48I"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN::SyncWebsiteCdn",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:pulumi-nodejs::default::031e252e-e32c-444a-a2e0-219cfd2e9d69",
                    "propertyDependencies": {
                        "__provider": [],
                        "domain": []
                    },
                    "created": "2024-10-06T16:19:16.140933Z",
                    "modified": "2024-10-06T16:19:16.140933Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/providers/hosted-zone-lookup.ts#18,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$pulumi-nodejs:dynamic:Resource::SyncWebsiteCdnAZoneLookupSyncgetsynctech.sst.aws.HostedZoneLookup",
                    "custom": true,
                    "id": "Z00536101FTAQ0OC4U48I",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.HostedZoneLookup\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "domain": "sync.getsync.tech"
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.HostedZoneLookup\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "zoneId": "Z00536101FTAQ0OC4U48I"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN::SyncWebsiteCdn",
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:pulumi-nodejs::default::031e252e-e32c-444a-a2e0-219cfd2e9d69",
                    "propertyDependencies": {
                        "__provider": [],
                        "domain": []
                    },
                    "created": "2024-10-06T16:19:16.154907Z",
                    "modified": "2024-10-06T16:19:16.154907Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/providers/hosted-zone-lookup.ts#18,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$pulumi-nodejs:dynamic:Resource::SyncWebsiteCdnWaiter.sst.aws.DistributionDeploymentWaiter",
                    "custom": true,
                    "id": "waiter",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.DistributionDeploymentWaiter\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "distributionId": "E3D56K9WH6VSJL",
                        "etag": "E2QN1Q82HMEVD1",
                        "wait": true
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.DistributionDeploymentWaiter\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "isDone": true
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN::SyncWebsiteCdn",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$aws:cloudfront/distribution:Distribution::SyncWebsiteCdnDistribution"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:pulumi-nodejs::default::031e252e-e32c-444a-a2e0-219cfd2e9d69",
                    "propertyDependencies": {
                        "__provider": [],
                        "distributionId": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$aws:cloudfront/distribution:Distribution::SyncWebsiteCdnDistribution"
                        ],
                        "etag": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$aws:cloudfront/distribution:Distribution::SyncWebsiteCdnDistribution"
                        ],
                        "wait": []
                    },
                    "created": "2024-10-06T16:23:12.433898Z",
                    "modified": "2024-10-06T16:23:12.433898Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/providers/distribution-deployment-waiter.ts#20,5"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$aws:route53/record:Record::SyncWebsiteCdnAAAARecordSyncgetsynctech",
                    "custom": true,
                    "id": "Z00536101FTAQ0OC4U48I_sync.getsync.tech_AAAA",
                    "type": "aws:route53/record:Record",
                    "inputs": {
                        "__defaults": [],
                        "aliases": [
                            {
                                "__defaults": [],
                                "evaluateTargetHealth": true,
                                "name": "d31dufqmbkxugn.cloudfront.net",
                                "zoneId": "Z2FDTNDATAQYW2"
                            }
                        ],
                        "name": "sync.getsync.tech",
                        "type": "AAAA",
                        "zoneId": "Z00536101FTAQ0OC4U48I"
                    },
                    "outputs": {
                        "__meta": "{\"schema_version\":\"2\"}",
                        "aliases": [
                            {
                                "evaluateTargetHealth": true,
                                "name": "d31dufqmbkxugn.cloudfront.net",
                                "zoneId": "Z2FDTNDATAQYW2"
                            }
                        ],
                        "allowOverwrite": null,
                        "cidrRoutingPolicy": null,
                        "failoverRoutingPolicies": [],
                        "fqdn": "sync.getsync.tech",
                        "geolocationRoutingPolicies": [],
                        "geoproximityRoutingPolicy": null,
                        "healthCheckId": "",
                        "id": "Z00536101FTAQ0OC4U48I_sync.getsync.tech_AAAA",
                        "latencyRoutingPolicies": [],
                        "multivalueAnswerRoutingPolicy": false,
                        "name": "sync.getsync.tech",
                        "records": null,
                        "setIdentifier": "",
                        "ttl": 0,
                        "type": "AAAA",
                        "weightedRoutingPolicies": [],
                        "zoneId": "Z00536101FTAQ0OC4U48I"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN::SyncWebsiteCdn",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$pulumi-nodejs:dynamic:Resource::SyncWebsiteCdnAAAAZoneLookupSyncgetsynctech.sst.aws.HostedZoneLookup"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "aliases": [],
                        "name": [],
                        "type": [],
                        "zoneId": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$pulumi-nodejs:dynamic:Resource::SyncWebsiteCdnAAAAZoneLookupSyncgetsynctech.sst.aws.HostedZoneLookup"
                        ]
                    },
                    "created": "2024-10-06T16:20:00.234676Z",
                    "modified": "2024-10-06T16:20:00.234676Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/dns.ts#192,16"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$aws:route53/record:Record::SyncWebsiteCdnARecordSyncgetsynctech",
                    "custom": true,
                    "id": "Z00536101FTAQ0OC4U48I_sync.getsync.tech_A",
                    "type": "aws:route53/record:Record",
                    "inputs": {
                        "__defaults": [],
                        "aliases": [
                            {
                                "__defaults": [],
                                "evaluateTargetHealth": true,
                                "name": "d31dufqmbkxugn.cloudfront.net",
                                "zoneId": "Z2FDTNDATAQYW2"
                            }
                        ],
                        "name": "sync.getsync.tech",
                        "type": "A",
                        "zoneId": "Z00536101FTAQ0OC4U48I"
                    },
                    "outputs": {
                        "__meta": "{\"schema_version\":\"2\"}",
                        "aliases": [
                            {
                                "evaluateTargetHealth": true,
                                "name": "d31dufqmbkxugn.cloudfront.net",
                                "zoneId": "Z2FDTNDATAQYW2"
                            }
                        ],
                        "allowOverwrite": null,
                        "cidrRoutingPolicy": null,
                        "failoverRoutingPolicies": [],
                        "fqdn": "sync.getsync.tech",
                        "geolocationRoutingPolicies": [],
                        "geoproximityRoutingPolicy": null,
                        "healthCheckId": "",
                        "id": "Z00536101FTAQ0OC4U48I_sync.getsync.tech_A",
                        "latencyRoutingPolicies": [],
                        "multivalueAnswerRoutingPolicy": false,
                        "name": "sync.getsync.tech",
                        "records": null,
                        "setIdentifier": "",
                        "ttl": 0,
                        "type": "A",
                        "weightedRoutingPolicies": [],
                        "zoneId": "Z00536101FTAQ0OC4U48I"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN::SyncWebsiteCdn",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$pulumi-nodejs:dynamic:Resource::SyncWebsiteCdnAZoneLookupSyncgetsynctech.sst.aws.HostedZoneLookup"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::default_6_54_2::20f689e3-a8db-4a58-b42a-20c55b625d67",
                    "propertyDependencies": {
                        "aliases": [],
                        "name": [],
                        "type": [],
                        "zoneId": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$pulumi-nodejs:dynamic:Resource::SyncWebsiteCdnAZoneLookupSyncgetsynctech.sst.aws.HostedZoneLookup"
                        ]
                    },
                    "created": "2024-10-06T16:19:59.915614Z",
                    "modified": "2024-10-06T16:19:59.915614Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/dns.ts#192,16"
                },
                {
                    "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$pulumi-nodejs:dynamic:Resource::SyncWebsiteCdnInvalidation.sst.aws.DistributionInvalidation",
                    "custom": true,
                    "id": "invalidation",
                    "type": "pulumi-nodejs:dynamic:Resource",
                    "inputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.DistributionInvalidation\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n",
                        "distributionId": "E3D56K9WH6VSJL",
                        "paths": [
                            "/*"
                        ],
                        "version": "jStOSCIuig8hwaL8hzL8U",
                        "wait": false
                    },
                    "outputs": {
                        "__provider": "exports.handler = __f0;\n\nvar __provider_proto = {};\nObject.defineProperty(__f1, \"prototype\", { value: __provider_proto });\nObject.defineProperty(__provider_proto, \"constructor\", { configurable: true, writable: true, value: __f1 });\nObject.defineProperty(__provider_proto, \"name\", { configurable: true, writable: true, value: __f2 });\nObject.setPrototypeOf(__f4, global.Error);\nObject.defineProperty(__provider_proto, \"create\", { configurable: true, writable: true, value: __f3 });\nObject.defineProperty(__provider_proto, \"delete\", { configurable: true, writable: true, value: __f5 });\nObject.defineProperty(__provider_proto, \"update\", { configurable: true, writable: true, value: __f6 });\nObject.defineProperty(__provider_proto, \"read\", { configurable: true, writable: true, value: __f7 });\nvar __provider = Object.create(__provider_proto);\n__provider.type = \"Aws.DistributionInvalidation\";\n\nfunction __f1(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(type) {\n      this.type = type;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f2(__0) {\n  return (function() {\n    with({ this: undefined, arguments: undefined }) {\n\nreturn function /*name*/(action) {\n      return \"Resource.\" + this.type + \".\" + action;\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f4(__0) {\n  return (function() {\n    with({ __super: global.Error, this: undefined, arguments: undefined }) {\n\nreturn function /*constructor*/(method) {\n    __super.call(this, `Method \"${method}\" not found`);\n    this.method = method;\n};\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\nconst http = require(\"http\");\n\nfunction __call(__0, __1) {\n  return (function() {\n    with({ MethodNotFoundError: __f4, call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*call*/(method, args) {\n    return new Promise((resolve, reject) => {\n      const url = new URL(process.env.SST_SERVER + \"/rpc\");\n      const options = {\n        hostname: url.hostname,\n        port: url.port,\n        path: url.pathname,\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const req = http.request(options, (res) => {\n        let data = \"\";\n        res.on(\"data\", (chunk) => {\n          data += chunk;\n        });\n        res.on(\"end\", () => {\n          if (res.statusCode !== 200) {\n            reject(new Error(`Failed to call RPC: ${data}`));\n            return;\n          }\n          try {\n            const json = JSON.parse(data);\n            if (json.error) {\n              if (json.error.startsWith(\"rpc: can't find\")) {\n                reject(new MethodNotFoundError(method));\n                return;\n              }\n              reject(new Error(json.error));\n              return;\n            }\n            resolve(json.result);\n          } catch (error) {\n            reject(new Error(`Failed to parse JSON: ${error.message}`));\n          }\n        });\n      });\n      req.on(\"error\", (error) => {\n        reject(error);\n      });\n      req.setTimeout(0);\n      const body = JSON.stringify({\n        jsonrpc: \"1.0\",\n        method,\n        params: [args]\n      });\n      req.write(body);\n      req.end();\n    });\n  };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f3(__0) {\n  return (function() {\n    with({ call: __call, this: undefined, arguments: undefined }) {\n\nreturn async function /*create*/(inputs) {\n      return call(this.name(\"Create\"), inputs);\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f5(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*delete*/(id, outs) {\n      return call(this.name(\"Delete\"), { id, outs }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return;\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f6(__0, __1, __2) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*update*/(id, olds, news) {\n      return call(this.name(\"Update\"), { id, olds, news }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError)\n          return {\n            id\n          };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f7(__0, __1) {\n  return (function() {\n    with({ call: __call, MethodNotFoundError: __f4, this: undefined, arguments: undefined }) {\n\nreturn async function /*read*/(id, props) {\n      return call(this.name(\"Read\"), { id, props }).catch((ex) => {\n        if (ex instanceof MethodNotFoundError) return { id, props };\n        throw ex;\n      });\n    };\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n\nfunction __f0() {\n  return (function() {\n    with({ provider: __provider, this: undefined, arguments: undefined }) {\n\nreturn () => provider;\n\n    }\n  }).apply(undefined, undefined).apply(this, arguments);\n}\n"
                    },
                    "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN::SyncWebsiteCdn",
                    "dependencies": [
                        "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$aws:cloudfront/distribution:Distribution::SyncWebsiteCdnDistribution"
                    ],
                    "provider": "urn:pulumi:production::sync-website::pulumi:providers:pulumi-nodejs::default::031e252e-e32c-444a-a2e0-219cfd2e9d69",
                    "propertyDependencies": {
                        "__provider": [],
                        "distributionId": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$aws:cloudfront/distribution:Distribution::SyncWebsiteCdnDistribution"
                        ],
                        "paths": [],
                        "version": [],
                        "wait": []
                    },
                    "created": "2024-10-06T16:19:16.199736Z",
                    "modified": "2024-10-06T16:27:18.066448Z",
                    "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/providers/distribution-invalidation.ts#17,5"
                }
            ],
            "pending_operations": [
                {
                    "resource": {
                        "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificateValidation:CertificateValidation::MyWebCdnSslValidation",
                        "custom": true,
                        "type": "aws:acm/certificateValidation:CertificateValidation",
                        "inputs": {
                            "__defaults": [],
                            "certificateArn": "arn:aws:acm:us-east-1:831926620158:certificate/19845979-f68f-4864-a334-3ed3428d5495"
                        },
                        "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate::MyWebCdnSsl",
                        "dependencies": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificate:Certificate::MyWebCdnSslCertificate",
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:route53/record:Record::MyWebCdnSslCNAMERecord7ad0d501adc3e2c28c7dc9afaa8707cfgetsynctech",
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:route53/record:Record::MyWebCdnSslCNAMERecordA0304c7881b136a8af6e652e502b5df1syncgetsynctech"
                        ],
                        "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::AwsProvider.sst.us-east-1::61fbd68b-8c05-47c4-b28e-09ad34024e2a",
                        "propertyDependencies": {
                            "certificateArn": [
                                "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificate:Certificate::MyWebCdnSslCertificate"
                            ]
                        },
                        "created": "2024-10-03T20:21:21.582131Z",
                        "modified": "2024-10-03T20:21:21.582131Z",
                        "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/dns-validated-certificate.ts#85,14"
                    },
                    "type": "creating"
                },
                {
                    "resource": {
                        "urn": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificateValidation:CertificateValidation::MyWebCdnSslValidation",
                        "custom": true,
                        "type": "aws:acm/certificateValidation:CertificateValidation",
                        "inputs": {
                            "__defaults": [],
                            "certificateArn": "arn:aws:acm:us-east-1:831926620158:certificate/d2cd64be-c25b-4fe0-b214-c5e409365d8c"
                        },
                        "parent": "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate::MyWebCdnSsl",
                        "dependencies": [
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:route53/record:Record::MyWebCdnSslCNAMERecord7ad0d501adc3e2c28c7dc9afaa8707cfgetsynctech",
                            "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificate:Certificate::MyWebCdnSslCertificate"
                        ],
                        "provider": "urn:pulumi:production::sync-website::pulumi:providers:aws::AwsProvider.sst.us-east-1::61fbd68b-8c05-47c4-b28e-09ad34024e2a",
                        "propertyDependencies": {
                            "certificateArn": [
                                "urn:pulumi:production::sync-website::sst:aws:Nextjs$sst:aws:CDN$sst:aws:Certificate$aws:acm/certificate:Certificate::MyWebCdnSslCertificate"
                            ]
                        },
                        "created": "2024-10-03T20:21:21.582131Z",
                        "modified": "2024-10-03T20:21:21.582131Z",
                        "sourcePosition": "project:///../file:/Users/rupeshshandilya/Desktop/test/Sync-Website/.sst/platform/src/components/aws/dns-validated-certificate.ts#85,14"
                    },
                    "type": "creating"
                }
            ]
        }
    }
}
