import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * The [Cloudflare Managed Headers](https://developers.cloudflare.com/rules/transform/managed-transforms/)
 * allows you to add or remove some predefined headers to one's
 * requests or origin responses.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * // Enable security headers using Managed Meaders
 * const example = new cloudflare.ManagedHeaders("example", {
 *     zoneId: "0da42c8d2132a9ddaf714f9e7c920711",
 *     managedRequestHeaders: [{
 *         id: "add_true_client_ip_headers",
 *         enabled: true,
 *     }],
 *     managedResponseHeaders: [{
 *         id: "remove_x-powered-by_header",
 *         enabled: true,
 *     }],
 * });
 * ```
 */
export declare class ManagedHeaders extends pulumi.CustomResource {
    /**
     * Get an existing ManagedHeaders resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedHeadersState, opts?: pulumi.CustomResourceOptions): ManagedHeaders;
    /**
     * Returns true if the given object is an instance of ManagedHeaders.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ManagedHeaders;
    /**
     * The list of managed request headers.
     */
    readonly managedRequestHeaders: pulumi.Output<outputs.ManagedHeadersManagedRequestHeader[] | undefined>;
    /**
     * The list of managed response headers.
     */
    readonly managedResponseHeaders: pulumi.Output<outputs.ManagedHeadersManagedResponseHeader[] | undefined>;
    /**
     * The zone identifier to target for the resource.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a ManagedHeaders resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedHeadersArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ManagedHeaders resources.
 */
export interface ManagedHeadersState {
    /**
     * The list of managed request headers.
     */
    managedRequestHeaders?: pulumi.Input<pulumi.Input<inputs.ManagedHeadersManagedRequestHeader>[]>;
    /**
     * The list of managed response headers.
     */
    managedResponseHeaders?: pulumi.Input<pulumi.Input<inputs.ManagedHeadersManagedResponseHeader>[]>;
    /**
     * The zone identifier to target for the resource.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ManagedHeaders resource.
 */
export interface ManagedHeadersArgs {
    /**
     * The list of managed request headers.
     */
    managedRequestHeaders?: pulumi.Input<pulumi.Input<inputs.ManagedHeadersManagedRequestHeader>[]>;
    /**
     * The list of managed response headers.
     */
    managedResponseHeaders?: pulumi.Input<pulumi.Input<inputs.ManagedHeadersManagedResponseHeader>[]>;
    /**
     * The zone identifier to target for the resource.
     */
    zoneId: pulumi.Input<string>;
}
