/**
 * Configure the base path used by the API client. Alternatively, can be configured using the `CLOUDFLARE_API_BASE_PATH`
 * environment variable.
 */
export declare const apiBasePath: string | undefined;
/**
 * Whether to print logs from the API client (using the default log library logger). Alternatively, can be configured using
 * the `CLOUDFLARE_API_CLIENT_LOGGING` environment variable.
 */
export declare const apiClientLogging: boolean;
/**
 * Configure the hostname used by the API client. Alternatively, can be configured using the `CLOUDFLARE_API_HOSTNAME`
 * environment variable.
 */
export declare const apiHostname: string | undefined;
/**
 * The API key for operations. Alternatively, can be configured using the `CLOUDFLARE_API_KEY` environment variable. API
 * keys are [now considered legacy by
 * Cloudflare](https://developers.cloudflare.com/fundamentals/api/get-started/keys/#limitations), API tokens should be used
 * instead. Must provide only one of `apiKey`, `apiToken`, `apiUserServiceKey`.
 */
export declare const apiKey: string | undefined;
/**
 * The API Token for operations. Alternatively, can be configured using the `CLOUDFLARE_API_TOKEN` environment variable.
 * Must provide only one of `apiKey`, `apiToken`, `apiUserServiceKey`.
 */
export declare const apiToken: string | undefined;
/**
 * A special Cloudflare API key good for a restricted set of endpoints. Alternatively, can be configured using the
 * `CLOUDFLARE_API_USER_SERVICE_KEY` environment variable. Must provide only one of `apiKey`, `apiToken`,
 * `apiUserServiceKey`.
 */
export declare const apiUserServiceKey: string | undefined;
/**
 * A registered Cloudflare email address. Alternatively, can be configured using the `CLOUDFLARE_EMAIL` environment
 * variable. Required when using `apiKey`. Conflicts with `apiToken`.
 */
export declare const email: string | undefined;
/**
 * Maximum backoff period in seconds after failed API calls. Alternatively, can be configured using the
 * `CLOUDFLARE_MAX_BACKOFF` environment variable.
 */
export declare const maxBackoff: number;
/**
 * Minimum backoff period in seconds after failed API calls. Alternatively, can be configured using the
 * `CLOUDFLARE_MIN_BACKOFF` environment variable.
 */
export declare const minBackoff: number;
/**
 * Maximum number of retries to perform when an API request fails. Alternatively, can be configured using the
 * `CLOUDFLARE_RETRIES` environment variable.
 */
export declare const retries: number;
/**
 * RPS limit to apply when making calls to the API. Alternatively, can be configured using the `CLOUDFLARE_RPS` environment
 * variable.
 */
export declare const rps: number;
export declare const userAgentOperatorSuffix: string | undefined;
