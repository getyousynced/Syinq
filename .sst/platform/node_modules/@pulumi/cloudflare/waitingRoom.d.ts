import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides a Cloudflare Waiting Room resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * // Waiting Room
 * const example = new cloudflare.WaitingRoom("example", {
 *     zoneId: "0da42c8d2132a9ddaf714f9e7c920711",
 *     name: "foo",
 *     host: "foo.example.com",
 *     path: "/",
 *     newUsersPerMinute: 200,
 *     totalActiveUsers: 200,
 *     cookieSuffix: "queue1",
 *     additionalRoutes: [
 *         {
 *             host: "shop1.example.com",
 *             path: "/example-path",
 *         },
 *         {
 *             host: "shop2.example.com",
 *         },
 *     ],
 *     queueingStatusCode: 200,
 * });
 * ```
 *
 * ## Import
 *
 * Use the Zone ID and Waiting Room ID to import.
 *
 * ```sh
 * $ pulumi import cloudflare:index/waitingRoom:WaitingRoom default <zone_id>/<waiting_room_id>
 * ```
 */
export declare class WaitingRoom extends pulumi.CustomResource {
    /**
     * Get an existing WaitingRoom resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WaitingRoomState, opts?: pulumi.CustomResourceOptions): WaitingRoom;
    /**
     * Returns true if the given object is an instance of WaitingRoom.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WaitingRoom;
    /**
     * A list of additional hostname and paths combination to be applied on the waiting room.
     */
    readonly additionalRoutes: pulumi.Output<outputs.WaitingRoomAdditionalRoute[] | undefined>;
    /**
     * A cookie suffix to be appended to the Cloudflare waiting room cookie name.
     */
    readonly cookieSuffix: pulumi.Output<string | undefined>;
    /**
     * This is a templated html file that will be rendered at the edge.
     */
    readonly customPageHtml: pulumi.Output<string | undefined>;
    /**
     * The language to use for the default waiting room page. Available values: `de-DE`, `es-ES`, `en-US`, `fr-FR`, `id-ID`, `it-IT`, `ja-JP`, `ko-KR`, `nl-NL`, `pl-PL`, `pt-BR`, `tr-TR`, `zh-CN`, `zh-TW`, `ru-RU`, `fa-IR`. Defaults to `en-US`.
     */
    readonly defaultTemplateLanguage: pulumi.Output<string | undefined>;
    /**
     * A description to add more details about the waiting room.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Disables automatic renewal of session cookies.
     */
    readonly disableSessionRenewal: pulumi.Output<boolean | undefined>;
    /**
     * Host name for which the waiting room will be applied (no wildcards).
     */
    readonly host: pulumi.Output<string>;
    /**
     * If true, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object.
     */
    readonly jsonResponseEnabled: pulumi.Output<boolean | undefined>;
    /**
     * A unique name to identify the waiting room. **Modifying this attribute will force creation of a new resource.**
     */
    readonly name: pulumi.Output<string>;
    /**
     * The number of new users that will be let into the route every minute.
     */
    readonly newUsersPerMinute: pulumi.Output<number>;
    /**
     * The path within the host to enable the waiting room on. Defaults to `/`.
     */
    readonly path: pulumi.Output<string | undefined>;
    /**
     * If queueAll is true, then all traffic will be sent to the waiting room.
     */
    readonly queueAll: pulumi.Output<boolean | undefined>;
    /**
     * The queueing method used by the waiting room. Available values: `fifo`, `random`, `passthrough`, `reject`. Defaults to `fifo`.
     */
    readonly queueingMethod: pulumi.Output<string | undefined>;
    /**
     * HTTP status code returned to a user while in the queue. Defaults to `200`.
     */
    readonly queueingStatusCode: pulumi.Output<number | undefined>;
    /**
     * Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the origin. Defaults to `5`.
     */
    readonly sessionDuration: pulumi.Output<number | undefined>;
    /**
     * Suspends the waiting room.
     */
    readonly suspended: pulumi.Output<boolean | undefined>;
    /**
     * The total number of active user sessions on the route at a point in time.
     */
    readonly totalActiveUsers: pulumi.Output<number>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a WaitingRoom resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WaitingRoomArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering WaitingRoom resources.
 */
export interface WaitingRoomState {
    /**
     * A list of additional hostname and paths combination to be applied on the waiting room.
     */
    additionalRoutes?: pulumi.Input<pulumi.Input<inputs.WaitingRoomAdditionalRoute>[]>;
    /**
     * A cookie suffix to be appended to the Cloudflare waiting room cookie name.
     */
    cookieSuffix?: pulumi.Input<string>;
    /**
     * This is a templated html file that will be rendered at the edge.
     */
    customPageHtml?: pulumi.Input<string>;
    /**
     * The language to use for the default waiting room page. Available values: `de-DE`, `es-ES`, `en-US`, `fr-FR`, `id-ID`, `it-IT`, `ja-JP`, `ko-KR`, `nl-NL`, `pl-PL`, `pt-BR`, `tr-TR`, `zh-CN`, `zh-TW`, `ru-RU`, `fa-IR`. Defaults to `en-US`.
     */
    defaultTemplateLanguage?: pulumi.Input<string>;
    /**
     * A description to add more details about the waiting room.
     */
    description?: pulumi.Input<string>;
    /**
     * Disables automatic renewal of session cookies.
     */
    disableSessionRenewal?: pulumi.Input<boolean>;
    /**
     * Host name for which the waiting room will be applied (no wildcards).
     */
    host?: pulumi.Input<string>;
    /**
     * If true, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object.
     */
    jsonResponseEnabled?: pulumi.Input<boolean>;
    /**
     * A unique name to identify the waiting room. **Modifying this attribute will force creation of a new resource.**
     */
    name?: pulumi.Input<string>;
    /**
     * The number of new users that will be let into the route every minute.
     */
    newUsersPerMinute?: pulumi.Input<number>;
    /**
     * The path within the host to enable the waiting room on. Defaults to `/`.
     */
    path?: pulumi.Input<string>;
    /**
     * If queueAll is true, then all traffic will be sent to the waiting room.
     */
    queueAll?: pulumi.Input<boolean>;
    /**
     * The queueing method used by the waiting room. Available values: `fifo`, `random`, `passthrough`, `reject`. Defaults to `fifo`.
     */
    queueingMethod?: pulumi.Input<string>;
    /**
     * HTTP status code returned to a user while in the queue. Defaults to `200`.
     */
    queueingStatusCode?: pulumi.Input<number>;
    /**
     * Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the origin. Defaults to `5`.
     */
    sessionDuration?: pulumi.Input<number>;
    /**
     * Suspends the waiting room.
     */
    suspended?: pulumi.Input<boolean>;
    /**
     * The total number of active user sessions on the route at a point in time.
     */
    totalActiveUsers?: pulumi.Input<number>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a WaitingRoom resource.
 */
export interface WaitingRoomArgs {
    /**
     * A list of additional hostname and paths combination to be applied on the waiting room.
     */
    additionalRoutes?: pulumi.Input<pulumi.Input<inputs.WaitingRoomAdditionalRoute>[]>;
    /**
     * A cookie suffix to be appended to the Cloudflare waiting room cookie name.
     */
    cookieSuffix?: pulumi.Input<string>;
    /**
     * This is a templated html file that will be rendered at the edge.
     */
    customPageHtml?: pulumi.Input<string>;
    /**
     * The language to use for the default waiting room page. Available values: `de-DE`, `es-ES`, `en-US`, `fr-FR`, `id-ID`, `it-IT`, `ja-JP`, `ko-KR`, `nl-NL`, `pl-PL`, `pt-BR`, `tr-TR`, `zh-CN`, `zh-TW`, `ru-RU`, `fa-IR`. Defaults to `en-US`.
     */
    defaultTemplateLanguage?: pulumi.Input<string>;
    /**
     * A description to add more details about the waiting room.
     */
    description?: pulumi.Input<string>;
    /**
     * Disables automatic renewal of session cookies.
     */
    disableSessionRenewal?: pulumi.Input<boolean>;
    /**
     * Host name for which the waiting room will be applied (no wildcards).
     */
    host: pulumi.Input<string>;
    /**
     * If true, requests to the waiting room with the header `Accept: application/json` will receive a JSON response object.
     */
    jsonResponseEnabled?: pulumi.Input<boolean>;
    /**
     * A unique name to identify the waiting room. **Modifying this attribute will force creation of a new resource.**
     */
    name: pulumi.Input<string>;
    /**
     * The number of new users that will be let into the route every minute.
     */
    newUsersPerMinute: pulumi.Input<number>;
    /**
     * The path within the host to enable the waiting room on. Defaults to `/`.
     */
    path?: pulumi.Input<string>;
    /**
     * If queueAll is true, then all traffic will be sent to the waiting room.
     */
    queueAll?: pulumi.Input<boolean>;
    /**
     * The queueing method used by the waiting room. Available values: `fifo`, `random`, `passthrough`, `reject`. Defaults to `fifo`.
     */
    queueingMethod?: pulumi.Input<string>;
    /**
     * HTTP status code returned to a user while in the queue. Defaults to `200`.
     */
    queueingStatusCode?: pulumi.Input<number>;
    /**
     * Lifetime of a cookie (in minutes) set by Cloudflare for users who get access to the origin. Defaults to `5`.
     */
    sessionDuration?: pulumi.Input<number>;
    /**
     * Suspends the waiting room.
     */
    suspended?: pulumi.Input<boolean>;
    /**
     * The total number of active user sessions on the route at a point in time.
     */
    totalActiveUsers: pulumi.Input<number>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId: pulumi.Input<string>;
}
