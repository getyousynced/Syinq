import * as pulumi from "@pulumi/pulumi";
import * as outputs from "./types/output";
/**
 * Use this data source to lookup [Account Roles](https://api.cloudflare.com/#account-roles-properties).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const accountRoles = cloudflare.getAccountRoles({
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 * });
 * const rolesByName = accountRoles.then(accountRoles => .reduce((__obj, role) => ({ ...__obj, [role.name]: role })));
 * const member = new cloudflare.AccountMember("member", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     emailAddress: "user@example.com",
 *     roleIds: [rolesByName.Administrator?.id],
 * });
 * ```
 */
export declare function getAccountRoles(args: GetAccountRolesArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountRolesResult>;
/**
 * A collection of arguments for invoking getAccountRoles.
 */
export interface GetAccountRolesArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: string;
}
/**
 * A collection of values returned by getAccountRoles.
 */
export interface GetAccountRolesResult {
    /**
     * The account identifier to target for the resource.
     */
    readonly accountId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of roles object.
     */
    readonly roles: outputs.GetAccountRolesRole[];
}
/**
 * Use this data source to lookup [Account Roles](https://api.cloudflare.com/#account-roles-properties).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const accountRoles = cloudflare.getAccountRoles({
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 * });
 * const rolesByName = accountRoles.then(accountRoles => .reduce((__obj, role) => ({ ...__obj, [role.name]: role })));
 * const member = new cloudflare.AccountMember("member", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     emailAddress: "user@example.com",
 *     roleIds: [rolesByName.Administrator?.id],
 * });
 * ```
 */
export declare function getAccountRolesOutput(args: GetAccountRolesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountRolesResult>;
/**
 * A collection of arguments for invoking getAccountRoles.
 */
export interface GetAccountRolesOutputArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
}
