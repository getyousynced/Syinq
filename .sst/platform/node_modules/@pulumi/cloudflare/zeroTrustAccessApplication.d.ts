import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides a Cloudflare Access Application resource. Access
 * Applications are used to restrict access to a whole application using an
 * authorisation gateway managed by Cloudflare.
 *
 * > It's required that an `accountId` or `zoneId` is provided and in
 *    most cases using either is fine. However, if you're using a scoped
 *    access token, you must provide the argument that matches the token's
 *    scope. For example, an access token that is scoped to the "example.com"
 *    zone needs to use the `zoneId` argument.
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustAccessApplication:ZeroTrustAccessApplication example <account_id>/<application_id>
 * ```
 */
export declare class ZeroTrustAccessApplication extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustAccessApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustAccessApplicationState, opts?: pulumi.CustomResourceOptions): ZeroTrustAccessApplication;
    /**
     * Returns true if the given object is an instance of ZeroTrustAccessApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZeroTrustAccessApplication;
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * When set to true, users can authenticate to this application using their WARP session. When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
     */
    readonly allowAuthenticateViaWarp: pulumi.Output<boolean | undefined>;
    /**
     * The identity providers selected for the application.
     */
    readonly allowedIdps: pulumi.Output<string[] | undefined>;
    /**
     * The logo URL of the app launcher.
     */
    readonly appLauncherLogoUrl: pulumi.Output<string | undefined>;
    /**
     * Option to show/hide applications in App Launcher. Defaults to `true`.
     */
    readonly appLauncherVisible: pulumi.Output<boolean | undefined>;
    /**
     * Application Audience (AUD) Tag of the application.
     */
    readonly aud: pulumi.Output<string>;
    /**
     * Option to skip identity provider selection if only one is configured in `allowedIdps`. Defaults to `false`.
     */
    readonly autoRedirectToIdentity: pulumi.Output<boolean | undefined>;
    /**
     * The background color of the app launcher.
     */
    readonly bgColor: pulumi.Output<string | undefined>;
    /**
     * CORS configuration for the Access Application. See below for reference structure.
     */
    readonly corsHeaders: pulumi.Output<outputs.ZeroTrustAccessApplicationCorsHeader[] | undefined>;
    /**
     * Option that returns a custom error message when a user is denied access to the application.
     */
    readonly customDenyMessage: pulumi.Output<string | undefined>;
    /**
     * Option that redirects to a custom URL when a user is denied access to the application via identity based rules.
     */
    readonly customDenyUrl: pulumi.Output<string | undefined>;
    /**
     * Option that redirects to a custom URL when a user is denied access to the application via non identity rules.
     */
    readonly customNonIdentityDenyUrl: pulumi.Output<string | undefined>;
    /**
     * The custom pages selected for the application.
     */
    readonly customPages: pulumi.Output<string[] | undefined>;
    /**
     * The primary hostname and path that Access will secure. If the app is visible in the App Launcher dashboard, this is the domain that will be displayed.
     */
    readonly domain: pulumi.Output<string>;
    /**
     * Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional "binding" cookie on requests. Defaults to `false`.
     */
    readonly enableBindingCookie: pulumi.Output<boolean | undefined>;
    /**
     * The footer links of the app launcher.
     */
    readonly footerLinks: pulumi.Output<outputs.ZeroTrustAccessApplicationFooterLink[] | undefined>;
    /**
     * The background color of the header bar in the app launcher.
     */
    readonly headerBgColor: pulumi.Output<string | undefined>;
    /**
     * Option to add the `HttpOnly` cookie flag to access tokens.
     */
    readonly httpOnlyCookieAttribute: pulumi.Output<boolean | undefined>;
    /**
     * The landing page design of the app launcher.
     */
    readonly landingPageDesign: pulumi.Output<outputs.ZeroTrustAccessApplicationLandingPageDesign | undefined>;
    /**
     * Image URL for the logo shown in the app launcher dashboard.
     */
    readonly logoUrl: pulumi.Output<string | undefined>;
    /**
     * Friendly name of the Access Application.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if corsHeaders is set. Defaults to `false`.
     */
    readonly optionsPreflightBypass: pulumi.Output<boolean | undefined>;
    /**
     * The policies associated with the application, in ascending order of precedence. Warning: Do not use this field while you still have this application ID referenced as `applicationId` in any `cloudflare.AccessPolicy` resource, as it can result in an inconsistent state.
     */
    readonly policies: pulumi.Output<string[] | undefined>;
    /**
     * SaaS configuration for the Access Application.
     */
    readonly saasApp: pulumi.Output<outputs.ZeroTrustAccessApplicationSaasApp | undefined>;
    /**
     * Defines the same-site cookie setting for access tokens. Available values: `none`, `lax`, `strict`.
     */
    readonly sameSiteCookieAttribute: pulumi.Output<string | undefined>;
    /**
     * Configuration for provisioning to this application via SCIM. This is currently in closed beta.
     */
    readonly scimConfig: pulumi.Output<outputs.ZeroTrustAccessApplicationScimConfig | undefined>;
    /**
     * List of domains that access will secure. Only present for self_hosted, vnc, and ssh applications. Always includes the value set as `domain`.
     */
    readonly selfHostedDomains: pulumi.Output<string[] | undefined>;
    /**
     * Option to return a 401 status code in service authentication rules on failed requests. Defaults to `false`.
     */
    readonly serviceAuth401Redirect: pulumi.Output<boolean | undefined>;
    /**
     * How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`. Defaults to `24h`.
     */
    readonly sessionDuration: pulumi.Output<string | undefined>;
    /**
     * Option to skip the App Launcher landing page. Defaults to `false`.
     */
    readonly skipAppLauncherLoginPage: pulumi.Output<boolean | undefined>;
    /**
     * Option to skip the authorization interstitial when using the CLI. Defaults to `false`.
     */
    readonly skipInterstitial: pulumi.Output<boolean | undefined>;
    /**
     * The itags associated with the application.
     */
    readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * The application type. Available values: `appLauncher`, `bookmark`, `biso`, `dashSso`, `saas`, `selfHosted`, `ssh`, `vnc`, `warp`. Defaults to `selfHosted`.
     */
    readonly type: pulumi.Output<string | undefined>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a ZeroTrustAccessApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ZeroTrustAccessApplicationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZeroTrustAccessApplication resources.
 */
export interface ZeroTrustAccessApplicationState {
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * When set to true, users can authenticate to this application using their WARP session. When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
     */
    allowAuthenticateViaWarp?: pulumi.Input<boolean>;
    /**
     * The identity providers selected for the application.
     */
    allowedIdps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The logo URL of the app launcher.
     */
    appLauncherLogoUrl?: pulumi.Input<string>;
    /**
     * Option to show/hide applications in App Launcher. Defaults to `true`.
     */
    appLauncherVisible?: pulumi.Input<boolean>;
    /**
     * Application Audience (AUD) Tag of the application.
     */
    aud?: pulumi.Input<string>;
    /**
     * Option to skip identity provider selection if only one is configured in `allowedIdps`. Defaults to `false`.
     */
    autoRedirectToIdentity?: pulumi.Input<boolean>;
    /**
     * The background color of the app launcher.
     */
    bgColor?: pulumi.Input<string>;
    /**
     * CORS configuration for the Access Application. See below for reference structure.
     */
    corsHeaders?: pulumi.Input<pulumi.Input<inputs.ZeroTrustAccessApplicationCorsHeader>[]>;
    /**
     * Option that returns a custom error message when a user is denied access to the application.
     */
    customDenyMessage?: pulumi.Input<string>;
    /**
     * Option that redirects to a custom URL when a user is denied access to the application via identity based rules.
     */
    customDenyUrl?: pulumi.Input<string>;
    /**
     * Option that redirects to a custom URL when a user is denied access to the application via non identity rules.
     */
    customNonIdentityDenyUrl?: pulumi.Input<string>;
    /**
     * The custom pages selected for the application.
     */
    customPages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The primary hostname and path that Access will secure. If the app is visible in the App Launcher dashboard, this is the domain that will be displayed.
     */
    domain?: pulumi.Input<string>;
    /**
     * Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional "binding" cookie on requests. Defaults to `false`.
     */
    enableBindingCookie?: pulumi.Input<boolean>;
    /**
     * The footer links of the app launcher.
     */
    footerLinks?: pulumi.Input<pulumi.Input<inputs.ZeroTrustAccessApplicationFooterLink>[]>;
    /**
     * The background color of the header bar in the app launcher.
     */
    headerBgColor?: pulumi.Input<string>;
    /**
     * Option to add the `HttpOnly` cookie flag to access tokens.
     */
    httpOnlyCookieAttribute?: pulumi.Input<boolean>;
    /**
     * The landing page design of the app launcher.
     */
    landingPageDesign?: pulumi.Input<inputs.ZeroTrustAccessApplicationLandingPageDesign>;
    /**
     * Image URL for the logo shown in the app launcher dashboard.
     */
    logoUrl?: pulumi.Input<string>;
    /**
     * Friendly name of the Access Application.
     */
    name?: pulumi.Input<string>;
    /**
     * Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if corsHeaders is set. Defaults to `false`.
     */
    optionsPreflightBypass?: pulumi.Input<boolean>;
    /**
     * The policies associated with the application, in ascending order of precedence. Warning: Do not use this field while you still have this application ID referenced as `applicationId` in any `cloudflare.AccessPolicy` resource, as it can result in an inconsistent state.
     */
    policies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * SaaS configuration for the Access Application.
     */
    saasApp?: pulumi.Input<inputs.ZeroTrustAccessApplicationSaasApp>;
    /**
     * Defines the same-site cookie setting for access tokens. Available values: `none`, `lax`, `strict`.
     */
    sameSiteCookieAttribute?: pulumi.Input<string>;
    /**
     * Configuration for provisioning to this application via SCIM. This is currently in closed beta.
     */
    scimConfig?: pulumi.Input<inputs.ZeroTrustAccessApplicationScimConfig>;
    /**
     * List of domains that access will secure. Only present for self_hosted, vnc, and ssh applications. Always includes the value set as `domain`.
     */
    selfHostedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Option to return a 401 status code in service authentication rules on failed requests. Defaults to `false`.
     */
    serviceAuth401Redirect?: pulumi.Input<boolean>;
    /**
     * How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`. Defaults to `24h`.
     */
    sessionDuration?: pulumi.Input<string>;
    /**
     * Option to skip the App Launcher landing page. Defaults to `false`.
     */
    skipAppLauncherLoginPage?: pulumi.Input<boolean>;
    /**
     * Option to skip the authorization interstitial when using the CLI. Defaults to `false`.
     */
    skipInterstitial?: pulumi.Input<boolean>;
    /**
     * The itags associated with the application.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The application type. Available values: `appLauncher`, `bookmark`, `biso`, `dashSso`, `saas`, `selfHosted`, `ssh`, `vnc`, `warp`. Defaults to `selfHosted`.
     */
    type?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZeroTrustAccessApplication resource.
 */
export interface ZeroTrustAccessApplicationArgs {
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * When set to true, users can authenticate to this application using their WARP session. When set to false this application will always require direct IdP authentication. This setting always overrides the organization setting for WARP authentication.
     */
    allowAuthenticateViaWarp?: pulumi.Input<boolean>;
    /**
     * The identity providers selected for the application.
     */
    allowedIdps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The logo URL of the app launcher.
     */
    appLauncherLogoUrl?: pulumi.Input<string>;
    /**
     * Option to show/hide applications in App Launcher. Defaults to `true`.
     */
    appLauncherVisible?: pulumi.Input<boolean>;
    /**
     * Option to skip identity provider selection if only one is configured in `allowedIdps`. Defaults to `false`.
     */
    autoRedirectToIdentity?: pulumi.Input<boolean>;
    /**
     * The background color of the app launcher.
     */
    bgColor?: pulumi.Input<string>;
    /**
     * CORS configuration for the Access Application. See below for reference structure.
     */
    corsHeaders?: pulumi.Input<pulumi.Input<inputs.ZeroTrustAccessApplicationCorsHeader>[]>;
    /**
     * Option that returns a custom error message when a user is denied access to the application.
     */
    customDenyMessage?: pulumi.Input<string>;
    /**
     * Option that redirects to a custom URL when a user is denied access to the application via identity based rules.
     */
    customDenyUrl?: pulumi.Input<string>;
    /**
     * Option that redirects to a custom URL when a user is denied access to the application via non identity rules.
     */
    customNonIdentityDenyUrl?: pulumi.Input<string>;
    /**
     * The custom pages selected for the application.
     */
    customPages?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The primary hostname and path that Access will secure. If the app is visible in the App Launcher dashboard, this is the domain that will be displayed.
     */
    domain?: pulumi.Input<string>;
    /**
     * Option to provide increased security against compromised authorization tokens and CSRF attacks by requiring an additional "binding" cookie on requests. Defaults to `false`.
     */
    enableBindingCookie?: pulumi.Input<boolean>;
    /**
     * The footer links of the app launcher.
     */
    footerLinks?: pulumi.Input<pulumi.Input<inputs.ZeroTrustAccessApplicationFooterLink>[]>;
    /**
     * The background color of the header bar in the app launcher.
     */
    headerBgColor?: pulumi.Input<string>;
    /**
     * Option to add the `HttpOnly` cookie flag to access tokens.
     */
    httpOnlyCookieAttribute?: pulumi.Input<boolean>;
    /**
     * The landing page design of the app launcher.
     */
    landingPageDesign?: pulumi.Input<inputs.ZeroTrustAccessApplicationLandingPageDesign>;
    /**
     * Image URL for the logo shown in the app launcher dashboard.
     */
    logoUrl?: pulumi.Input<string>;
    /**
     * Friendly name of the Access Application.
     */
    name?: pulumi.Input<string>;
    /**
     * Allows options preflight requests to bypass Access authentication and go directly to the origin. Cannot turn on if corsHeaders is set. Defaults to `false`.
     */
    optionsPreflightBypass?: pulumi.Input<boolean>;
    /**
     * The policies associated with the application, in ascending order of precedence. Warning: Do not use this field while you still have this application ID referenced as `applicationId` in any `cloudflare.AccessPolicy` resource, as it can result in an inconsistent state.
     */
    policies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * SaaS configuration for the Access Application.
     */
    saasApp?: pulumi.Input<inputs.ZeroTrustAccessApplicationSaasApp>;
    /**
     * Defines the same-site cookie setting for access tokens. Available values: `none`, `lax`, `strict`.
     */
    sameSiteCookieAttribute?: pulumi.Input<string>;
    /**
     * Configuration for provisioning to this application via SCIM. This is currently in closed beta.
     */
    scimConfig?: pulumi.Input<inputs.ZeroTrustAccessApplicationScimConfig>;
    /**
     * List of domains that access will secure. Only present for self_hosted, vnc, and ssh applications. Always includes the value set as `domain`.
     */
    selfHostedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Option to return a 401 status code in service authentication rules on failed requests. Defaults to `false`.
     */
    serviceAuth401Redirect?: pulumi.Input<boolean>;
    /**
     * How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`. Defaults to `24h`.
     */
    sessionDuration?: pulumi.Input<string>;
    /**
     * Option to skip the App Launcher landing page. Defaults to `false`.
     */
    skipAppLauncherLoginPage?: pulumi.Input<boolean>;
    /**
     * Option to skip the authorization interstitial when using the CLI. Defaults to `false`.
     */
    skipInterstitial?: pulumi.Input<boolean>;
    /**
     * The itags associated with the application.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The application type. Available values: `appLauncher`, `bookmark`, `biso`, `dashSso`, `saas`, `selfHosted`, `ssh`, `vnc`, `warp`. Defaults to `selfHosted`.
     */
    type?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    zoneId?: pulumi.Input<string>;
}
