"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkersCronTrigger = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Worker Cron Triggers allow users to map a cron expression to a Worker script
 * using a `ScheduledEvent` listener that enables Workers to be executed on a
 * schedule. Worker Cron Triggers are ideal for running periodic jobs for
 * maintenance or calling third-party APIs to collect up-to-date data.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 * import * as std from "@pulumi/std";
 *
 * const exampleScript = new cloudflare.WorkersScript("example_script", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "example-script",
 *     content: std.file({
 *         input: "path/to/my.js",
 *     }).then(invoke => invoke.result),
 * });
 * const exampleTrigger = new cloudflare.WorkersCronTrigger("example_trigger", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     scriptName: exampleScript.name,
 *     schedules: [
 *         "*&#47;5 * * * *",
 *         "10 7 * * mon-fri",
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/workersCronTrigger:WorkersCronTrigger example <account_id>/<script_name>
 * ```
 */
class WorkersCronTrigger extends pulumi.CustomResource {
    /**
     * Get an existing WorkersCronTrigger resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WorkersCronTrigger(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WorkersCronTrigger.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkersCronTrigger.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["schedules"] = state ? state.schedules : undefined;
            resourceInputs["scriptName"] = state ? state.scriptName : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.schedules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schedules'");
            }
            if ((!args || args.scriptName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scriptName'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["schedules"] = args ? args.schedules : undefined;
            resourceInputs["scriptName"] = args ? args.scriptName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkersCronTrigger.__pulumiType, name, resourceInputs, opts);
    }
}
exports.WorkersCronTrigger = WorkersCronTrigger;
/** @internal */
WorkersCronTrigger.__pulumiType = 'cloudflare:index/workersCronTrigger:WorkersCronTrigger';
//# sourceMappingURL=workersCronTrigger.js.map