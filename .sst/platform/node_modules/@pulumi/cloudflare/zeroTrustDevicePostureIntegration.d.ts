import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides a Cloudflare Device Posture Integration resource. Device
 * posture integrations configure third-party data providers for device
 * posture rules.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.ZeroTrustDevicePostureIntegration("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "Device posture integration",
 *     type: "workspace_one",
 *     interval: "24h",
 *     configs: [{
 *         apiUrl: "https://example.com/api",
 *         authUrl: "https://example.com/connect/token",
 *         clientId: "client-id",
 *         clientSecret: "client-secret",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustDevicePostureIntegration:ZeroTrustDevicePostureIntegration example <account_id>/<device_posture_integration_id>
 * ```
 */
export declare class ZeroTrustDevicePostureIntegration extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustDevicePostureIntegration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustDevicePostureIntegrationState, opts?: pulumi.CustomResourceOptions): ZeroTrustDevicePostureIntegration;
    /**
     * Returns true if the given object is an instance of ZeroTrustDevicePostureIntegration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZeroTrustDevicePostureIntegration;
    /**
     * The account identifier to target for the resource.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The device posture integration's connection authorization parameters.
     */
    readonly configs: pulumi.Output<outputs.ZeroTrustDevicePostureIntegrationConfig[] | undefined>;
    readonly identifier: pulumi.Output<string | undefined>;
    /**
     * Indicates the frequency with which to poll the third-party API. Must be in the format `1h` or `30m`.
     */
    readonly interval: pulumi.Output<string | undefined>;
    /**
     * Name of the device posture integration.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The device posture integration type. Available values: `workspaceOne`, `uptycs`, `crowdstrikeS2s`, `intune`, `kolide`, `sentineloneS2s`, `taniumS2s`.
     */
    readonly type: pulumi.Output<string>;
    /**
     * Create a ZeroTrustDevicePostureIntegration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustDevicePostureIntegrationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZeroTrustDevicePostureIntegration resources.
 */
export interface ZeroTrustDevicePostureIntegrationState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The device posture integration's connection authorization parameters.
     */
    configs?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDevicePostureIntegrationConfig>[]>;
    identifier?: pulumi.Input<string>;
    /**
     * Indicates the frequency with which to poll the third-party API. Must be in the format `1h` or `30m`.
     */
    interval?: pulumi.Input<string>;
    /**
     * Name of the device posture integration.
     */
    name?: pulumi.Input<string>;
    /**
     * The device posture integration type. Available values: `workspaceOne`, `uptycs`, `crowdstrikeS2s`, `intune`, `kolide`, `sentineloneS2s`, `taniumS2s`.
     */
    type?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZeroTrustDevicePostureIntegration resource.
 */
export interface ZeroTrustDevicePostureIntegrationArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * The device posture integration's connection authorization parameters.
     */
    configs?: pulumi.Input<pulumi.Input<inputs.ZeroTrustDevicePostureIntegrationConfig>[]>;
    identifier?: pulumi.Input<string>;
    /**
     * Indicates the frequency with which to poll the third-party API. Must be in the format `1h` or `30m`.
     */
    interval?: pulumi.Input<string>;
    /**
     * Name of the device posture integration.
     */
    name: pulumi.Input<string>;
    /**
     * The device posture integration type. Available values: `workspaceOne`, `uptycs`, `crowdstrikeS2s`, `intune`, `kolide`, `sentineloneS2s`, `taniumS2s`.
     */
    type: pulumi.Input<string>;
}
