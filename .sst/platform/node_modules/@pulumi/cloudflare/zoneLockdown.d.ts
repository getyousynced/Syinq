import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides a Cloudflare Zone Lockdown resource. Zone Lockdown allows
 * you to define one or more URLs (with wildcard matching on the domain
 * or path) that will only permit access if the request originates
 * from an IP address that matches a safelist of one or more IP
 * addresses and/or IP ranges.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * // Restrict access to these endpoints to requests from a known IP address range.
 * const example = new cloudflare.ZoneLockdown("example", {
 *     zoneId: "0da42c8d2132a9ddaf714f9e7c920711",
 *     paused: false,
 *     description: "Restrict access to these endpoints to requests from a known IP address range",
 *     urls: ["api.mysite.com/some/endpoint*"],
 *     configurations: [{
 *         target: "ip_range",
 *         value: "192.0.2.0/24",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zoneLockdown:ZoneLockdown example <zone_id>/<lockdown_id>
 * ```
 */
export declare class ZoneLockdown extends pulumi.CustomResource {
    /**
     * Get an existing ZoneLockdown resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneLockdownState, opts?: pulumi.CustomResourceOptions): ZoneLockdown;
    /**
     * Returns true if the given object is an instance of ZoneLockdown.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZoneLockdown;
    /**
     * A list of IP addresses or IP ranges to match the request against specified in target, value pairs.
     */
    readonly configurations: pulumi.Output<outputs.ZoneLockdownConfiguration[]>;
    /**
     * A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Boolean of whether this zone lockdown is currently paused. Defaults to `false`.
     */
    readonly paused: pulumi.Output<boolean | undefined>;
    readonly priority: pulumi.Output<number | undefined>;
    /**
     * A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
     */
    readonly urls: pulumi.Output<string[]>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a ZoneLockdown resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneLockdownArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZoneLockdown resources.
 */
export interface ZoneLockdownState {
    /**
     * A list of IP addresses or IP ranges to match the request against specified in target, value pairs.
     */
    configurations?: pulumi.Input<pulumi.Input<inputs.ZoneLockdownConfiguration>[]>;
    /**
     * A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
     */
    description?: pulumi.Input<string>;
    /**
     * Boolean of whether this zone lockdown is currently paused. Defaults to `false`.
     */
    paused?: pulumi.Input<boolean>;
    priority?: pulumi.Input<number>;
    /**
     * A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
     */
    urls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZoneLockdown resource.
 */
export interface ZoneLockdownArgs {
    /**
     * A list of IP addresses or IP ranges to match the request against specified in target, value pairs.
     */
    configurations: pulumi.Input<pulumi.Input<inputs.ZoneLockdownConfiguration>[]>;
    /**
     * A description about the lockdown entry. Typically used as a reminder or explanation for the lockdown.
     */
    description?: pulumi.Input<string>;
    /**
     * Boolean of whether this zone lockdown is currently paused. Defaults to `false`.
     */
    paused?: pulumi.Input<boolean>;
    priority?: pulumi.Input<number>;
    /**
     * A list of simple wildcard patterns to match requests against. The order of the urls is unimportant.
     */
    urls: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId: pulumi.Input<string>;
}
