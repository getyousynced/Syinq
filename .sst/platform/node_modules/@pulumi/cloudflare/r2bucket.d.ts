import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.R2Bucket("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "terraform-bucket",
 *     location: "enam",
 * });
 * ```
 *
 * > Available location values can be found in the [R2 documentation](https://developers.cloudflare.com/r2/reference/data-location/#available-hints).
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/r2Bucket:R2Bucket default <account id>/<bucket name>
 * ```
 */
export declare class R2Bucket extends pulumi.CustomResource {
    /**
     * Get an existing R2Bucket resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: R2BucketState, opts?: pulumi.CustomResourceOptions): R2Bucket;
    /**
     * Returns true if the given object is an instance of R2Bucket.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is R2Bucket;
    /**
     * The account identifier to target for the resource.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The location hint of the R2 bucket. Available values: `WNAM`, `ENAM`, `WEUR`, `EEUR`, `APAC`
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the R2 bucket.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a R2Bucket resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: R2BucketArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering R2Bucket resources.
 */
export interface R2BucketState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The location hint of the R2 bucket. Available values: `WNAM`, `ENAM`, `WEUR`, `EEUR`, `APAC`
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the R2 bucket.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a R2Bucket resource.
 */
export interface R2BucketArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * The location hint of the R2 bucket. Available values: `WNAM`, `ENAM`, `WEUR`, `EEUR`, `APAC`
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the R2 bucket.
     */
    name: pulumi.Input<string>;
}
