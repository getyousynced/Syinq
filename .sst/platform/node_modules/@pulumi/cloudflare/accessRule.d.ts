import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides a Cloudflare IP Firewall Access Rule resource. Access
 * control can be applied on basis of IP addresses, IP ranges, AS
 * numbers or countries.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * // Challenge requests coming from known Tor exit nodes.
 * const torExitNodes = new cloudflare.AccessRule("tor_exit_nodes", {
 *     zoneId: "0da42c8d2132a9ddaf714f9e7c920711",
 *     notes: "Requests coming from known Tor exit nodes",
 *     mode: "challenge",
 *     configuration: {
 *         target: "country",
 *         value: "T1",
 *     },
 * });
 * // Allowlist requests coming from Antarctica, but only for single zone.
 * const antarctica = new cloudflare.AccessRule("antarctica", {
 *     zoneId: "0da42c8d2132a9ddaf714f9e7c920711",
 *     notes: "Requests coming from Antarctica",
 *     mode: "whitelist",
 *     configuration: {
 *         target: "country",
 *         value: "AQ",
 *     },
 * });
 * const config = new pulumi.Config();
 * const myOffice = config.getObject<Array<string>>("myOffice") || [
 *     "192.0.2.0/24",
 *     "198.51.100.0/24",
 *     "2001:db8::/56",
 * ];
 * const officeNetwork: cloudflare.AccessRule[] = [];
 * for (const range = {value: 0}; range.value < myOffice.length; range.value++) {
 *     officeNetwork.push(new cloudflare.AccessRule(`office_network-${range.value}`, {
 *         accountId: "f037e56e89293a057740de681ac9abbe",
 *         notes: "Requests coming from office network",
 *         mode: "whitelist",
 *         configuration: {
 *             target: "ip_range",
 *             value: myOffice[range.value],
 *         },
 *     }));
 * }
 * ```
 *
 * ## Import
 *
 * User level access rule import.
 *
 * ```sh
 * $ pulumi import cloudflare:index/accessRule:AccessRule default user/<user_id>/<rule_id>
 * ```
 *
 * Zone level access rule import.
 *
 * ```sh
 * $ pulumi import cloudflare:index/accessRule:AccessRule default zone/<zone_id>/<rule_id>
 * ```
 *
 * Account level access rule import.
 *
 * ```sh
 * $ pulumi import cloudflare:index/accessRule:AccessRule default account/<account_id>/<rule_id>
 * ```
 */
export declare class AccessRule extends pulumi.CustomResource {
    /**
     * Get an existing AccessRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessRuleState, opts?: pulumi.CustomResourceOptions): AccessRule;
    /**
     * Returns true if the given object is an instance of AccessRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccessRule;
    /**
     * The account identifier to target for the resource. Must provide only one of `accountId`, `zoneId`. **Modifying this attribute will force creation of a new resource.**
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Rule configuration to apply to a matched request. **Modifying this attribute will force creation of a new resource.**
     */
    readonly configuration: pulumi.Output<outputs.AccessRuleConfiguration>;
    /**
     * The action to apply to a matched request. Available values: `block`, `challenge`, `whitelist`, `jsChallenge`, `managedChallenge`.
     */
    readonly mode: pulumi.Output<string>;
    /**
     * A personal note about the rule. Typically used as a reminder or explanation for the rule.
     */
    readonly notes: pulumi.Output<string | undefined>;
    /**
     * The zone identifier to target for the resource. Must provide only one of `accountId`, `zoneId`. **Modifying this attribute will force creation of a new resource.**
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a AccessRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AccessRule resources.
 */
export interface AccessRuleState {
    /**
     * The account identifier to target for the resource. Must provide only one of `accountId`, `zoneId`. **Modifying this attribute will force creation of a new resource.**
     */
    accountId?: pulumi.Input<string>;
    /**
     * Rule configuration to apply to a matched request. **Modifying this attribute will force creation of a new resource.**
     */
    configuration?: pulumi.Input<inputs.AccessRuleConfiguration>;
    /**
     * The action to apply to a matched request. Available values: `block`, `challenge`, `whitelist`, `jsChallenge`, `managedChallenge`.
     */
    mode?: pulumi.Input<string>;
    /**
     * A personal note about the rule. Typically used as a reminder or explanation for the rule.
     */
    notes?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Must provide only one of `accountId`, `zoneId`. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AccessRule resource.
 */
export interface AccessRuleArgs {
    /**
     * The account identifier to target for the resource. Must provide only one of `accountId`, `zoneId`. **Modifying this attribute will force creation of a new resource.**
     */
    accountId?: pulumi.Input<string>;
    /**
     * Rule configuration to apply to a matched request. **Modifying this attribute will force creation of a new resource.**
     */
    configuration: pulumi.Input<inputs.AccessRuleConfiguration>;
    /**
     * The action to apply to a matched request. Available values: `block`, `challenge`, `whitelist`, `jsChallenge`, `managedChallenge`.
     */
    mode: pulumi.Input<string>;
    /**
     * A personal note about the rule. Typically used as a reminder or explanation for the rule.
     */
    notes?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Must provide only one of `accountId`, `zoneId`. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId?: pulumi.Input<string>;
}
