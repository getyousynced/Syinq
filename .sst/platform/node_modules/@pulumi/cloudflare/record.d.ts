import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides a Cloudflare record resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * // Add a record to the domain
 * const example = new cloudflare.Record("example", {
 *     zoneId: cloudflareZoneId,
 *     name: "terraform",
 *     content: "192.0.2.1",
 *     type: "A",
 *     ttl: 3600,
 * });
 * // Add a record requiring a data map
 * const _sipTls = new cloudflare.Record("_sip_tls", {
 *     zoneId: cloudflareZoneId,
 *     name: "_sip._tls",
 *     type: "SRV",
 *     data: {
 *         service: "_sip",
 *         proto: "_tls",
 *         name: "terraform-srv",
 *         priority: 0,
 *         weight: 0,
 *         port: 443,
 *         target: "example.com",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/record:Record example <zone_id>/<record_id>
 * ```
 */
export declare class Record extends pulumi.CustomResource {
    /**
     * Get an existing Record resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RecordState, opts?: pulumi.CustomResourceOptions): Record;
    /**
     * Returns true if the given object is an instance of Record.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Record;
    readonly allowOverwrite: pulumi.Output<boolean | undefined>;
    /**
     * Comments or notes about the DNS record. This field has no effect on DNS responses.
     */
    readonly comment: pulumi.Output<string | undefined>;
    /**
     * The content of the record. Must provide only one of `data`, `content`, `value`.
     */
    readonly content: pulumi.Output<string>;
    /**
     * The RFC3339 timestamp of when the record was created.
     */
    readonly createdOn: pulumi.Output<string>;
    /**
     * Map of attributes that constitute the record value. Must provide only one of `data`, `content`, `value`.
     */
    readonly data: pulumi.Output<outputs.RecordData | undefined>;
    /**
     * The FQDN of the record.
     */
    readonly hostname: pulumi.Output<string>;
    /**
     * A key-value map of string metadata Cloudflare associates with the record.
     */
    readonly metadata: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The RFC3339 timestamp of when the record was last modified.
     */
    readonly modifiedOn: pulumi.Output<string>;
    /**
     * The name of the record. **Modifying this attribute will force creation of a new resource.**
     */
    readonly name: pulumi.Output<string>;
    /**
     * The priority of the record.
     */
    readonly priority: pulumi.Output<number | undefined>;
    /**
     * Shows whether this record can be proxied.
     */
    readonly proxiable: pulumi.Output<boolean>;
    /**
     * Whether the record gets Cloudflare's origin protection.
     */
    readonly proxied: pulumi.Output<boolean | undefined>;
    /**
     * Custom tags for the DNS record.
     */
    readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * The TTL of the record.
     */
    readonly ttl: pulumi.Output<number>;
    /**
     * The type of the record. Available values: `A`, `AAAA`, `CAA`, `CNAME`, `TXT`, `SRV`, `LOC`, `MX`, `NS`, `SPF`, `CERT`, `DNSKEY`, `DS`, `NAPTR`, `SMIMEA`, `SSHFP`, `TLSA`, `URI`, `PTR`, `HTTPS`, `SVCB`. **Modifying this attribute will force creation of a new resource.**
     */
    readonly type: pulumi.Output<string>;
    /**
     * The value of the record. Must provide only one of `data`, `content`, `value`.
     *
     * @deprecated `value` is deprecated in favour of `content` and will be removed in the next major release.
     */
    readonly value: pulumi.Output<string>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a Record resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RecordArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Record resources.
 */
export interface RecordState {
    allowOverwrite?: pulumi.Input<boolean>;
    /**
     * Comments or notes about the DNS record. This field has no effect on DNS responses.
     */
    comment?: pulumi.Input<string>;
    /**
     * The content of the record. Must provide only one of `data`, `content`, `value`.
     */
    content?: pulumi.Input<string>;
    /**
     * The RFC3339 timestamp of when the record was created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * Map of attributes that constitute the record value. Must provide only one of `data`, `content`, `value`.
     */
    data?: pulumi.Input<inputs.RecordData>;
    /**
     * The FQDN of the record.
     */
    hostname?: pulumi.Input<string>;
    /**
     * A key-value map of string metadata Cloudflare associates with the record.
     */
    metadata?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The RFC3339 timestamp of when the record was last modified.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * The name of the record. **Modifying this attribute will force creation of a new resource.**
     */
    name?: pulumi.Input<string>;
    /**
     * The priority of the record.
     */
    priority?: pulumi.Input<number>;
    /**
     * Shows whether this record can be proxied.
     */
    proxiable?: pulumi.Input<boolean>;
    /**
     * Whether the record gets Cloudflare's origin protection.
     */
    proxied?: pulumi.Input<boolean>;
    /**
     * Custom tags for the DNS record.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The TTL of the record.
     */
    ttl?: pulumi.Input<number>;
    /**
     * The type of the record. Available values: `A`, `AAAA`, `CAA`, `CNAME`, `TXT`, `SRV`, `LOC`, `MX`, `NS`, `SPF`, `CERT`, `DNSKEY`, `DS`, `NAPTR`, `SMIMEA`, `SSHFP`, `TLSA`, `URI`, `PTR`, `HTTPS`, `SVCB`. **Modifying this attribute will force creation of a new resource.**
     */
    type?: pulumi.Input<string>;
    /**
     * The value of the record. Must provide only one of `data`, `content`, `value`.
     *
     * @deprecated `value` is deprecated in favour of `content` and will be removed in the next major release.
     */
    value?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Record resource.
 */
export interface RecordArgs {
    allowOverwrite?: pulumi.Input<boolean>;
    /**
     * Comments or notes about the DNS record. This field has no effect on DNS responses.
     */
    comment?: pulumi.Input<string>;
    /**
     * The content of the record. Must provide only one of `data`, `content`, `value`.
     */
    content?: pulumi.Input<string>;
    /**
     * Map of attributes that constitute the record value. Must provide only one of `data`, `content`, `value`.
     */
    data?: pulumi.Input<inputs.RecordData>;
    /**
     * The name of the record. **Modifying this attribute will force creation of a new resource.**
     */
    name: pulumi.Input<string>;
    /**
     * The priority of the record.
     */
    priority?: pulumi.Input<number>;
    /**
     * Whether the record gets Cloudflare's origin protection.
     */
    proxied?: pulumi.Input<boolean>;
    /**
     * Custom tags for the DNS record.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The TTL of the record.
     */
    ttl?: pulumi.Input<number>;
    /**
     * The type of the record. Available values: `A`, `AAAA`, `CAA`, `CNAME`, `TXT`, `SRV`, `LOC`, `MX`, `NS`, `SPF`, `CERT`, `DNSKEY`, `DS`, `NAPTR`, `SMIMEA`, `SSHFP`, `TLSA`, `URI`, `PTR`, `HTTPS`, `SVCB`. **Modifying this attribute will force creation of a new resource.**
     */
    type: pulumi.Input<string>;
    /**
     * The value of the record. Must provide only one of `data`, `content`, `value`.
     *
     * @deprecated `value` is deprecated in favour of `content` and will be removed in the next major release.
     */
    value?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId: pulumi.Input<string>;
}
