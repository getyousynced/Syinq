"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.OriginCaCertificate = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides a Cloudflare Origin CA certificate used to protect traffic to your origin without involving a third party Certificate Authority.
 *
 * > Since v3.32.0
 *    all authentication schemes are supported for managing Origin CA certificates.
 *    Versions prior to v3.32.0 will still need to use `apiUserServiceKey`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 * import * as tls from "@pulumi/tls";
 *
 * const example = new tls.index.PrivateKey("example", {algorithm: "RSA"});
 * const exampleCertRequest = new tls.index.CertRequest("example", {
 *     privateKeyPem: example.privateKeyPem,
 *     subject: [{
 *         commonName: "",
 *         organization: "Terraform Test",
 *     }],
 * });
 * const exampleOriginCaCertificate = new cloudflare.OriginCaCertificate("example", {
 *     csr: exampleCertRequest.certRequestPem,
 *     hostnames: ["example.com"],
 *     requestType: "origin-rsa",
 *     requestedValidity: 7,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/originCaCertificate:OriginCaCertificate example <certificate_id>
 * ```
 */
class OriginCaCertificate extends pulumi.CustomResource {
    /**
     * Get an existing OriginCaCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new OriginCaCertificate(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of OriginCaCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OriginCaCertificate.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["certificate"] = state ? state.certificate : undefined;
            resourceInputs["csr"] = state ? state.csr : undefined;
            resourceInputs["expiresOn"] = state ? state.expiresOn : undefined;
            resourceInputs["hostnames"] = state ? state.hostnames : undefined;
            resourceInputs["minDaysForRenewal"] = state ? state.minDaysForRenewal : undefined;
            resourceInputs["requestType"] = state ? state.requestType : undefined;
            resourceInputs["requestedValidity"] = state ? state.requestedValidity : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.csr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'csr'");
            }
            if ((!args || args.hostnames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostnames'");
            }
            if ((!args || args.requestType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'requestType'");
            }
            resourceInputs["csr"] = args ? args.csr : undefined;
            resourceInputs["hostnames"] = args ? args.hostnames : undefined;
            resourceInputs["minDaysForRenewal"] = args ? args.minDaysForRenewal : undefined;
            resourceInputs["requestType"] = args ? args.requestType : undefined;
            resourceInputs["requestedValidity"] = args ? args.requestedValidity : undefined;
            resourceInputs["certificate"] = undefined /*out*/;
            resourceInputs["expiresOn"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OriginCaCertificate.__pulumiType, name, resourceInputs, opts);
    }
}
exports.OriginCaCertificate = OriginCaCertificate;
/** @internal */
OriginCaCertificate.__pulumiType = 'cloudflare:index/originCaCertificate:OriginCaCertificate';
//# sourceMappingURL=originCaCertificate.js.map