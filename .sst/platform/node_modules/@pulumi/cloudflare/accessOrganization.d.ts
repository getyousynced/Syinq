import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * A Zero Trust organization defines the user login experience.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.AccessOrganization("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "example.cloudflareaccess.com",
 *     authDomain: "example.cloudflareaccess.com",
 *     isUiReadOnly: false,
 *     userSeatExpirationInactiveTime: "720h",
 *     autoRedirectToIdentity: false,
 *     loginDesigns: [{
 *         backgroundColor: "#ffffff",
 *         textColor: "#000000",
 *         logoPath: "https://example.com/logo.png",
 *         headerText: "My header text",
 *         footerText: "My footer text",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/accessOrganization:AccessOrganization example <account_id>
 * ```
 */
export declare class AccessOrganization extends pulumi.CustomResource {
    /**
     * Get an existing AccessOrganization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessOrganizationState, opts?: pulumi.CustomResourceOptions): AccessOrganization;
    /**
     * Returns true if the given object is an instance of AccessOrganization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccessOrganization;
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
     */
    readonly allowAuthenticateViaWarp: pulumi.Output<boolean | undefined>;
    /**
     * The unique subdomain assigned to your Zero Trust organization.
     */
    readonly authDomain: pulumi.Output<string>;
    /**
     * When set to true, users skip the identity provider selection step during login.
     */
    readonly autoRedirectToIdentity: pulumi.Output<boolean | undefined>;
    /**
     * Custom pages for your Zero Trust organization.
     */
    readonly customPages: pulumi.Output<outputs.AccessOrganizationCustomPage[] | undefined>;
    /**
     * When set to true, this will disable all editing of Access resources via the Zero Trust Dashboard.
     */
    readonly isUiReadOnly: pulumi.Output<boolean | undefined>;
    readonly loginDesigns: pulumi.Output<outputs.AccessOrganizationLoginDesign[] | undefined>;
    /**
     * The name of your Zero Trust organization.
     */
    readonly name: pulumi.Output<string>;
    /**
     * How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`.
     */
    readonly sessionDuration: pulumi.Output<string | undefined>;
    /**
     * A description of the reason why the UI read only field is being toggled.
     */
    readonly uiReadOnlyToggleReason: pulumi.Output<string | undefined>;
    /**
     * The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count. Must be in the format `300ms` or `2h45m`.
     */
    readonly userSeatExpirationInactiveTime: pulumi.Output<string | undefined>;
    /**
     * The amount of time that tokens issued for applications will be valid. Must be in the format 30m or 2h45m. Valid time units are: m, h.
     */
    readonly warpAuthSessionDuration: pulumi.Output<string | undefined>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a AccessOrganization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessOrganizationArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AccessOrganization resources.
 */
export interface AccessOrganizationState {
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
     */
    allowAuthenticateViaWarp?: pulumi.Input<boolean>;
    /**
     * The unique subdomain assigned to your Zero Trust organization.
     */
    authDomain?: pulumi.Input<string>;
    /**
     * When set to true, users skip the identity provider selection step during login.
     */
    autoRedirectToIdentity?: pulumi.Input<boolean>;
    /**
     * Custom pages for your Zero Trust organization.
     */
    customPages?: pulumi.Input<pulumi.Input<inputs.AccessOrganizationCustomPage>[]>;
    /**
     * When set to true, this will disable all editing of Access resources via the Zero Trust Dashboard.
     */
    isUiReadOnly?: pulumi.Input<boolean>;
    loginDesigns?: pulumi.Input<pulumi.Input<inputs.AccessOrganizationLoginDesign>[]>;
    /**
     * The name of your Zero Trust organization.
     */
    name?: pulumi.Input<string>;
    /**
     * How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`.
     */
    sessionDuration?: pulumi.Input<string>;
    /**
     * A description of the reason why the UI read only field is being toggled.
     */
    uiReadOnlyToggleReason?: pulumi.Input<string>;
    /**
     * The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count. Must be in the format `300ms` or `2h45m`.
     */
    userSeatExpirationInactiveTime?: pulumi.Input<string>;
    /**
     * The amount of time that tokens issued for applications will be valid. Must be in the format 30m or 2h45m. Valid time units are: m, h.
     */
    warpAuthSessionDuration?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AccessOrganization resource.
 */
export interface AccessOrganizationArgs {
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * When set to true, users can authenticate via WARP for any application in your organization. Application settings will take precedence over this value.
     */
    allowAuthenticateViaWarp?: pulumi.Input<boolean>;
    /**
     * The unique subdomain assigned to your Zero Trust organization.
     */
    authDomain: pulumi.Input<string>;
    /**
     * When set to true, users skip the identity provider selection step during login.
     */
    autoRedirectToIdentity?: pulumi.Input<boolean>;
    /**
     * Custom pages for your Zero Trust organization.
     */
    customPages?: pulumi.Input<pulumi.Input<inputs.AccessOrganizationCustomPage>[]>;
    /**
     * When set to true, this will disable all editing of Access resources via the Zero Trust Dashboard.
     */
    isUiReadOnly?: pulumi.Input<boolean>;
    loginDesigns?: pulumi.Input<pulumi.Input<inputs.AccessOrganizationLoginDesign>[]>;
    /**
     * The name of your Zero Trust organization.
     */
    name: pulumi.Input<string>;
    /**
     * How often a user will be forced to re-authorise. Must be in the format `48h` or `2h45m`.
     */
    sessionDuration?: pulumi.Input<string>;
    /**
     * A description of the reason why the UI read only field is being toggled.
     */
    uiReadOnlyToggleReason?: pulumi.Input<string>;
    /**
     * The amount of time a user seat is inactive before it expires. When the user seat exceeds the set time of inactivity, the user is removed as an active seat and no longer counts against your Teams seat count. Must be in the format `300ms` or `2h45m`.
     */
    userSeatExpirationInactiveTime?: pulumi.Input<string>;
    /**
     * The amount of time that tokens issued for applications will be valid. Must be in the format 30m or 2h45m. Valid time units are: m, h.
     */
    warpAuthSessionDuration?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    zoneId?: pulumi.Input<string>;
}
