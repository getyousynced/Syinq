import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides a Cloudflare Teams rule resource. Teams rules comprise secure web gateway policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.TeamsRule("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "office",
 *     description: "desc",
 *     precedence: 1,
 *     action: "block",
 *     filters: ["http"],
 *     traffic: "http.request.uri == \"https://www.example.com/malicious\"",
 *     ruleSettings: {
 *         blockPageEnabled: true,
 *         blockPageReason: "access not permitted",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/teamsRule:TeamsRule example <account_id>/<teams_rule_id>
 * ```
 */
export declare class TeamsRule extends pulumi.CustomResource {
    /**
     * Get an existing TeamsRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TeamsRuleState, opts?: pulumi.CustomResourceOptions): TeamsRule;
    /**
     * Returns true if the given object is an instance of TeamsRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is TeamsRule;
    /**
     * The account identifier to target for the resource.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The action executed by matched teams rule. Available values: `allow`, `block`, `safesearch`, `ytrestricted`, `on`, `off`, `scan`, `noscan`, `isolate`, `noisolate`, `override`, `l4Override`, `egress`, `auditSsh`, `resolve`.
     */
    readonly action: pulumi.Output<string>;
    /**
     * The description of the teams rule.
     */
    readonly description: pulumi.Output<string>;
    /**
     * The wirefilter expression to be used for devicePosture check matching.
     */
    readonly devicePosture: pulumi.Output<string | undefined>;
    /**
     * Indicator of rule enablement.
     */
    readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * The protocol or layer to evaluate the traffic and identity expressions.
     */
    readonly filters: pulumi.Output<string[] | undefined>;
    /**
     * The wirefilter expression to be used for identity matching.
     */
    readonly identity: pulumi.Output<string | undefined>;
    /**
     * The name of the teams rule.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The evaluation precedence of the teams rule.
     */
    readonly precedence: pulumi.Output<number>;
    /**
     * Additional rule settings.
     */
    readonly ruleSettings: pulumi.Output<outputs.TeamsRuleRuleSettings | undefined>;
    /**
     * The wirefilter expression to be used for traffic matching.
     */
    readonly traffic: pulumi.Output<string | undefined>;
    readonly version: pulumi.Output<number>;
    /**
     * Create a TeamsRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TeamsRuleArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering TeamsRule resources.
 */
export interface TeamsRuleState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The action executed by matched teams rule. Available values: `allow`, `block`, `safesearch`, `ytrestricted`, `on`, `off`, `scan`, `noscan`, `isolate`, `noisolate`, `override`, `l4Override`, `egress`, `auditSsh`, `resolve`.
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the teams rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The wirefilter expression to be used for devicePosture check matching.
     */
    devicePosture?: pulumi.Input<string>;
    /**
     * Indicator of rule enablement.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The protocol or layer to evaluate the traffic and identity expressions.
     */
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The wirefilter expression to be used for identity matching.
     */
    identity?: pulumi.Input<string>;
    /**
     * The name of the teams rule.
     */
    name?: pulumi.Input<string>;
    /**
     * The evaluation precedence of the teams rule.
     */
    precedence?: pulumi.Input<number>;
    /**
     * Additional rule settings.
     */
    ruleSettings?: pulumi.Input<inputs.TeamsRuleRuleSettings>;
    /**
     * The wirefilter expression to be used for traffic matching.
     */
    traffic?: pulumi.Input<string>;
    version?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a TeamsRule resource.
 */
export interface TeamsRuleArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * The action executed by matched teams rule. Available values: `allow`, `block`, `safesearch`, `ytrestricted`, `on`, `off`, `scan`, `noscan`, `isolate`, `noisolate`, `override`, `l4Override`, `egress`, `auditSsh`, `resolve`.
     */
    action: pulumi.Input<string>;
    /**
     * The description of the teams rule.
     */
    description: pulumi.Input<string>;
    /**
     * The wirefilter expression to be used for devicePosture check matching.
     */
    devicePosture?: pulumi.Input<string>;
    /**
     * Indicator of rule enablement.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The protocol or layer to evaluate the traffic and identity expressions.
     */
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The wirefilter expression to be used for identity matching.
     */
    identity?: pulumi.Input<string>;
    /**
     * The name of the teams rule.
     */
    name: pulumi.Input<string>;
    /**
     * The evaluation precedence of the teams rule.
     */
    precedence: pulumi.Input<number>;
    /**
     * Additional rule settings.
     */
    ruleSettings?: pulumi.Input<inputs.TeamsRuleRuleSettings>;
    /**
     * The wirefilter expression to be used for traffic matching.
     */
    traffic?: pulumi.Input<string>;
}
