"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.MagicFirewallRuleset = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Magic Firewall is a network-level firewall to protect networks that are onboarded to Cloudflare's Magic Transit. This resource
 * creates a root ruleset on the account level and contains one or more rules. Rules can be crafted in Wireshark syntax and
 * are evaluated in order, with the first rule having the highest priority.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.MagicFirewallRuleset("example", {
 *     accountId: "d41d8cd98f00b204e9800998ecf8427e",
 *     name: "Magic Transit Ruleset",
 *     description: "Global mitigations",
 *     rules: [
 *         {
 *             action: "allow",
 *             expression: "tcp.dstport in { 32768..65535 }",
 *             description: "Allow TCP Ephemeral Ports",
 *             enabled: "true",
 *         },
 *         {
 *             action: "block",
 *             expression: "ip.len >= 0",
 *             description: "Block all",
 *             enabled: "true",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * An existing Magic Firewall Ruleset can be imported using the account ID and ruleset ID
 *
 * ```sh
 * $ pulumi import cloudflare:index/magicFirewallRuleset:MagicFirewallRuleset example d41d8cd98f00b204e9800998ecf8427e/cb029e245cfdd66dc8d2e570d5dd3322
 * ```
 */
class MagicFirewallRuleset extends pulumi.CustomResource {
    /**
     * Get an existing MagicFirewallRuleset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new MagicFirewallRuleset(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of MagicFirewallRuleset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MagicFirewallRuleset.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MagicFirewallRuleset.__pulumiType, name, resourceInputs, opts);
    }
}
exports.MagicFirewallRuleset = MagicFirewallRuleset;
/** @internal */
MagicFirewallRuleset.__pulumiType = 'cloudflare:index/magicFirewallRuleset:MagicFirewallRuleset';
//# sourceMappingURL=magicFirewallRuleset.js.map