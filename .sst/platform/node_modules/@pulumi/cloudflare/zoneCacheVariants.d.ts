import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a resource which customizes Cloudflare zone cache variants.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.ZoneCacheVariants("example", {
 *     zoneId: "0da42c8d2132a9ddaf714f9e7c920711",
 *     avifs: [
 *         "image/avif",
 *         "image/webp",
 *     ],
 *     bmps: [
 *         "image/bmp",
 *         "image/webp",
 *     ],
 *     gifs: [
 *         "image/gif",
 *         "image/webp",
 *     ],
 *     jpegs: [
 *         "image/jpeg",
 *         "image/webp",
 *     ],
 *     jpgs: [
 *         "image/jpg",
 *         "image/webp",
 *     ],
 *     jpg2s: [
 *         "image/jpg2",
 *         "image/webp",
 *     ],
 *     jp2s: [
 *         "image/jp2",
 *         "image/webp",
 *     ],
 *     pngs: [
 *         "image/png",
 *         "image/webp",
 *     ],
 *     tiffs: [
 *         "image/tiff",
 *         "image/webp",
 *     ],
 *     tifs: [
 *         "image/tif",
 *         "image/webp",
 *     ],
 *     webps: [
 *         "image/jpeg",
 *         "image/webp",
 *     ],
 * });
 * ```
 */
export declare class ZoneCacheVariants extends pulumi.CustomResource {
    /**
     * Get an existing ZoneCacheVariants resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneCacheVariantsState, opts?: pulumi.CustomResourceOptions): ZoneCacheVariants;
    /**
     * Returns true if the given object is an instance of ZoneCacheVariants.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZoneCacheVariants;
    /**
     * List of strings with the MIME types of all the variants that should be served for avif.
     */
    readonly avifs: pulumi.Output<string[] | undefined>;
    /**
     * List of strings with the MIME types of all the variants that should be served for bmp.
     */
    readonly bmps: pulumi.Output<string[] | undefined>;
    /**
     * List of strings with the MIME types of all the variants that should be served for gif.
     */
    readonly gifs: pulumi.Output<string[] | undefined>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jp2.
     */
    readonly jp2s: pulumi.Output<string[] | undefined>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jpeg.
     */
    readonly jpegs: pulumi.Output<string[] | undefined>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jpg2.
     */
    readonly jpg2s: pulumi.Output<string[] | undefined>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jpg.
     */
    readonly jpgs: pulumi.Output<string[] | undefined>;
    /**
     * List of strings with the MIME types of all the variants that should be served for png.
     */
    readonly pngs: pulumi.Output<string[] | undefined>;
    /**
     * List of strings with the MIME types of all the variants that should be served for tiff.
     */
    readonly tiffs: pulumi.Output<string[] | undefined>;
    /**
     * List of strings with the MIME types of all the variants that should be served for tif.
     */
    readonly tifs: pulumi.Output<string[] | undefined>;
    /**
     * List of strings with the MIME types of all the variants that should be served for webp.
     */
    readonly webps: pulumi.Output<string[] | undefined>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a ZoneCacheVariants resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneCacheVariantsArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZoneCacheVariants resources.
 */
export interface ZoneCacheVariantsState {
    /**
     * List of strings with the MIME types of all the variants that should be served for avif.
     */
    avifs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for bmp.
     */
    bmps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for gif.
     */
    gifs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jp2.
     */
    jp2s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jpeg.
     */
    jpegs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jpg2.
     */
    jpg2s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jpg.
     */
    jpgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for png.
     */
    pngs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for tiff.
     */
    tiffs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for tif.
     */
    tifs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for webp.
     */
    webps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZoneCacheVariants resource.
 */
export interface ZoneCacheVariantsArgs {
    /**
     * List of strings with the MIME types of all the variants that should be served for avif.
     */
    avifs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for bmp.
     */
    bmps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for gif.
     */
    gifs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jp2.
     */
    jp2s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jpeg.
     */
    jpegs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jpg2.
     */
    jpg2s?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for jpg.
     */
    jpgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for png.
     */
    pngs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for tiff.
     */
    tiffs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for tif.
     */
    tifs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of strings with the MIME types of all the variants that should be served for webp.
     */
    webps?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId: pulumi.Input<string>;
}
