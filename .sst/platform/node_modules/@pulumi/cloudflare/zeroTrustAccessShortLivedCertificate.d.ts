import * as pulumi from "@pulumi/pulumi";
/**
 * Cloudflare Access can replace traditional SSH key models with
 * short-lived certificates issued to your users based on the token
 * generated by their Access login.
 *
 * > It's required that an `accountId` or `zoneId` is provided and in
 *    most cases using either is fine. However, if you're using a scoped
 *    access token, you must provide the argument that matches the token's
 *    scope. For example, an access token that is scoped to the "example.com"
 *    zone needs to use the `zoneId` argument.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * // account level
 * const example = new cloudflare.ZeroTrustAccessShortLivedCertificate("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     applicationId: "6cd6cea3-3ef2-4542-9aea-85a0bbcd5414",
 * });
 * // zone level
 * const anotherExample = new cloudflare.ZeroTrustAccessShortLivedCertificate("another_example", {
 *     zoneId: "0da42c8d2132a9ddaf714f9e7c920711",
 *     applicationId: "fe2be0ff-7f13-4350-8c8e-a9b9795fe3c2",
 * });
 * ```
 *
 * ## Import
 *
 * Account level CA certificate import.
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustAccessShortLivedCertificate:ZeroTrustAccessShortLivedCertificate example account/<account_id>/<application_id>
 * ```
 *
 * Zone level CA certificate import.
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustAccessShortLivedCertificate:ZeroTrustAccessShortLivedCertificate example account/<zone_id>/<application_id>
 * ```
 */
export declare class ZeroTrustAccessShortLivedCertificate extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustAccessShortLivedCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustAccessShortLivedCertificateState, opts?: pulumi.CustomResourceOptions): ZeroTrustAccessShortLivedCertificate;
    /**
     * Returns true if the given object is an instance of ZeroTrustAccessShortLivedCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZeroTrustAccessShortLivedCertificate;
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The Access Application ID to associate with the CA certificate.
     */
    readonly applicationId: pulumi.Output<string>;
    /**
     * Application Audience (AUD) Tag of the CA certificate.
     */
    readonly aud: pulumi.Output<string>;
    /**
     * Cryptographic public key of the generated CA certificate.
     */
    readonly publicKey: pulumi.Output<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a ZeroTrustAccessShortLivedCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustAccessShortLivedCertificateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZeroTrustAccessShortLivedCertificate resources.
 */
export interface ZeroTrustAccessShortLivedCertificateState {
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The Access Application ID to associate with the CA certificate.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Application Audience (AUD) Tag of the CA certificate.
     */
    aud?: pulumi.Input<string>;
    /**
     * Cryptographic public key of the generated CA certificate.
     */
    publicKey?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZeroTrustAccessShortLivedCertificate resource.
 */
export interface ZeroTrustAccessShortLivedCertificateArgs {
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The Access Application ID to associate with the CA certificate.
     */
    applicationId: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    zoneId?: pulumi.Input<string>;
}
