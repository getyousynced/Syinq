import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides a resource which customizes Cloudflare zone settings.
 *
 * > You **should not** use this resource to manage every zone setting. This
 *   resource is only intended to override those which you do not want the default.
 *   Attempting to manage all settings will result in problems with the resource
 *   applying in a consistent manner.
 *
 * ## Plan-Dependent Settings
 *
 * Note that some settings are only available on certain plans. Setting an argument
 * for a feature that is not available on the plan configured for the zone will
 * result in an error:
 *
 * This is true even when setting the argument to its default value. These values
 * should either be omitted or set to `null` for zones with plans that don't
 * support the feature. See the [plan feature matrices](https://www.cloudflare.com/plans/) for details on
 * feature support by plan.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const test = new cloudflare.ZoneSettingsOverride("test", {
 *     zoneId: "0da42c8d2132a9ddaf714f9e7c920711",
 *     settings: {
 *         brotli: "on",
 *         challengeTtl: 2700,
 *         securityLevel: "high",
 *         opportunisticEncryption: "on",
 *         automaticHttpsRewrites: "on",
 *         mirage: "on",
 *         waf: "on",
 *         minify: {
 *             css: "on",
 *             js: "off",
 *             html: "off",
 *         },
 *         securityHeader: {
 *             enabled: true,
 *         },
 *     },
 * });
 * ```
 */
export declare class ZoneSettingsOverride extends pulumi.CustomResource {
    /**
     * Get an existing ZoneSettingsOverride resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneSettingsOverrideState, opts?: pulumi.CustomResourceOptions): ZoneSettingsOverride;
    /**
     * Returns true if the given object is an instance of ZoneSettingsOverride.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZoneSettingsOverride;
    readonly initialSettings: pulumi.Output<outputs.ZoneSettingsOverrideInitialSetting[]>;
    readonly initialSettingsReadAt: pulumi.Output<string>;
    readonly readonlySettings: pulumi.Output<string[]>;
    readonly settings: pulumi.Output<outputs.ZoneSettingsOverrideSettings>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    readonly zoneId: pulumi.Output<string>;
    readonly zoneStatus: pulumi.Output<string>;
    readonly zoneType: pulumi.Output<string>;
    /**
     * Create a ZoneSettingsOverride resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneSettingsOverrideArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZoneSettingsOverride resources.
 */
export interface ZoneSettingsOverrideState {
    initialSettings?: pulumi.Input<pulumi.Input<inputs.ZoneSettingsOverrideInitialSetting>[]>;
    initialSettingsReadAt?: pulumi.Input<string>;
    readonlySettings?: pulumi.Input<pulumi.Input<string>[]>;
    settings?: pulumi.Input<inputs.ZoneSettingsOverrideSettings>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId?: pulumi.Input<string>;
    zoneStatus?: pulumi.Input<string>;
    zoneType?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZoneSettingsOverride resource.
 */
export interface ZoneSettingsOverrideArgs {
    settings?: pulumi.Input<inputs.ZoneSettingsOverrideSettings>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId: pulumi.Input<string>;
}
