import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Cloudflare Worker secret resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const mySecret = new cloudflare.WorkersSecret("my_secret", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "MY_EXAMPLE_SECRET_TEXT",
 *     scriptName: "script_1",
 *     secretText: "my_secret_value",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/workersSecret:WorkersSecret example <account_id>/<script_name>/<secret_name>
 * ```
 */
export declare class WorkersSecret extends pulumi.CustomResource {
    /**
     * Get an existing WorkersSecret resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkersSecretState, opts?: pulumi.CustomResourceOptions): WorkersSecret;
    /**
     * Returns true if the given object is an instance of WorkersSecret.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WorkersSecret;
    /**
     * The account identifier to target for the resource.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The name of the Worker secret. **Modifying this attribute will force creation of a new resource.**
     */
    readonly name: pulumi.Output<string>;
    /**
     * The name of the Worker script to associate the secret with. **Modifying this attribute will force creation of a new resource.**
     */
    readonly scriptName: pulumi.Output<string>;
    /**
     * The text of the Worker secret. **Modifying this attribute will force creation of a new resource.**
     */
    readonly secretText: pulumi.Output<string>;
    /**
     * Create a WorkersSecret resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkersSecretArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering WorkersSecret resources.
 */
export interface WorkersSecretState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The name of the Worker secret. **Modifying this attribute will force creation of a new resource.**
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Worker script to associate the secret with. **Modifying this attribute will force creation of a new resource.**
     */
    scriptName?: pulumi.Input<string>;
    /**
     * The text of the Worker secret. **Modifying this attribute will force creation of a new resource.**
     */
    secretText?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a WorkersSecret resource.
 */
export interface WorkersSecretArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * The name of the Worker secret. **Modifying this attribute will force creation of a new resource.**
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Worker script to associate the secret with. **Modifying this attribute will force creation of a new resource.**
     */
    scriptName: pulumi.Input<string>;
    /**
     * The text of the Worker secret. **Modifying this attribute will force creation of a new resource.**
     */
    secretText: pulumi.Input<string>;
}
