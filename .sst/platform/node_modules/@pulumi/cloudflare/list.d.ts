import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * ## Example Usage
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/list:List example <account_id>/<list_id>
 * ```
 */
export declare class List extends pulumi.CustomResource {
    /**
     * Get an existing List resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ListState, opts?: pulumi.CustomResourceOptions): List;
    /**
     * Returns true if the given object is an instance of List.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is List;
    /**
     * The account identifier to target for the resource.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * An optional description of the list.
     */
    readonly description: pulumi.Output<string | undefined>;
    readonly items: pulumi.Output<outputs.ListItem[] | undefined>;
    /**
     * The type of items the list will contain. Available values: `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
     */
    readonly kind: pulumi.Output<string>;
    /**
     * The name of the list. **Modifying this attribute will force creation of a new resource.**
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a List resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ListArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering List resources.
 */
export interface ListState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * An optional description of the list.
     */
    description?: pulumi.Input<string>;
    items?: pulumi.Input<pulumi.Input<inputs.ListItem>[]>;
    /**
     * The type of items the list will contain. Available values: `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
     */
    kind?: pulumi.Input<string>;
    /**
     * The name of the list. **Modifying this attribute will force creation of a new resource.**
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a List resource.
 */
export interface ListArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * An optional description of the list.
     */
    description?: pulumi.Input<string>;
    items?: pulumi.Input<pulumi.Input<inputs.ListItem>[]>;
    /**
     * The type of items the list will contain. Available values: `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
     */
    kind: pulumi.Input<string>;
    /**
     * The name of the list. **Modifying this attribute will force creation of a new resource.**
     */
    name: pulumi.Input<string>;
}
