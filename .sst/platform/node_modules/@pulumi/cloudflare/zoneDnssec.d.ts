import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Cloudflare resource to create and modify zone DNSSEC settings.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.Zone("example", {zone: "example.com"});
 * const exampleZoneDnssec = new cloudflare.ZoneDnssec("example", {zoneId: example.id});
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/zoneDnssec:ZoneDnssec example <zone_id>
 * ```
 */
export declare class ZoneDnssec extends pulumi.CustomResource {
    /**
     * Get an existing ZoneDnssec resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneDnssecState, opts?: pulumi.CustomResourceOptions): ZoneDnssec;
    /**
     * Returns true if the given object is an instance of ZoneDnssec.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZoneDnssec;
    /**
     * Zone DNSSEC algorithm.
     */
    readonly algorithm: pulumi.Output<string>;
    /**
     * Zone DNSSEC digest.
     */
    readonly digest: pulumi.Output<string>;
    /**
     * Digest algorithm use for Zone DNSSEC.
     */
    readonly digestAlgorithm: pulumi.Output<string>;
    /**
     * Digest Type for Zone DNSSEC.
     */
    readonly digestType: pulumi.Output<string>;
    /**
     * DS for the Zone DNSSEC.
     */
    readonly ds: pulumi.Output<string>;
    /**
     * Zone DNSSEC flags.
     */
    readonly flags: pulumi.Output<number>;
    /**
     * Key Tag for the Zone DNSSEC.
     */
    readonly keyTag: pulumi.Output<number>;
    /**
     * Key type used for Zone DNSSEC.
     */
    readonly keyType: pulumi.Output<string>;
    /**
     * Zone DNSSEC updated time.
     */
    readonly modifiedOn: pulumi.Output<string>;
    /**
     * Public Key for the Zone DNSSEC.
     */
    readonly publicKey: pulumi.Output<string>;
    /**
     * The status of the Zone DNSSEC.
     */
    readonly status: pulumi.Output<string>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a ZoneDnssec resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneDnssecArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZoneDnssec resources.
 */
export interface ZoneDnssecState {
    /**
     * Zone DNSSEC algorithm.
     */
    algorithm?: pulumi.Input<string>;
    /**
     * Zone DNSSEC digest.
     */
    digest?: pulumi.Input<string>;
    /**
     * Digest algorithm use for Zone DNSSEC.
     */
    digestAlgorithm?: pulumi.Input<string>;
    /**
     * Digest Type for Zone DNSSEC.
     */
    digestType?: pulumi.Input<string>;
    /**
     * DS for the Zone DNSSEC.
     */
    ds?: pulumi.Input<string>;
    /**
     * Zone DNSSEC flags.
     */
    flags?: pulumi.Input<number>;
    /**
     * Key Tag for the Zone DNSSEC.
     */
    keyTag?: pulumi.Input<number>;
    /**
     * Key type used for Zone DNSSEC.
     */
    keyType?: pulumi.Input<string>;
    /**
     * Zone DNSSEC updated time.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * Public Key for the Zone DNSSEC.
     */
    publicKey?: pulumi.Input<string>;
    /**
     * The status of the Zone DNSSEC.
     */
    status?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZoneDnssec resource.
 */
export interface ZoneDnssecArgs {
    /**
     * Zone DNSSEC updated time.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    zoneId: pulumi.Input<string>;
}
