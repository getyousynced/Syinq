import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a resource, that manages Cloudflare static routes for Magic
 * Transit or Magic WAN. Static routes are used to route traffic
 * through GRE tunnels.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.StaticRoute("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     description: "New route for new prefix 192.0.2.0/24",
 *     prefix: "192.0.2.0/24",
 *     nexthop: "10.0.0.0",
 *     priority: 100,
 *     weight: 10,
 *     coloNames: ["den01"],
 *     coloRegions: ["APAC"],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/staticRoute:StaticRoute example <account_id>/<static_route_id>
 * ```
 */
export declare class StaticRoute extends pulumi.CustomResource {
    /**
     * Get an existing StaticRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StaticRouteState, opts?: pulumi.CustomResourceOptions): StaticRoute;
    /**
     * Returns true if the given object is an instance of StaticRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is StaticRoute;
    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    readonly accountId: pulumi.Output<string | undefined>;
    /**
     * List of Cloudflare colocation regions for this static route.
     */
    readonly coloNames: pulumi.Output<string[] | undefined>;
    /**
     * List of Cloudflare colocation names for this static route.
     */
    readonly coloRegions: pulumi.Output<string[] | undefined>;
    /**
     * Description of the static route.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * The nexthop IP address where traffic will be routed to.
     */
    readonly nexthop: pulumi.Output<string>;
    /**
     * Your network prefix using CIDR notation.
     */
    readonly prefix: pulumi.Output<string>;
    /**
     * The priority for the static route.
     */
    readonly priority: pulumi.Output<number>;
    /**
     * The optional weight for ECMP routes. **Modifying this attribute will force creation of a new resource.**
     */
    readonly weight: pulumi.Output<number | undefined>;
    /**
     * Create a StaticRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StaticRouteArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering StaticRoute resources.
 */
export interface StaticRouteState {
    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    accountId?: pulumi.Input<string>;
    /**
     * List of Cloudflare colocation regions for this static route.
     */
    coloNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Cloudflare colocation names for this static route.
     */
    coloRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the static route.
     */
    description?: pulumi.Input<string>;
    /**
     * The nexthop IP address where traffic will be routed to.
     */
    nexthop?: pulumi.Input<string>;
    /**
     * Your network prefix using CIDR notation.
     */
    prefix?: pulumi.Input<string>;
    /**
     * The priority for the static route.
     */
    priority?: pulumi.Input<number>;
    /**
     * The optional weight for ECMP routes. **Modifying this attribute will force creation of a new resource.**
     */
    weight?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a StaticRoute resource.
 */
export interface StaticRouteArgs {
    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    accountId?: pulumi.Input<string>;
    /**
     * List of Cloudflare colocation regions for this static route.
     */
    coloNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * List of Cloudflare colocation names for this static route.
     */
    coloRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of the static route.
     */
    description?: pulumi.Input<string>;
    /**
     * The nexthop IP address where traffic will be routed to.
     */
    nexthop: pulumi.Input<string>;
    /**
     * Your network prefix using CIDR notation.
     */
    prefix: pulumi.Input<string>;
    /**
     * The priority for the static route.
     */
    priority: pulumi.Input<number>;
    /**
     * The optional weight for ECMP routes. **Modifying this attribute will force creation of a new resource.**
     */
    weight?: pulumi.Input<number>;
}
