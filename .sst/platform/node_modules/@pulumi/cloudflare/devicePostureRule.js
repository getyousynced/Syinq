"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DevicePostureRule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides a Cloudflare Device Posture Rule resource. Device posture rules configure security policies for device posture checks.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const eaxmple = new cloudflare.DevicePostureRule("eaxmple", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "Corporate devices posture rule",
 *     type: "os_version",
 *     description: "Device posture rule for corporate devices.",
 *     schedule: "24h",
 *     expiration: "24h",
 *     matches: [{
 *         platform: "linux",
 *     }],
 *     inputs: [{
 *         id: corporateDevices.id,
 *         version: "1.0.0",
 *         operator: "<",
 *         osDistroName: "ubuntu",
 *         osDistroRevision: "1.0.0",
 *         osVersionExtra: "(a)",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/devicePostureRule:DevicePostureRule example <account_id>/<device_posture_rule_id>
 * ```
 */
class DevicePostureRule extends pulumi.CustomResource {
    /**
     * Get an existing DevicePostureRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DevicePostureRule(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DevicePostureRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DevicePostureRule.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["expiration"] = state ? state.expiration : undefined;
            resourceInputs["inputs"] = state ? state.inputs : undefined;
            resourceInputs["matches"] = state ? state.matches : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["schedule"] = state ? state.schedule : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["expiration"] = args ? args.expiration : undefined;
            resourceInputs["inputs"] = args ? args.inputs : undefined;
            resourceInputs["matches"] = args ? args.matches : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["schedule"] = args ? args.schedule : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DevicePostureRule.__pulumiType, name, resourceInputs, opts);
    }
}
exports.DevicePostureRule = DevicePostureRule;
/** @internal */
DevicePostureRule.__pulumiType = 'cloudflare:index/devicePostureRule:DevicePostureRule';
//# sourceMappingURL=devicePostureRule.js.map