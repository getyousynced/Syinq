"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkersScript = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides a Cloudflare worker script resource. In order for a script to be active, you'll also need to setup a `cloudflare.WorkerRoute`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 * import * as std from "@pulumi/std";
 *
 * const myNamespace = new cloudflare.WorkersKvNamespace("my_namespace", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     title: "example",
 * });
 * // Sets the script with the name "script_1"
 * const myScript = new cloudflare.WorkersScript("my_script", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "script_1",
 *     content: std.file({
 *         input: "script.js",
 *     }).then(invoke => invoke.result),
 *     kvNamespaceBindings: [{
 *         name: "MY_EXAMPLE_KV_NAMESPACE",
 *         namespaceId: myNamespace.id,
 *     }],
 *     plainTextBindings: [{
 *         name: "MY_EXAMPLE_PLAIN_TEXT",
 *         text: "foobar",
 *     }],
 *     secretTextBindings: [{
 *         name: "MY_EXAMPLE_SECRET_TEXT",
 *         text: secretFooValue,
 *     }],
 *     webassemblyBindings: [{
 *         name: "MY_EXAMPLE_WASM",
 *         module: std.filebase64({
 *             input: "example.wasm",
 *         }).then(invoke => invoke.result),
 *     }],
 *     serviceBindings: [{
 *         name: "MY_SERVICE_BINDING",
 *         service: "MY_SERVICE",
 *         environment: "production",
 *     }],
 *     r2BucketBindings: [{
 *         name: "MY_BUCKET",
 *         bucketName: "MY_BUCKET_NAME",
 *     }],
 *     analyticsEngineBindings: [{
 *         name: "MY_DATASET",
 *         dataset: "dataset1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/workersScript:WorkersScript example <account_id>/<script_name>
 * ```
 */
class WorkersScript extends pulumi.CustomResource {
    /**
     * Get an existing WorkersScript resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WorkersScript(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WorkersScript.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkersScript.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["analyticsEngineBindings"] = state ? state.analyticsEngineBindings : undefined;
            resourceInputs["compatibilityDate"] = state ? state.compatibilityDate : undefined;
            resourceInputs["compatibilityFlags"] = state ? state.compatibilityFlags : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["d1DatabaseBindings"] = state ? state.d1DatabaseBindings : undefined;
            resourceInputs["dispatchNamespace"] = state ? state.dispatchNamespace : undefined;
            resourceInputs["kvNamespaceBindings"] = state ? state.kvNamespaceBindings : undefined;
            resourceInputs["logpush"] = state ? state.logpush : undefined;
            resourceInputs["module"] = state ? state.module : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["placements"] = state ? state.placements : undefined;
            resourceInputs["plainTextBindings"] = state ? state.plainTextBindings : undefined;
            resourceInputs["queueBindings"] = state ? state.queueBindings : undefined;
            resourceInputs["r2BucketBindings"] = state ? state.r2BucketBindings : undefined;
            resourceInputs["secretTextBindings"] = state ? state.secretTextBindings : undefined;
            resourceInputs["serviceBindings"] = state ? state.serviceBindings : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["webassemblyBindings"] = state ? state.webassemblyBindings : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["analyticsEngineBindings"] = args ? args.analyticsEngineBindings : undefined;
            resourceInputs["compatibilityDate"] = args ? args.compatibilityDate : undefined;
            resourceInputs["compatibilityFlags"] = args ? args.compatibilityFlags : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["d1DatabaseBindings"] = args ? args.d1DatabaseBindings : undefined;
            resourceInputs["dispatchNamespace"] = args ? args.dispatchNamespace : undefined;
            resourceInputs["kvNamespaceBindings"] = args ? args.kvNamespaceBindings : undefined;
            resourceInputs["logpush"] = args ? args.logpush : undefined;
            resourceInputs["module"] = args ? args.module : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["placements"] = args ? args.placements : undefined;
            resourceInputs["plainTextBindings"] = args ? args.plainTextBindings : undefined;
            resourceInputs["queueBindings"] = args ? args.queueBindings : undefined;
            resourceInputs["r2BucketBindings"] = args ? args.r2BucketBindings : undefined;
            resourceInputs["secretTextBindings"] = args ? args.secretTextBindings : undefined;
            resourceInputs["serviceBindings"] = args ? args.serviceBindings : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["webassemblyBindings"] = args ? args.webassemblyBindings : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkersScript.__pulumiType, name, resourceInputs, opts);
    }
}
exports.WorkersScript = WorkersScript;
/** @internal */
WorkersScript.__pulumiType = 'cloudflare:index/workersScript:WorkersScript';
//# sourceMappingURL=workersScript.js.map