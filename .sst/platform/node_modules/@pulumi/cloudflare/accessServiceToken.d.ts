import * as pulumi from "@pulumi/pulumi";
/**
 * Access Service Tokens are used for service-to-service communication
 * when an application is behind Cloudflare Access.
 *
 * ## Import
 *
 * If you are importing an Access Service Token you will not have the
 *
 * client_secret available in the state for use. The client_secret is only
 *
 * available once, at creation. In most cases, it is better to just create a new
 *
 * resource should you need to reference it in other resources.
 *
 * ```sh
 * $ pulumi import cloudflare:index/accessServiceToken:AccessServiceToken example <account_id>/<service_token_id>
 * ```
 */
export declare class AccessServiceToken extends pulumi.CustomResource {
    /**
     * Get an existing AccessServiceToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccessServiceTokenState, opts?: pulumi.CustomResourceOptions): AccessServiceToken;
    /**
     * Returns true if the given object is an instance of AccessServiceToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AccessServiceToken;
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    readonly accountId: pulumi.Output<string | undefined>;
    /**
     * Client ID associated with the Service Token. **Modifying this attribute will force creation of a new resource.**
     */
    readonly clientId: pulumi.Output<string>;
    /**
     * A secret for interacting with Access protocols. **Modifying this attribute will force creation of a new resource.**
     */
    readonly clientSecret: pulumi.Output<string>;
    /**
     * Length of time the service token is valid for. Available values: `8760h`, `17520h`, `43800h`, `87600h`, `forever`.
     */
    readonly duration: pulumi.Output<string>;
    /**
     * Date when the token expires.
     */
    readonly expiresAt: pulumi.Output<string>;
    readonly minDaysForRenewal: pulumi.Output<number | undefined>;
    /**
     * Friendly name of the token's intent.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    readonly zoneId: pulumi.Output<string | undefined>;
    /**
     * Create a AccessServiceToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccessServiceTokenArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AccessServiceToken resources.
 */
export interface AccessServiceTokenState {
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Client ID associated with the Service Token. **Modifying this attribute will force creation of a new resource.**
     */
    clientId?: pulumi.Input<string>;
    /**
     * A secret for interacting with Access protocols. **Modifying this attribute will force creation of a new resource.**
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Length of time the service token is valid for. Available values: `8760h`, `17520h`, `43800h`, `87600h`, `forever`.
     */
    duration?: pulumi.Input<string>;
    /**
     * Date when the token expires.
     */
    expiresAt?: pulumi.Input<string>;
    minDaysForRenewal?: pulumi.Input<number>;
    /**
     * Friendly name of the token's intent.
     */
    name?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AccessServiceToken resource.
 */
export interface AccessServiceTokenArgs {
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Length of time the service token is valid for. Available values: `8760h`, `17520h`, `43800h`, `87600h`, `forever`.
     */
    duration?: pulumi.Input<string>;
    minDaysForRenewal?: pulumi.Input<number>;
    /**
     * Friendly name of the token's intent.
     */
    name: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    zoneId?: pulumi.Input<string>;
}
