import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * The [Hyperdrive Config](https://developers.cloudflare.com/hyperdrive/) resource allows you to manage Cloudflare Hyperdrive Configs.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const noDefaults = new cloudflare.HyperdriveConfig("no_defaults", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "my-hyperdrive-config",
 *     origin: {
 *         database: "postgres",
 *         password: "my-password",
 *         host: "my-database.example.com",
 *         port: 5432,
 *         scheme: "postgres",
 *         user: "my-user",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/hyperdriveConfig:HyperdriveConfig example <account_id>/<hyperdrive_config_id>
 * ```
 */
export declare class HyperdriveConfig extends pulumi.CustomResource {
    /**
     * Get an existing HyperdriveConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HyperdriveConfigState, opts?: pulumi.CustomResourceOptions): HyperdriveConfig;
    /**
     * Returns true if the given object is an instance of HyperdriveConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is HyperdriveConfig;
    /**
     * The account identifier to target for the resource.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The caching details for the Hyperdrive configuration.
     */
    readonly caching: pulumi.Output<outputs.HyperdriveConfigCaching>;
    /**
     * The name of the Hyperdrive configuration.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The origin details for the Hyperdrive configuration.
     */
    readonly origin: pulumi.Output<outputs.HyperdriveConfigOrigin>;
    /**
     * Create a HyperdriveConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HyperdriveConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering HyperdriveConfig resources.
 */
export interface HyperdriveConfigState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The caching details for the Hyperdrive configuration.
     */
    caching?: pulumi.Input<inputs.HyperdriveConfigCaching>;
    /**
     * The name of the Hyperdrive configuration.
     */
    name?: pulumi.Input<string>;
    /**
     * The origin details for the Hyperdrive configuration.
     */
    origin?: pulumi.Input<inputs.HyperdriveConfigOrigin>;
}
/**
 * The set of arguments for constructing a HyperdriveConfig resource.
 */
export interface HyperdriveConfigArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * The caching details for the Hyperdrive configuration.
     */
    caching?: pulumi.Input<inputs.HyperdriveConfigCaching>;
    /**
     * The name of the Hyperdrive configuration.
     */
    name: pulumi.Input<string>;
    /**
     * The origin details for the Hyperdrive configuration.
     */
    origin: pulumi.Input<inputs.HyperdriveConfigOrigin>;
}
