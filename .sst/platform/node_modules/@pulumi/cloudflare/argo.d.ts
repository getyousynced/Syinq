import * as pulumi from "@pulumi/pulumi";
/**
 * Cloudflare Argo controls the routing to your origin and tiered
 * caching options to speed up your website browsing experience.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.Argo("example", {
 *     zoneId: "0da42c8d2132a9ddaf714f9e7c920711",
 *     tieredCaching: "on",
 *     smartRouting: "on",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/argo:Argo example <zone_id>
 * ```
 */
export declare class Argo extends pulumi.CustomResource {
    /**
     * Get an existing Argo resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ArgoState, opts?: pulumi.CustomResourceOptions): Argo;
    /**
     * Returns true if the given object is an instance of Argo.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Argo;
    /**
     * Whether smart routing is enabled. Available values: `on`, `off`.
     */
    readonly smartRouting: pulumi.Output<string | undefined>;
    /**
     * Whether tiered caching is enabled. Available values: `on`, `off`.
     *
     * @deprecated tiered_caching has been deprecated in favour of using `cloudflare.TieredCache` resource instead.
     */
    readonly tieredCaching: pulumi.Output<string | undefined>;
    /**
     * The zone identifier to target for the resource.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a Argo resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ArgoArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Argo resources.
 */
export interface ArgoState {
    /**
     * Whether smart routing is enabled. Available values: `on`, `off`.
     */
    smartRouting?: pulumi.Input<string>;
    /**
     * Whether tiered caching is enabled. Available values: `on`, `off`.
     *
     * @deprecated tiered_caching has been deprecated in favour of using `cloudflare.TieredCache` resource instead.
     */
    tieredCaching?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Argo resource.
 */
export interface ArgoArgs {
    /**
     * Whether smart routing is enabled. Available values: `on`, `off`.
     */
    smartRouting?: pulumi.Input<string>;
    /**
     * Whether tiered caching is enabled. Available values: `on`, `off`.
     *
     * @deprecated tiered_caching has been deprecated in favour of using `cloudflare.TieredCache` resource instead.
     */
    tieredCaching?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource.
     */
    zoneId: pulumi.Input<string>;
}
