import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides a Cloudflare Device Dex Test resource. Device Dex Tests allow for building location-aware device settings policies.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.DeviceDexTest("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "GET homepage",
 *     description: "Send a HTTP GET request to the home endpoint every half hour.",
 *     interval: "0h30m0s",
 *     enabled: true,
 *     data: {
 *         host: "https://example.com/home",
 *         kind: "http",
 *         method: "GET",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/deviceDexTest:DeviceDexTest example <account_id>/<device_dex_test_id>
 * ```
 */
export declare class DeviceDexTest extends pulumi.CustomResource {
    /**
     * Get an existing DeviceDexTest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeviceDexTestState, opts?: pulumi.CustomResourceOptions): DeviceDexTest;
    /**
     * Returns true if the given object is an instance of DeviceDexTest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is DeviceDexTest;
    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Timestamp of when the Dex Test was created.
     */
    readonly created: pulumi.Output<string>;
    /**
     * The configuration object which contains the details for the WARP client to conduct the test.
     */
    readonly data: pulumi.Output<outputs.DeviceDexTestData>;
    /**
     * Additional details about the test.
     */
    readonly description: pulumi.Output<string>;
    /**
     * Determines whether or not the test is active.
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * How often the test will run.
     */
    readonly interval: pulumi.Output<string>;
    /**
     * The name of the Device Dex Test. Must be unique.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Timestamp of when the Dex Test was last updated.
     */
    readonly updated: pulumi.Output<string>;
    /**
     * Create a DeviceDexTest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeviceDexTestArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering DeviceDexTest resources.
 */
export interface DeviceDexTestState {
    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    accountId?: pulumi.Input<string>;
    /**
     * Timestamp of when the Dex Test was created.
     */
    created?: pulumi.Input<string>;
    /**
     * The configuration object which contains the details for the WARP client to conduct the test.
     */
    data?: pulumi.Input<inputs.DeviceDexTestData>;
    /**
     * Additional details about the test.
     */
    description?: pulumi.Input<string>;
    /**
     * Determines whether or not the test is active.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * How often the test will run.
     */
    interval?: pulumi.Input<string>;
    /**
     * The name of the Device Dex Test. Must be unique.
     */
    name?: pulumi.Input<string>;
    /**
     * Timestamp of when the Dex Test was last updated.
     */
    updated?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a DeviceDexTest resource.
 */
export interface DeviceDexTestArgs {
    /**
     * The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
     */
    accountId: pulumi.Input<string>;
    /**
     * The configuration object which contains the details for the WARP client to conduct the test.
     */
    data: pulumi.Input<inputs.DeviceDexTestData>;
    /**
     * Additional details about the test.
     */
    description: pulumi.Input<string>;
    /**
     * Determines whether or not the test is active.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * How often the test will run.
     */
    interval: pulumi.Input<string>;
    /**
     * The name of the Device Dex Test. Must be unique.
     */
    name: pulumi.Input<string>;
}
