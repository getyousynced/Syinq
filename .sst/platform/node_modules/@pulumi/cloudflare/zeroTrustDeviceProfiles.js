"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZeroTrustDeviceProfiles = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides a Cloudflare Device Settings Policy resource. Device policies configure settings applied to WARP devices.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const developerWarpPolicy = new cloudflare.ZeroTrustDeviceProfiles("developer_warp_policy", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "Developers WARP settings policy",
 *     description: "Developers WARP settings policy description",
 *     precedence: 10,
 *     match: "any(identity.groups.name[*] in {\"Developers\"})",
 *     "default": false,
 *     enabled: true,
 *     allowModeSwitch: true,
 *     allowUpdates: true,
 *     allowedToLeave: true,
 *     autoConnect: 0,
 *     captivePortal: 5,
 *     disableAutoFallback: true,
 *     supportUrl: "https://cloudflare.com",
 *     switchLocked: true,
 *     serviceModeV2Mode: "warp",
 *     serviceModeV2Port: 3000,
 *     excludeOfficeIps: false,
 * });
 * ```
 *
 * ## Import
 *
 * For default device settings policies you must use "default" as the policy ID.
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustDeviceProfiles:ZeroTrustDeviceProfiles example <account_id>/<device_policy_id>
 * ```
 */
class ZeroTrustDeviceProfiles extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustDeviceProfiles resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ZeroTrustDeviceProfiles(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ZeroTrustDeviceProfiles.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZeroTrustDeviceProfiles.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["allowModeSwitch"] = state ? state.allowModeSwitch : undefined;
            resourceInputs["allowUpdates"] = state ? state.allowUpdates : undefined;
            resourceInputs["allowedToLeave"] = state ? state.allowedToLeave : undefined;
            resourceInputs["autoConnect"] = state ? state.autoConnect : undefined;
            resourceInputs["captivePortal"] = state ? state.captivePortal : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disableAutoFallback"] = state ? state.disableAutoFallback : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["excludeOfficeIps"] = state ? state.excludeOfficeIps : undefined;
            resourceInputs["match"] = state ? state.match : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["precedence"] = state ? state.precedence : undefined;
            resourceInputs["serviceModeV2Mode"] = state ? state.serviceModeV2Mode : undefined;
            resourceInputs["serviceModeV2Port"] = state ? state.serviceModeV2Port : undefined;
            resourceInputs["supportUrl"] = state ? state.supportUrl : undefined;
            resourceInputs["switchLocked"] = state ? state.switchLocked : undefined;
            resourceInputs["tunnelProtocol"] = state ? state.tunnelProtocol : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["allowModeSwitch"] = args ? args.allowModeSwitch : undefined;
            resourceInputs["allowUpdates"] = args ? args.allowUpdates : undefined;
            resourceInputs["allowedToLeave"] = args ? args.allowedToLeave : undefined;
            resourceInputs["autoConnect"] = args ? args.autoConnect : undefined;
            resourceInputs["captivePortal"] = args ? args.captivePortal : undefined;
            resourceInputs["default"] = args ? args.default : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disableAutoFallback"] = args ? args.disableAutoFallback : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["excludeOfficeIps"] = args ? args.excludeOfficeIps : undefined;
            resourceInputs["match"] = args ? args.match : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["precedence"] = args ? args.precedence : undefined;
            resourceInputs["serviceModeV2Mode"] = args ? args.serviceModeV2Mode : undefined;
            resourceInputs["serviceModeV2Port"] = args ? args.serviceModeV2Port : undefined;
            resourceInputs["supportUrl"] = args ? args.supportUrl : undefined;
            resourceInputs["switchLocked"] = args ? args.switchLocked : undefined;
            resourceInputs["tunnelProtocol"] = args ? args.tunnelProtocol : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZeroTrustDeviceProfiles.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ZeroTrustDeviceProfiles = ZeroTrustDeviceProfiles;
/** @internal */
ZeroTrustDeviceProfiles.__pulumiType = 'cloudflare:index/zeroTrustDeviceProfiles:ZeroTrustDeviceProfiles';
//# sourceMappingURL=zeroTrustDeviceProfiles.js.map