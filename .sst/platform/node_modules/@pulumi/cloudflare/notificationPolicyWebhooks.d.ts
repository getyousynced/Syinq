import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a resource, that manages a webhook destination. These destinations can be tied to the notification policies created for Cloudflare's products.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.NotificationPolicyWebhooks("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "Webhooks destination",
 *     url: "https://example.com",
 *     secret: "my-secret",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/notificationPolicyWebhooks:NotificationPolicyWebhooks example <account_id>/<notification_webhook_id>
 * ```
 */
export declare class NotificationPolicyWebhooks extends pulumi.CustomResource {
    /**
     * Get an existing NotificationPolicyWebhooks resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NotificationPolicyWebhooksState, opts?: pulumi.CustomResourceOptions): NotificationPolicyWebhooks;
    /**
     * Returns true if the given object is an instance of NotificationPolicyWebhooks.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is NotificationPolicyWebhooks;
    /**
     * The account identifier to target for the resource.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * Timestamp of when the notification webhook was created.
     */
    readonly createdAt: pulumi.Output<string>;
    /**
     * Timestamp of when the notification webhook last failed.
     */
    readonly lastFailure: pulumi.Output<string>;
    /**
     * Timestamp of when the notification webhook was last successful.
     */
    readonly lastSuccess: pulumi.Output<string>;
    /**
     * The name of the webhook destination.
     */
    readonly name: pulumi.Output<string>;
    /**
     * An optional secret can be provided that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. Secrets are not returned in any API response body. Refer to the [documentation](https://api.cloudflare.com/#notification-webhooks-create-webhook) for more details.
     */
    readonly secret: pulumi.Output<string | undefined>;
    readonly type: pulumi.Output<string>;
    /**
     * The URL of the webhook destinations. **Modifying this attribute will force creation of a new resource.**
     */
    readonly url: pulumi.Output<string | undefined>;
    /**
     * Create a NotificationPolicyWebhooks resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NotificationPolicyWebhooksArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering NotificationPolicyWebhooks resources.
 */
export interface NotificationPolicyWebhooksState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * Timestamp of when the notification webhook was created.
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Timestamp of when the notification webhook last failed.
     */
    lastFailure?: pulumi.Input<string>;
    /**
     * Timestamp of when the notification webhook was last successful.
     */
    lastSuccess?: pulumi.Input<string>;
    /**
     * The name of the webhook destination.
     */
    name?: pulumi.Input<string>;
    /**
     * An optional secret can be provided that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. Secrets are not returned in any API response body. Refer to the [documentation](https://api.cloudflare.com/#notification-webhooks-create-webhook) for more details.
     */
    secret?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    /**
     * The URL of the webhook destinations. **Modifying this attribute will force creation of a new resource.**
     */
    url?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a NotificationPolicyWebhooks resource.
 */
export interface NotificationPolicyWebhooksArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * The name of the webhook destination.
     */
    name: pulumi.Input<string>;
    /**
     * An optional secret can be provided that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. Secrets are not returned in any API response body. Refer to the [documentation](https://api.cloudflare.com/#notification-webhooks-create-webhook) for more details.
     */
    secret?: pulumi.Input<string>;
    /**
     * The URL of the webhook destinations. **Modifying this attribute will force creation of a new resource.**
     */
    url?: pulumi.Input<string>;
}
