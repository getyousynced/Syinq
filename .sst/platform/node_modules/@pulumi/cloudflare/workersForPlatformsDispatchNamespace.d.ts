import * as pulumi from "@pulumi/pulumi";
/**
 * The [Workers for Platforms](https://developers.cloudflare.com/cloudflare-for-platforms/workers-for-platforms/) resource allows you
 * to manage Cloudflare Workers for Platforms dispatch namespaces.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 * import * as std from "@pulumi/std";
 *
 * const example = new cloudflare.WorkersForPlatformsDispatchNamespace("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "example-namespace",
 * });
 * const customerWorker1 = new cloudflare.WorkersScript("customer_worker_1", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     name: "customer-worker-1",
 *     content: std.file({
 *         input: "script.js",
 *     }).then(invoke => invoke.result),
 *     dispatchNamespace: example.name,
 *     tags: ["free"],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/workersForPlatformsDispatchNamespace:WorkersForPlatformsDispatchNamespace example <account_id>/<namespace_name>
 * ```
 */
export declare class WorkersForPlatformsDispatchNamespace extends pulumi.CustomResource {
    /**
     * Get an existing WorkersForPlatformsDispatchNamespace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkersForPlatformsDispatchNamespaceState, opts?: pulumi.CustomResourceOptions): WorkersForPlatformsDispatchNamespace;
    /**
     * Returns true if the given object is an instance of WorkersForPlatformsDispatchNamespace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is WorkersForPlatformsDispatchNamespace;
    /**
     * The account identifier to target for the resource.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The name of the Workers for Platforms namespace.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a WorkersForPlatformsDispatchNamespace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkersForPlatformsDispatchNamespaceArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering WorkersForPlatformsDispatchNamespace resources.
 */
export interface WorkersForPlatformsDispatchNamespaceState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The name of the Workers for Platforms namespace.
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a WorkersForPlatformsDispatchNamespace resource.
 */
export interface WorkersForPlatformsDispatchNamespaceArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * The name of the Workers for Platforms namespace.
     */
    name: pulumi.Input<string>;
}
