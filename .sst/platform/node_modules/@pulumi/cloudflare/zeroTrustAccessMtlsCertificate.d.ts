import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Cloudflare Access Mutual TLS Certificate resource.
 * Mutual TLS authentication ensures that the traffic is secure and
 * trusted in both directions between a client and server and can be
 *  used with Access to only allows requests from devices with a
 *  corresponding client certificate.
 *
 * > It's required that an `accountId` or `zoneId` is provided and in
 *    most cases using either is fine. However, if you're using a scoped
 *    access token, you must provide the argument that matches the token's
 *    scope. For example, an access token that is scoped to the "example.com"
 *    zone needs to use the `zoneId` argument.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const myCert = new cloudflare.ZeroTrustAccessMtlsCertificate("my_cert", {
 *     zoneId: "0da42c8d2132a9ddaf714f9e7c920711",
 *     name: "My Root Cert",
 *     certificate: caPem,
 *     associatedHostnames: ["staging.example.com"],
 * });
 * ```
 *
 * ## Import
 *
 * Account level import.
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustAccessMtlsCertificate:ZeroTrustAccessMtlsCertificate cloudflare_zero_sd -t_access_mtls_certificate.example account/<account_id>/<mutual_tls_certificate_id>
 * ```
 *
 * Zone level import.
 *
 * ```sh
 * $ pulumi import cloudflare:index/zeroTrustAccessMtlsCertificate:ZeroTrustAccessMtlsCertificate cloudflare_zero_sd -t_access_mtls_certificate.example zone/<zone_id>/<mutual_tls_certificate_id>
 * ```
 */
export declare class ZeroTrustAccessMtlsCertificate extends pulumi.CustomResource {
    /**
     * Get an existing ZeroTrustAccessMtlsCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZeroTrustAccessMtlsCertificateState, opts?: pulumi.CustomResourceOptions): ZeroTrustAccessMtlsCertificate;
    /**
     * Returns true if the given object is an instance of ZeroTrustAccessMtlsCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ZeroTrustAccessMtlsCertificate;
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * The hostnames that will be prompted for this certificate.
     */
    readonly associatedHostnames: pulumi.Output<string[] | undefined>;
    /**
     * The Root CA for your certificates.
     */
    readonly certificate: pulumi.Output<string | undefined>;
    readonly fingerprint: pulumi.Output<string>;
    /**
     * The name of the certificate.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    readonly zoneId: pulumi.Output<string>;
    /**
     * Create a ZeroTrustAccessMtlsCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZeroTrustAccessMtlsCertificateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ZeroTrustAccessMtlsCertificate resources.
 */
export interface ZeroTrustAccessMtlsCertificateState {
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The hostnames that will be prompted for this certificate.
     */
    associatedHostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Root CA for your certificates.
     */
    certificate?: pulumi.Input<string>;
    fingerprint?: pulumi.Input<string>;
    /**
     * The name of the certificate.
     */
    name?: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    zoneId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ZeroTrustAccessMtlsCertificate resource.
 */
export interface ZeroTrustAccessMtlsCertificateArgs {
    /**
     * The account identifier to target for the resource. Conflicts with `zoneId`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The hostnames that will be prompted for this certificate.
     */
    associatedHostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Root CA for your certificates.
     */
    certificate?: pulumi.Input<string>;
    /**
     * The name of the certificate.
     */
    name: pulumi.Input<string>;
    /**
     * The zone identifier to target for the resource. Conflicts with `accountId`.
     */
    zoneId?: pulumi.Input<string>;
}
