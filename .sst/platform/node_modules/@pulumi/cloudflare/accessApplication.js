"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessApplication = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Provides a Cloudflare Access Application resource. Access
 * Applications are used to restrict access to a whole application using an
 * authorisation gateway managed by Cloudflare.
 *
 * > It's required that an `accountId` or `zoneId` is provided and in
 *    most cases using either is fine. However, if you're using a scoped
 *    access token, you must provide the argument that matches the token's
 *    scope. For example, an access token that is scoped to the "example.com"
 *    zone needs to use the `zoneId` argument.
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/accessApplication:AccessApplication example <account_id>/<application_id>
 * ```
 */
class AccessApplication extends pulumi.CustomResource {
    /**
     * Get an existing AccessApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new AccessApplication(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of AccessApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccessApplication.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["allowAuthenticateViaWarp"] = state ? state.allowAuthenticateViaWarp : undefined;
            resourceInputs["allowedIdps"] = state ? state.allowedIdps : undefined;
            resourceInputs["appLauncherLogoUrl"] = state ? state.appLauncherLogoUrl : undefined;
            resourceInputs["appLauncherVisible"] = state ? state.appLauncherVisible : undefined;
            resourceInputs["aud"] = state ? state.aud : undefined;
            resourceInputs["autoRedirectToIdentity"] = state ? state.autoRedirectToIdentity : undefined;
            resourceInputs["bgColor"] = state ? state.bgColor : undefined;
            resourceInputs["corsHeaders"] = state ? state.corsHeaders : undefined;
            resourceInputs["customDenyMessage"] = state ? state.customDenyMessage : undefined;
            resourceInputs["customDenyUrl"] = state ? state.customDenyUrl : undefined;
            resourceInputs["customNonIdentityDenyUrl"] = state ? state.customNonIdentityDenyUrl : undefined;
            resourceInputs["customPages"] = state ? state.customPages : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["enableBindingCookie"] = state ? state.enableBindingCookie : undefined;
            resourceInputs["footerLinks"] = state ? state.footerLinks : undefined;
            resourceInputs["headerBgColor"] = state ? state.headerBgColor : undefined;
            resourceInputs["httpOnlyCookieAttribute"] = state ? state.httpOnlyCookieAttribute : undefined;
            resourceInputs["landingPageDesign"] = state ? state.landingPageDesign : undefined;
            resourceInputs["logoUrl"] = state ? state.logoUrl : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["optionsPreflightBypass"] = state ? state.optionsPreflightBypass : undefined;
            resourceInputs["policies"] = state ? state.policies : undefined;
            resourceInputs["saasApp"] = state ? state.saasApp : undefined;
            resourceInputs["sameSiteCookieAttribute"] = state ? state.sameSiteCookieAttribute : undefined;
            resourceInputs["scimConfig"] = state ? state.scimConfig : undefined;
            resourceInputs["selfHostedDomains"] = state ? state.selfHostedDomains : undefined;
            resourceInputs["serviceAuth401Redirect"] = state ? state.serviceAuth401Redirect : undefined;
            resourceInputs["sessionDuration"] = state ? state.sessionDuration : undefined;
            resourceInputs["skipAppLauncherLoginPage"] = state ? state.skipAppLauncherLoginPage : undefined;
            resourceInputs["skipInterstitial"] = state ? state.skipInterstitial : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["allowAuthenticateViaWarp"] = args ? args.allowAuthenticateViaWarp : undefined;
            resourceInputs["allowedIdps"] = args ? args.allowedIdps : undefined;
            resourceInputs["appLauncherLogoUrl"] = args ? args.appLauncherLogoUrl : undefined;
            resourceInputs["appLauncherVisible"] = args ? args.appLauncherVisible : undefined;
            resourceInputs["autoRedirectToIdentity"] = args ? args.autoRedirectToIdentity : undefined;
            resourceInputs["bgColor"] = args ? args.bgColor : undefined;
            resourceInputs["corsHeaders"] = args ? args.corsHeaders : undefined;
            resourceInputs["customDenyMessage"] = args ? args.customDenyMessage : undefined;
            resourceInputs["customDenyUrl"] = args ? args.customDenyUrl : undefined;
            resourceInputs["customNonIdentityDenyUrl"] = args ? args.customNonIdentityDenyUrl : undefined;
            resourceInputs["customPages"] = args ? args.customPages : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["enableBindingCookie"] = args ? args.enableBindingCookie : undefined;
            resourceInputs["footerLinks"] = args ? args.footerLinks : undefined;
            resourceInputs["headerBgColor"] = args ? args.headerBgColor : undefined;
            resourceInputs["httpOnlyCookieAttribute"] = args ? args.httpOnlyCookieAttribute : undefined;
            resourceInputs["landingPageDesign"] = args ? args.landingPageDesign : undefined;
            resourceInputs["logoUrl"] = args ? args.logoUrl : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["optionsPreflightBypass"] = args ? args.optionsPreflightBypass : undefined;
            resourceInputs["policies"] = args ? args.policies : undefined;
            resourceInputs["saasApp"] = args ? args.saasApp : undefined;
            resourceInputs["sameSiteCookieAttribute"] = args ? args.sameSiteCookieAttribute : undefined;
            resourceInputs["scimConfig"] = args ? args.scimConfig : undefined;
            resourceInputs["selfHostedDomains"] = args ? args.selfHostedDomains : undefined;
            resourceInputs["serviceAuth401Redirect"] = args ? args.serviceAuth401Redirect : undefined;
            resourceInputs["sessionDuration"] = args ? args.sessionDuration : undefined;
            resourceInputs["skipAppLauncherLoginPage"] = args ? args.skipAppLauncherLoginPage : undefined;
            resourceInputs["skipInterstitial"] = args ? args.skipInterstitial : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["aud"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccessApplication.__pulumiType, name, resourceInputs, opts);
    }
}
exports.AccessApplication = AccessApplication;
/** @internal */
AccessApplication.__pulumiType = 'cloudflare:index/accessApplication:AccessApplication';
//# sourceMappingURL=accessApplication.js.map