import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Cloudflare Origin CA certificate used to protect traffic to your origin without involving a third party Certificate Authority.
 *
 * > Since v3.32.0
 *    all authentication schemes are supported for managing Origin CA certificates.
 *    Versions prior to v3.32.0 will still need to use `apiUserServiceKey`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 * import * as tls from "@pulumi/tls";
 *
 * const example = new tls.index.PrivateKey("example", {algorithm: "RSA"});
 * const exampleCertRequest = new tls.index.CertRequest("example", {
 *     privateKeyPem: example.privateKeyPem,
 *     subject: [{
 *         commonName: "",
 *         organization: "Terraform Test",
 *     }],
 * });
 * const exampleOriginCaCertificate = new cloudflare.OriginCaCertificate("example", {
 *     csr: exampleCertRequest.certRequestPem,
 *     hostnames: ["example.com"],
 *     requestType: "origin-rsa",
 *     requestedValidity: 7,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/originCaCertificate:OriginCaCertificate example <certificate_id>
 * ```
 */
export declare class OriginCaCertificate extends pulumi.CustomResource {
    /**
     * Get an existing OriginCaCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OriginCaCertificateState, opts?: pulumi.CustomResourceOptions): OriginCaCertificate;
    /**
     * Returns true if the given object is an instance of OriginCaCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is OriginCaCertificate;
    /**
     * The Origin CA certificate.
     */
    readonly certificate: pulumi.Output<string>;
    /**
     * The Certificate Signing Request. Must be newline-encoded. **Modifying this attribute will force creation of a new resource.**
     */
    readonly csr: pulumi.Output<string>;
    /**
     * The datetime when the certificate will expire.
     */
    readonly expiresOn: pulumi.Output<string>;
    /**
     * A list of hostnames or wildcard names bound to the certificate. **Modifying this attribute will force creation of a new resource.**
     */
    readonly hostnames: pulumi.Output<string[]>;
    readonly minDaysForRenewal: pulumi.Output<number | undefined>;
    /**
     * The signature type desired on the certificate. Available values: `origin-rsa`, `origin-ecc`, `keyless-certificate`. **Modifying this attribute will force creation of a new resource.**
     */
    readonly requestType: pulumi.Output<string>;
    /**
     * The number of days for which the certificate should be valid. Available values: `7`, `30`, `90`, `365`, `730`, `1095`, `5475`. **Modifying this attribute will force creation of a new resource.**
     */
    readonly requestedValidity: pulumi.Output<number>;
    /**
     * Create a OriginCaCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OriginCaCertificateArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering OriginCaCertificate resources.
 */
export interface OriginCaCertificateState {
    /**
     * The Origin CA certificate.
     */
    certificate?: pulumi.Input<string>;
    /**
     * The Certificate Signing Request. Must be newline-encoded. **Modifying this attribute will force creation of a new resource.**
     */
    csr?: pulumi.Input<string>;
    /**
     * The datetime when the certificate will expire.
     */
    expiresOn?: pulumi.Input<string>;
    /**
     * A list of hostnames or wildcard names bound to the certificate. **Modifying this attribute will force creation of a new resource.**
     */
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    minDaysForRenewal?: pulumi.Input<number>;
    /**
     * The signature type desired on the certificate. Available values: `origin-rsa`, `origin-ecc`, `keyless-certificate`. **Modifying this attribute will force creation of a new resource.**
     */
    requestType?: pulumi.Input<string>;
    /**
     * The number of days for which the certificate should be valid. Available values: `7`, `30`, `90`, `365`, `730`, `1095`, `5475`. **Modifying this attribute will force creation of a new resource.**
     */
    requestedValidity?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a OriginCaCertificate resource.
 */
export interface OriginCaCertificateArgs {
    /**
     * The Certificate Signing Request. Must be newline-encoded. **Modifying this attribute will force creation of a new resource.**
     */
    csr: pulumi.Input<string>;
    /**
     * A list of hostnames or wildcard names bound to the certificate. **Modifying this attribute will force creation of a new resource.**
     */
    hostnames: pulumi.Input<pulumi.Input<string>[]>;
    minDaysForRenewal?: pulumi.Input<number>;
    /**
     * The signature type desired on the certificate. Available values: `origin-rsa`, `origin-ecc`, `keyless-certificate`. **Modifying this attribute will force creation of a new resource.**
     */
    requestType: pulumi.Input<string>;
    /**
     * The number of days for which the certificate should be valid. Available values: `7`, `30`, `90`, `365`, `730`, `1095`, `5475`. **Modifying this attribute will force creation of a new resource.**
     */
    requestedValidity?: pulumi.Input<number>;
}
