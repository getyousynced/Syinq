import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
/**
 * Provides the ability to manage IP addresses that can be used by DNS records when
 * they are proxied through Cloudflare.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as cloudflare from "@pulumi/cloudflare";
 *
 * const example = new cloudflare.AddressMap("example", {
 *     accountId: "f037e56e89293a057740de681ac9abbe",
 *     description: "My address map",
 *     defaultSni: "*.example.com",
 *     enabled: true,
 *     ips: [
 *         {
 *             ip: "192.0.2.1",
 *         },
 *         {
 *             ip: "203.0.113.1",
 *         },
 *     ],
 *     memberships: [
 *         {
 *             identifier: "92f17202ed8bd63d69a66b86a49a8f6b",
 *             kind: "account",
 *         },
 *         {
 *             identifier: "023e105f4ecef8ad9ca31a8372d0c353",
 *             kind: "zone",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import cloudflare:index/addressMap:AddressMap example <account_id>/<address_map_id>
 * ```
 */
export declare class AddressMap extends pulumi.CustomResource {
    /**
     * Get an existing AddressMap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AddressMapState, opts?: pulumi.CustomResourceOptions): AddressMap;
    /**
     * Returns true if the given object is an instance of AddressMap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AddressMap;
    /**
     * The account identifier to target for the resource.
     */
    readonly accountId: pulumi.Output<string>;
    /**
     * If set to false, then the Address Map cannot be deleted via API. This is true for Cloudflare-managed maps.
     */
    readonly canDelete: pulumi.Output<boolean>;
    /**
     * If set to false, then the IPs on the Address Map cannot be modified via the API. This is true for Cloudflare-managed maps.
     */
    readonly canModifyIps: pulumi.Output<boolean>;
    /**
     * If you have legacy TLS clients which do not send the TLS server name indicator, then you can specify one default SNI on the map.
     */
    readonly defaultSni: pulumi.Output<string | undefined>;
    /**
     * Description of the address map.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * Whether the Address Map is enabled or not.
     */
    readonly enabled: pulumi.Output<boolean>;
    /**
     * The set of IPs on the Address Map.
     */
    readonly ips: pulumi.Output<outputs.AddressMapIp[] | undefined>;
    /**
     * Zones and Accounts which will be assigned IPs on this Address Map.
     */
    readonly memberships: pulumi.Output<outputs.AddressMapMembership[] | undefined>;
    /**
     * Create a AddressMap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AddressMapArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AddressMap resources.
 */
export interface AddressMapState {
    /**
     * The account identifier to target for the resource.
     */
    accountId?: pulumi.Input<string>;
    /**
     * If set to false, then the Address Map cannot be deleted via API. This is true for Cloudflare-managed maps.
     */
    canDelete?: pulumi.Input<boolean>;
    /**
     * If set to false, then the IPs on the Address Map cannot be modified via the API. This is true for Cloudflare-managed maps.
     */
    canModifyIps?: pulumi.Input<boolean>;
    /**
     * If you have legacy TLS clients which do not send the TLS server name indicator, then you can specify one default SNI on the map.
     */
    defaultSni?: pulumi.Input<string>;
    /**
     * Description of the address map.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the Address Map is enabled or not.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The set of IPs on the Address Map.
     */
    ips?: pulumi.Input<pulumi.Input<inputs.AddressMapIp>[]>;
    /**
     * Zones and Accounts which will be assigned IPs on this Address Map.
     */
    memberships?: pulumi.Input<pulumi.Input<inputs.AddressMapMembership>[]>;
}
/**
 * The set of arguments for constructing a AddressMap resource.
 */
export interface AddressMapArgs {
    /**
     * The account identifier to target for the resource.
     */
    accountId: pulumi.Input<string>;
    /**
     * If you have legacy TLS clients which do not send the TLS server name indicator, then you can specify one default SNI on the map.
     */
    defaultSni?: pulumi.Input<string>;
    /**
     * Description of the address map.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the Address Map is enabled or not.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The set of IPs on the Address Map.
     */
    ips?: pulumi.Input<pulumi.Input<inputs.AddressMapIp>[]>;
    /**
     * Zones and Accounts which will be assigned IPs on this Address Map.
     */
    memberships?: pulumi.Input<pulumi.Input<inputs.AddressMapMembership>[]>;
}
